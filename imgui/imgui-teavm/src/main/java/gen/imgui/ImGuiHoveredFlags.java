/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.imgui;

import java.util.Map;
import java.util.HashMap;
import gen.imgui.idl.IDLEnum;

public enum ImGuiHoveredFlags implements IDLEnum<ImGuiHoveredFlags> {

    CUSTOM(0),
    None(ImGuiHoveredFlags_None_NATIVE()),
    ChildWindows(ImGuiHoveredFlags_ChildWindows_NATIVE()),
    RootWindow(ImGuiHoveredFlags_RootWindow_NATIVE()),
    AnyWindow(ImGuiHoveredFlags_AnyWindow_NATIVE()),
    NoPopupHierarchy(ImGuiHoveredFlags_NoPopupHierarchy_NATIVE()),
    DockHierarchy(ImGuiHoveredFlags_DockHierarchy_NATIVE()),
    AllowWhenBlockedByPopup(ImGuiHoveredFlags_AllowWhenBlockedByPopup_NATIVE()),
    AllowWhenBlockedByActiveItem(ImGuiHoveredFlags_AllowWhenBlockedByActiveItem_NATIVE()),
    AllowWhenOverlappedByItem(ImGuiHoveredFlags_AllowWhenOverlappedByItem_NATIVE()),
    AllowWhenOverlappedByWindow(ImGuiHoveredFlags_AllowWhenOverlappedByWindow_NATIVE()),
    AllowWhenDisabled(ImGuiHoveredFlags_AllowWhenDisabled_NATIVE()),
    NoNavOverride(ImGuiHoveredFlags_NoNavOverride_NATIVE()),
    AllowWhenOverlapped(ImGuiHoveredFlags_AllowWhenOverlapped_NATIVE()),
    RectOnly(ImGuiHoveredFlags_RectOnly_NATIVE()),
    RootAndChildWindows(ImGuiHoveredFlags_RootAndChildWindows_NATIVE()),
    ForTooltip(ImGuiHoveredFlags_ForTooltip_NATIVE()),
    Stationary(ImGuiHoveredFlags_Stationary_NATIVE()),
    DelayNone(ImGuiHoveredFlags_DelayNone_NATIVE()),
    DelayShort(ImGuiHoveredFlags_DelayShort_NATIVE()),
    DelayNormal(ImGuiHoveredFlags_DelayNormal_NATIVE()),
    NoSharedDelay(ImGuiHoveredFlags_NoSharedDelay_NATIVE());

    private int value;

    private ImGuiHoveredFlags(int value) {
        this.value = value;
    }

    public int getValue() {
        return value;
    }

    public ImGuiHoveredFlags setValue(int value) {
        if (this != CUSTOM) {
            throw new RuntimeException("Cannot change none CUSTOM value");
        }
        this.value = value;
        return this;
    }

    public ImGuiHoveredFlags getCustom() {
        return CUSTOM;
    }

    public static final Map<Integer, ImGuiHoveredFlags> MAP = new HashMap<>();

    static {
        for (ImGuiHoveredFlags value : values()) {
            if (value != CUSTOM) {
                MAP.put(value.value, value);
            }
        }
    }

    /*[-TEAVM;-NATIVE]
return imgui.ImGuiHoveredFlags_None;
*/
    @org.teavm.jso.JSBody(script = "return imgui.ImGuiHoveredFlags_None;")
    private static native int ImGuiHoveredFlags_None_NATIVE();

    /*[-TEAVM;-NATIVE]
return imgui.ImGuiHoveredFlags_ChildWindows;
*/
    @org.teavm.jso.JSBody(script = "return imgui.ImGuiHoveredFlags_ChildWindows;")
    private static native int ImGuiHoveredFlags_ChildWindows_NATIVE();

    /*[-TEAVM;-NATIVE]
return imgui.ImGuiHoveredFlags_RootWindow;
*/
    @org.teavm.jso.JSBody(script = "return imgui.ImGuiHoveredFlags_RootWindow;")
    private static native int ImGuiHoveredFlags_RootWindow_NATIVE();

    /*[-TEAVM;-NATIVE]
return imgui.ImGuiHoveredFlags_AnyWindow;
*/
    @org.teavm.jso.JSBody(script = "return imgui.ImGuiHoveredFlags_AnyWindow;")
    private static native int ImGuiHoveredFlags_AnyWindow_NATIVE();

    /*[-TEAVM;-NATIVE]
return imgui.ImGuiHoveredFlags_NoPopupHierarchy;
*/
    @org.teavm.jso.JSBody(script = "return imgui.ImGuiHoveredFlags_NoPopupHierarchy;")
    private static native int ImGuiHoveredFlags_NoPopupHierarchy_NATIVE();

    /*[-TEAVM;-NATIVE]
return imgui.ImGuiHoveredFlags_DockHierarchy;
*/
    @org.teavm.jso.JSBody(script = "return imgui.ImGuiHoveredFlags_DockHierarchy;")
    private static native int ImGuiHoveredFlags_DockHierarchy_NATIVE();

    /*[-TEAVM;-NATIVE]
return imgui.ImGuiHoveredFlags_AllowWhenBlockedByPopup;
*/
    @org.teavm.jso.JSBody(script = "return imgui.ImGuiHoveredFlags_AllowWhenBlockedByPopup;")
    private static native int ImGuiHoveredFlags_AllowWhenBlockedByPopup_NATIVE();

    /*[-TEAVM;-NATIVE]
return imgui.ImGuiHoveredFlags_AllowWhenBlockedByActiveItem;
*/
    @org.teavm.jso.JSBody(script = "return imgui.ImGuiHoveredFlags_AllowWhenBlockedByActiveItem;")
    private static native int ImGuiHoveredFlags_AllowWhenBlockedByActiveItem_NATIVE();

    /*[-TEAVM;-NATIVE]
return imgui.ImGuiHoveredFlags_AllowWhenOverlappedByItem;
*/
    @org.teavm.jso.JSBody(script = "return imgui.ImGuiHoveredFlags_AllowWhenOverlappedByItem;")
    private static native int ImGuiHoveredFlags_AllowWhenOverlappedByItem_NATIVE();

    /*[-TEAVM;-NATIVE]
return imgui.ImGuiHoveredFlags_AllowWhenOverlappedByWindow;
*/
    @org.teavm.jso.JSBody(script = "return imgui.ImGuiHoveredFlags_AllowWhenOverlappedByWindow;")
    private static native int ImGuiHoveredFlags_AllowWhenOverlappedByWindow_NATIVE();

    /*[-TEAVM;-NATIVE]
return imgui.ImGuiHoveredFlags_AllowWhenDisabled;
*/
    @org.teavm.jso.JSBody(script = "return imgui.ImGuiHoveredFlags_AllowWhenDisabled;")
    private static native int ImGuiHoveredFlags_AllowWhenDisabled_NATIVE();

    /*[-TEAVM;-NATIVE]
return imgui.ImGuiHoveredFlags_NoNavOverride;
*/
    @org.teavm.jso.JSBody(script = "return imgui.ImGuiHoveredFlags_NoNavOverride;")
    private static native int ImGuiHoveredFlags_NoNavOverride_NATIVE();

    /*[-TEAVM;-NATIVE]
return imgui.ImGuiHoveredFlags_AllowWhenOverlapped;
*/
    @org.teavm.jso.JSBody(script = "return imgui.ImGuiHoveredFlags_AllowWhenOverlapped;")
    private static native int ImGuiHoveredFlags_AllowWhenOverlapped_NATIVE();

    /*[-TEAVM;-NATIVE]
return imgui.ImGuiHoveredFlags_RectOnly;
*/
    @org.teavm.jso.JSBody(script = "return imgui.ImGuiHoveredFlags_RectOnly;")
    private static native int ImGuiHoveredFlags_RectOnly_NATIVE();

    /*[-TEAVM;-NATIVE]
return imgui.ImGuiHoveredFlags_RootAndChildWindows;
*/
    @org.teavm.jso.JSBody(script = "return imgui.ImGuiHoveredFlags_RootAndChildWindows;")
    private static native int ImGuiHoveredFlags_RootAndChildWindows_NATIVE();

    /*[-TEAVM;-NATIVE]
return imgui.ImGuiHoveredFlags_ForTooltip;
*/
    @org.teavm.jso.JSBody(script = "return imgui.ImGuiHoveredFlags_ForTooltip;")
    private static native int ImGuiHoveredFlags_ForTooltip_NATIVE();

    /*[-TEAVM;-NATIVE]
return imgui.ImGuiHoveredFlags_Stationary;
*/
    @org.teavm.jso.JSBody(script = "return imgui.ImGuiHoveredFlags_Stationary;")
    private static native int ImGuiHoveredFlags_Stationary_NATIVE();

    /*[-TEAVM;-NATIVE]
return imgui.ImGuiHoveredFlags_DelayNone;
*/
    @org.teavm.jso.JSBody(script = "return imgui.ImGuiHoveredFlags_DelayNone;")
    private static native int ImGuiHoveredFlags_DelayNone_NATIVE();

    /*[-TEAVM;-NATIVE]
return imgui.ImGuiHoveredFlags_DelayShort;
*/
    @org.teavm.jso.JSBody(script = "return imgui.ImGuiHoveredFlags_DelayShort;")
    private static native int ImGuiHoveredFlags_DelayShort_NATIVE();

    /*[-TEAVM;-NATIVE]
return imgui.ImGuiHoveredFlags_DelayNormal;
*/
    @org.teavm.jso.JSBody(script = "return imgui.ImGuiHoveredFlags_DelayNormal;")
    private static native int ImGuiHoveredFlags_DelayNormal_NATIVE();

    /*[-TEAVM;-NATIVE]
return imgui.ImGuiHoveredFlags_NoSharedDelay;
*/
    @org.teavm.jso.JSBody(script = "return imgui.ImGuiHoveredFlags_NoSharedDelay;")
    private static native int ImGuiHoveredFlags_NoSharedDelay_NATIVE();
}
