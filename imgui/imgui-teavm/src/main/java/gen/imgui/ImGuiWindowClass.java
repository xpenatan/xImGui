/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.imgui;

import gen.imgui.idl.IDLBase;

public class ImGuiWindowClass extends IDLBase {

    static public final ImGuiWindowClass NULL = ImGuiWindowClass.createInstance();

    static public final ImGuiWindowClass T_01 = ImGuiWindowClass.createInstance();

    static public final ImGuiWindowClass T_02 = ImGuiWindowClass.createInstance();

    static public final ImGuiWindowClass T_03 = ImGuiWindowClass.createInstance();

    public ImGuiWindowClass() {
        int addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new imgui.ImGuiWindowClass();
return imgui.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new imgui.ImGuiWindowClass();return imgui.getPointer(jsObj);")
    public static native int internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected ImGuiWindowClass(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static ImGuiWindowClass createInstance() {
        return new ImGuiWindowClass((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);
imgui.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);imgui.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public int get_ClassId() {
        return internal_native_get_ClassId(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);
return jsObj.get_ClassId();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);return jsObj.get_ClassId();")
    public static native int internal_native_get_ClassId(int this_addr);

    public void set_ClassId(int ClassId) {
        internal_native_set_ClassId(native_address, ClassId);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);
jsObj.set_ClassId(ClassId);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "ClassId"}, script = "var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);jsObj.set_ClassId(ClassId);")
    public static native void internal_native_set_ClassId(int this_addr, int ClassId);

    public int get_ParentViewportId() {
        return internal_native_get_ParentViewportId(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);
return jsObj.get_ParentViewportId();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);return jsObj.get_ParentViewportId();")
    public static native int internal_native_get_ParentViewportId(int this_addr);

    public void set_ParentViewportId(int ParentViewportId) {
        internal_native_set_ParentViewportId(native_address, ParentViewportId);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);
jsObj.set_ParentViewportId(ParentViewportId);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "ParentViewportId"}, script = "var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);jsObj.set_ParentViewportId(ParentViewportId);")
    public static native void internal_native_set_ParentViewportId(int this_addr, int ParentViewportId);

    public int get_FocusRouteParentWindowId() {
        return internal_native_get_FocusRouteParentWindowId(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);
return jsObj.get_FocusRouteParentWindowId();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);return jsObj.get_FocusRouteParentWindowId();")
    public static native int internal_native_get_FocusRouteParentWindowId(int this_addr);

    public void set_FocusRouteParentWindowId(int FocusRouteParentWindowId) {
        internal_native_set_FocusRouteParentWindowId(native_address, FocusRouteParentWindowId);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);
jsObj.set_FocusRouteParentWindowId(FocusRouteParentWindowId);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "FocusRouteParentWindowId"}, script = "var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);jsObj.set_FocusRouteParentWindowId(FocusRouteParentWindowId);")
    public static native void internal_native_set_FocusRouteParentWindowId(int this_addr, int FocusRouteParentWindowId);

    public ImGuiViewportFlags get_ViewportFlagsOverrideSet() {
        int value = internal_native_get_ViewportFlagsOverrideSet(native_address);
        return ImGuiViewportFlags.MAP.get(value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);
return jsObj.get_ViewportFlagsOverrideSet();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);return jsObj.get_ViewportFlagsOverrideSet();")
    public static native int internal_native_get_ViewportFlagsOverrideSet(int this_addr);

    public void set_ViewportFlagsOverrideSet(ImGuiViewportFlags ViewportFlagsOverrideSet) {
        internal_native_set_ViewportFlagsOverrideSet(native_address, (int) ViewportFlagsOverrideSet.getValue());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);
jsObj.set_ViewportFlagsOverrideSet(ViewportFlagsOverrideSet);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "ViewportFlagsOverrideSet"}, script = "var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);jsObj.set_ViewportFlagsOverrideSet(ViewportFlagsOverrideSet);")
    public static native void internal_native_set_ViewportFlagsOverrideSet(int this_addr, int ViewportFlagsOverrideSet);

    public ImGuiViewportFlags get_ViewportFlagsOverrideClear() {
        int value = internal_native_get_ViewportFlagsOverrideClear(native_address);
        return ImGuiViewportFlags.MAP.get(value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);
return jsObj.get_ViewportFlagsOverrideClear();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);return jsObj.get_ViewportFlagsOverrideClear();")
    public static native int internal_native_get_ViewportFlagsOverrideClear(int this_addr);

    public void set_ViewportFlagsOverrideClear(ImGuiViewportFlags ViewportFlagsOverrideClear) {
        internal_native_set_ViewportFlagsOverrideClear(native_address, (int) ViewportFlagsOverrideClear.getValue());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);
jsObj.set_ViewportFlagsOverrideClear(ViewportFlagsOverrideClear);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "ViewportFlagsOverrideClear"}, script = "var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);jsObj.set_ViewportFlagsOverrideClear(ViewportFlagsOverrideClear);")
    public static native void internal_native_set_ViewportFlagsOverrideClear(int this_addr, int ViewportFlagsOverrideClear);

    public ImGuiTabItemFlags get_TabItemFlagsOverrideSet() {
        int value = internal_native_get_TabItemFlagsOverrideSet(native_address);
        return ImGuiTabItemFlags.MAP.get(value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);
return jsObj.get_TabItemFlagsOverrideSet();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);return jsObj.get_TabItemFlagsOverrideSet();")
    public static native int internal_native_get_TabItemFlagsOverrideSet(int this_addr);

    public void set_TabItemFlagsOverrideSet(ImGuiTabItemFlags TabItemFlagsOverrideSet) {
        internal_native_set_TabItemFlagsOverrideSet(native_address, (int) TabItemFlagsOverrideSet.getValue());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);
jsObj.set_TabItemFlagsOverrideSet(TabItemFlagsOverrideSet);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "TabItemFlagsOverrideSet"}, script = "var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);jsObj.set_TabItemFlagsOverrideSet(TabItemFlagsOverrideSet);")
    public static native void internal_native_set_TabItemFlagsOverrideSet(int this_addr, int TabItemFlagsOverrideSet);

    public ImGuiDockNodeFlags get_DockNodeFlagsOverrideSet() {
        int value = internal_native_get_DockNodeFlagsOverrideSet(native_address);
        return ImGuiDockNodeFlags.MAP.get(value);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);
return jsObj.get_DockNodeFlagsOverrideSet();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);return jsObj.get_DockNodeFlagsOverrideSet();")
    public static native int internal_native_get_DockNodeFlagsOverrideSet(int this_addr);

    public void set_DockNodeFlagsOverrideSet(ImGuiDockNodeFlags DockNodeFlagsOverrideSet) {
        internal_native_set_DockNodeFlagsOverrideSet(native_address, (int) DockNodeFlagsOverrideSet.getValue());
    }

    /*[-TEAVM;-NATIVE]
var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);
jsObj.set_DockNodeFlagsOverrideSet(DockNodeFlagsOverrideSet);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "DockNodeFlagsOverrideSet"}, script = "var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);jsObj.set_DockNodeFlagsOverrideSet(DockNodeFlagsOverrideSet);")
    public static native void internal_native_set_DockNodeFlagsOverrideSet(int this_addr, int DockNodeFlagsOverrideSet);

    public boolean get_DockingAlwaysTabBar() {
        return internal_native_get_DockingAlwaysTabBar(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);
return jsObj.get_DockingAlwaysTabBar();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);return jsObj.get_DockingAlwaysTabBar();")
    public static native boolean internal_native_get_DockingAlwaysTabBar(int this_addr);

    public void set_DockingAlwaysTabBar(boolean DockingAlwaysTabBar) {
        internal_native_set_DockingAlwaysTabBar(native_address, DockingAlwaysTabBar);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);
jsObj.set_DockingAlwaysTabBar(DockingAlwaysTabBar);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "DockingAlwaysTabBar"}, script = "var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);jsObj.set_DockingAlwaysTabBar(DockingAlwaysTabBar);")
    public static native void internal_native_set_DockingAlwaysTabBar(int this_addr, boolean DockingAlwaysTabBar);

    public boolean get_DockingAllowUnclassed() {
        return internal_native_get_DockingAllowUnclassed(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);
return jsObj.get_DockingAllowUnclassed();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);return jsObj.get_DockingAllowUnclassed();")
    public static native boolean internal_native_get_DockingAllowUnclassed(int this_addr);

    public void set_DockingAllowUnclassed(boolean DockingAllowUnclassed) {
        internal_native_set_DockingAllowUnclassed(native_address, DockingAllowUnclassed);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);
jsObj.set_DockingAllowUnclassed(DockingAllowUnclassed);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "DockingAllowUnclassed"}, script = "var jsObj = imgui.wrapPointer(this_addr, imgui.ImGuiWindowClass);jsObj.set_DockingAllowUnclassed(DockingAllowUnclassed);")
    public static native void internal_native_set_DockingAllowUnclassed(int this_addr, boolean DockingAllowUnclassed);
}
