/*
  -------------------------------------------------------
   This file was generated by JParser
 
   Do not make changes to this file
  -------------------------------------------------------
*/
package gen.imgui;

import gen.imgui.idl.IDLBase;

public class VecCmdBuffer extends IDLBase {

    private ImDrawCmd ImDrawCmd_TEMP_GEN_0;

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected VecCmdBuffer(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static VecCmdBuffer createInstance() {
        return new VecCmdBuffer((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = imgui.wrapPointer(this_addr, imgui.VecCmdBuffer);
      imgui.destroy(jsObj);
    */
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = imgui.wrapPointer(this_addr, imgui.VecCmdBuffer);imgui.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public ImDrawCmd getData(int index) {
        int pointer = internal_native_getData(native_address, index);
        if (pointer == 0)
            return null;
        if (ImDrawCmd_TEMP_GEN_0 == null)
            ImDrawCmd_TEMP_GEN_0 = ImDrawCmd.createInstance();
        ImDrawCmd_TEMP_GEN_0.internal_reset(pointer, false);
        return ImDrawCmd_TEMP_GEN_0;
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = imgui.wrapPointer(this_addr, imgui.VecCmdBuffer);
      var returnedJSObj = jsObj.getData(index);
      if(!returnedJSObj.hasOwnProperty('ptr')) return 0;
      return imgui.getPointer(returnedJSObj);
    */
    @org.teavm.jso.JSBody(params = {"this_addr", "index"}, script = "var jsObj = imgui.wrapPointer(this_addr, imgui.VecCmdBuffer);var returnedJSObj = jsObj.getData(index);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return imgui.getPointer(returnedJSObj);")
    public static native int internal_native_getData(int this_addr, int index);

    public int size() {
        return internal_native_size(native_address);
    }

    /*
      [-TEAVM;-NATIVE]
      var jsObj = imgui.wrapPointer(this_addr, imgui.VecCmdBuffer);
      var returnedJSObj = jsObj.size();
      return returnedJSObj;
    */
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = imgui.wrapPointer(this_addr, imgui.VecCmdBuffer);var returnedJSObj = jsObj.size();return returnedJSObj;")
    public static native int internal_native_size(int this_addr);
}
