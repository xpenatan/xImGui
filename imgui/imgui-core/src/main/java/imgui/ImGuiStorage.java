/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package imgui;

import imgui.idl.IDLBase;

public class ImGuiStorage extends IDLBase {

    static public final ImGuiStorage NULL = ImGuiStorage.native_new();

    static public final ImGuiStorage T_01 = ImGuiStorage.native_new();

    static public final ImGuiStorage T_02 = ImGuiStorage.native_new();

    static public final ImGuiStorage T_03 = ImGuiStorage.native_new();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected ImGuiStorage(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static ImGuiStorage native_new() {
        return new ImGuiStorage((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
ImGuiStorage* nativeObject = (ImGuiStorage*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public void Clear() {
        internal_native_Clear(native_address);
    }

    /*[-JNI;-NATIVE]
ImGuiStorage* nativeObject = (ImGuiStorage*)this_addr;
nativeObject->Clear();
*/
    public static native void internal_native_Clear(long this_addr);

    public int GetInt(int key, int default_val) {
        return internal_native_GetInt(native_address, key, default_val);
    }

    /*[-JNI;-NATIVE]
ImGuiStorage* nativeObject = (ImGuiStorage*)this_addr;
return nativeObject->GetInt((int)key, (int)default_val);
*/
    public static native int internal_native_GetInt(long this_addr, int key, int default_val);

    public int GetInt(int key) {
        return internal_native_GetInt(native_address, key);
    }

    /*[-JNI;-NATIVE]
ImGuiStorage* nativeObject = (ImGuiStorage*)this_addr;
return nativeObject->GetInt((int)key);
*/
    public static native int internal_native_GetInt(long this_addr, int key);

    public void SetInt(int key, int val) {
        internal_native_SetInt(native_address, key, val);
    }

    /*[-JNI;-NATIVE]
ImGuiStorage* nativeObject = (ImGuiStorage*)this_addr;
nativeObject->SetInt((int)key, (int)val);
*/
    public static native void internal_native_SetInt(long this_addr, int key, int val);

    public boolean GetBool(int key, boolean default_val) {
        return internal_native_GetBool(native_address, key, default_val);
    }

    /*[-JNI;-NATIVE]
ImGuiStorage* nativeObject = (ImGuiStorage*)this_addr;
return nativeObject->GetBool((int)key, default_val);
*/
    public static native boolean internal_native_GetBool(long this_addr, int key, boolean default_val);

    public boolean GetBool(int key) {
        return internal_native_GetBool(native_address, key);
    }

    /*[-JNI;-NATIVE]
ImGuiStorage* nativeObject = (ImGuiStorage*)this_addr;
return nativeObject->GetBool((int)key);
*/
    public static native boolean internal_native_GetBool(long this_addr, int key);

    public void SetBool(int key, boolean val) {
        internal_native_SetBool(native_address, key, val);
    }

    /*[-JNI;-NATIVE]
ImGuiStorage* nativeObject = (ImGuiStorage*)this_addr;
nativeObject->SetBool((int)key, val);
*/
    public static native void internal_native_SetBool(long this_addr, int key, boolean val);

    public float GetFloat(int key, float default_val) {
        return internal_native_GetFloat(native_address, key, default_val);
    }

    /*[-JNI;-NATIVE]
ImGuiStorage* nativeObject = (ImGuiStorage*)this_addr;
return nativeObject->GetFloat((int)key, (float)default_val);
*/
    public static native float internal_native_GetFloat(long this_addr, int key, float default_val);

    public float GetFloat(int key) {
        return internal_native_GetFloat(native_address, key);
    }

    /*[-JNI;-NATIVE]
ImGuiStorage* nativeObject = (ImGuiStorage*)this_addr;
return nativeObject->GetFloat((int)key);
*/
    public static native float internal_native_GetFloat(long this_addr, int key);

    public void SetFloat(int key, float val) {
        internal_native_SetFloat(native_address, key, val);
    }

    /*[-JNI;-NATIVE]
ImGuiStorage* nativeObject = (ImGuiStorage*)this_addr;
nativeObject->SetFloat((int)key, (float)val);
*/
    public static native void internal_native_SetFloat(long this_addr, int key, float val);
}
