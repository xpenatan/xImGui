/*
  -------------------------------------------------------
   This file was generated by JParser
 
   Do not make changes to this file
  -------------------------------------------------------
*/
package imgui;

import imgui.idl.IDLBase;

public class ImDrawCmd extends IDLBase {

    private ImVec4 ImVec4_TEMP_GEN_0;

    /*
      [-JNI;-NATIVE]
              #if defined(_MSC_VER) && _MSC_VER <= 1500 // MSVC 2008 or earlier
              #include <stddef.h>     // intptr_t
              #else
              #include <stdint.h>     // intptr_t
              #endif
    */
    public static ImDrawCmd createInstance() {
        return new ImDrawCmd((byte) 0, (char) 0);
    }

    private ImDrawCmd(byte v, char c) {
    }

    public int getTextureId() {
        return getTextureIdNATIVE(native_address);
    }

    /*
      [-JNI;-NATIVE]
              ImDrawCmd* nativeObject = (ImDrawCmd*)addr;
              int textureId = ImHelper::getTextureId(nativeObject);
              return textureId;
    */
    private static native int getTextureIdNATIVE(long addr);

    public int getIdxOffset() {
        return getIdxOffsetNATIVE(native_address);
    }

    /*
      [-JNI;-NATIVE]
              ImDrawCmd* nativeObject = (ImDrawCmd*)addr;
              return nativeObject->IdxOffset;
    */
    private static native int getIdxOffsetNATIVE(long addr);

    public int getVtxOffset() {
        return getVtxOffsetNATIVE(native_address);
    }

    /*
      [-JNI;-NATIVE]
              ImDrawCmd* nativeObject = (ImDrawCmd*)addr;
              return nativeObject->VtxOffset;
    */
    private static native int getVtxOffsetNATIVE(long addr);

    public int getElemCount() {
        return getElemCountNATIVE(native_address);
    }

    /*
      [-JNI;-NATIVE]
              ImDrawCmd* nativeObject = (ImDrawCmd*)addr;
              return nativeObject->ElemCount;
    */
    private static native int getElemCountNATIVE(long addr);

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImDrawCmd* nativeObject = (ImDrawCmd*)this_addr;
      delete nativeObject;
    */
    public static native void internal_native_deleteNative(long this_addr);

    public ImVec4 get_ClipRect() {
        long pointer = internal_native_get_ClipRect(native_address);
        if (pointer == 0)
            return null;
        if (ImVec4_TEMP_GEN_0 == null)
            ImVec4_TEMP_GEN_0 = ImVec4.createInstance();
        ImVec4_TEMP_GEN_0.internal_reset(pointer, false);
        return ImVec4_TEMP_GEN_0;
    }

    /*
      [-JNI;-NATIVE]
      ImDrawCmd* nativeObject = (ImDrawCmd*)this_addr;
      return (jlong)&nativeObject->ClipRect;
    */
    public static native long internal_native_get_ClipRect(long this_addr);

    public void set_ClipRect(ImVec4 ClipRect) {
        internal_native_set_ClipRect(native_address, ClipRect.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImDrawCmd* nativeObject = (ImDrawCmd*)this_addr;
      nativeObject->ClipRect = *((ImVec4*)ClipRect_addr);
    */
    public static native void internal_native_set_ClipRect(long this_addr, long ClipRect_addr);

    public int get_VtxOffset() {
        return internal_native_get_VtxOffset(native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImDrawCmd* nativeObject = (ImDrawCmd*)this_addr;
      return nativeObject->VtxOffset;
    */
    public static native int internal_native_get_VtxOffset(long this_addr);

    public void set_VtxOffset(int VtxOffset) {
        internal_native_set_VtxOffset(native_address, VtxOffset);
    }

    /*
      [-JNI;-NATIVE]
      ImDrawCmd* nativeObject = (ImDrawCmd*)this_addr;
      nativeObject->VtxOffset = VtxOffset;
    */
    public static native void internal_native_set_VtxOffset(long this_addr, int VtxOffset);

    public int get_IdxOffset() {
        return internal_native_get_IdxOffset(native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImDrawCmd* nativeObject = (ImDrawCmd*)this_addr;
      return nativeObject->IdxOffset;
    */
    public static native int internal_native_get_IdxOffset(long this_addr);

    public void set_IdxOffset(int IdxOffset) {
        internal_native_set_IdxOffset(native_address, IdxOffset);
    }

    /*
      [-JNI;-NATIVE]
      ImDrawCmd* nativeObject = (ImDrawCmd*)this_addr;
      nativeObject->IdxOffset = IdxOffset;
    */
    public static native void internal_native_set_IdxOffset(long this_addr, int IdxOffset);

    public int get_ElemCount() {
        return internal_native_get_ElemCount(native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImDrawCmd* nativeObject = (ImDrawCmd*)this_addr;
      return nativeObject->ElemCount;
    */
    public static native int internal_native_get_ElemCount(long this_addr);

    public void set_ElemCount(int ElemCount) {
        internal_native_set_ElemCount(native_address, ElemCount);
    }

    /*
      [-JNI;-NATIVE]
      ImDrawCmd* nativeObject = (ImDrawCmd*)this_addr;
      nativeObject->ElemCount = ElemCount;
    */
    public static native void internal_native_set_ElemCount(long this_addr, int ElemCount);
}
