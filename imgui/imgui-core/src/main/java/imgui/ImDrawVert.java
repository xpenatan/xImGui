/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package imgui;

import com.github.xpenatan.jParser.idl.IDLBase;

public class ImDrawVert extends IDLBase {

    private ImVec2 ImVec2_TEMP_GEN_0;

    private ImVec2 ImVec2_TEMP_GEN_1;

    static public final ImDrawVert NULL = ImDrawVert.native_new();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected ImDrawVert(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static ImDrawVert native_new() {
        return new ImDrawVert((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
ImDrawVert* nativeObject = (ImDrawVert*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public ImVec2 get_pos() {
        long pointer = internal_native_get_pos(native_address);
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_GEN_0 == null)
            ImVec2_TEMP_GEN_0 = ImVec2.native_new();
        ImVec2_TEMP_GEN_0.internal_reset(pointer, false);
        return ImVec2_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
ImDrawVert* nativeObject = (ImDrawVert*)this_addr;
return (jlong)&nativeObject->pos;
*/
    public static native long internal_native_get_pos(long this_addr);

    public void set_pos(ImVec2 pos) {
        internal_native_set_pos(native_address, pos.native_address);
    }

    /*[-JNI;-NATIVE]
ImDrawVert* nativeObject = (ImDrawVert*)this_addr;
nativeObject->pos = *((ImVec2*)pos_addr);
*/
    public static native void internal_native_set_pos(long this_addr, long pos_addr);

    public ImVec2 get_uv() {
        long pointer = internal_native_get_uv(native_address);
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_GEN_1 == null)
            ImVec2_TEMP_GEN_1 = ImVec2.native_new();
        ImVec2_TEMP_GEN_1.internal_reset(pointer, false);
        return ImVec2_TEMP_GEN_1;
    }

    /*[-JNI;-NATIVE]
ImDrawVert* nativeObject = (ImDrawVert*)this_addr;
return (jlong)&nativeObject->uv;
*/
    public static native long internal_native_get_uv(long this_addr);

    public void set_uv(ImVec2 uv) {
        internal_native_set_uv(native_address, uv.native_address);
    }

    /*[-JNI;-NATIVE]
ImDrawVert* nativeObject = (ImDrawVert*)this_addr;
nativeObject->uv = *((ImVec2*)uv_addr);
*/
    public static native void internal_native_set_uv(long this_addr, long uv_addr);

    public int get_col() {
        return internal_native_get_col(native_address);
    }

    /*[-JNI;-NATIVE]
ImDrawVert* nativeObject = (ImDrawVert*)this_addr;
return nativeObject->col;
*/
    public static native int internal_native_get_col(long this_addr);

    public void set_col(int col) {
        internal_native_set_col(native_address, col);
    }

    /*[-JNI;-NATIVE]
ImDrawVert* nativeObject = (ImDrawVert*)this_addr;
nativeObject->col = col;
*/
    public static native void internal_native_set_col(long this_addr, int col);
}
