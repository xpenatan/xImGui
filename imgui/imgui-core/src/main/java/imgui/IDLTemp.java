/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package imgui;

import com.github.xpenatan.jParser.idl.IDLBase;
import imgui.idl.helper.IDLIntArray;
import imgui.idl.helper.IDLFloatArray;
import imgui.idl.helper.IDLBoolArray;

public class IDLTemp extends IDLBase {

    static private IDLIntArray IDLIntArray_TEMP_STATIC_GEN_0;

    static private IDLIntArray IDLIntArray_TEMP_STATIC_GEN_1;

    static private IDLIntArray IDLIntArray_TEMP_STATIC_GEN_2;

    static private IDLIntArray IDLIntArray_TEMP_STATIC_GEN_3;

    static private IDLFloatArray IDLFloatArray_TEMP_STATIC_GEN_0;

    static private IDLFloatArray IDLFloatArray_TEMP_STATIC_GEN_1;

    static private IDLFloatArray IDLFloatArray_TEMP_STATIC_GEN_2;

    static private IDLFloatArray IDLFloatArray_TEMP_STATIC_GEN_3;

    static private IDLBoolArray IDLBoolArray_TEMP_STATIC_GEN_0;

    static private IDLBoolArray IDLBoolArray_TEMP_STATIC_GEN_1;

    static private IDLBoolArray IDLBoolArray_TEMP_STATIC_GEN_2;

    static private IDLBoolArray IDLBoolArray_TEMP_STATIC_GEN_3;

    static public final IDLTemp NULL = IDLTemp.native_new();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected IDLTemp(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static IDLTemp native_new() {
        return new IDLTemp((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
IDLTemp* nativeObject = (IDLTemp*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public static IDLIntArray Int_1(int value) {
        long pointer = internal_native_Int_1__0(value);
        if (pointer == 0)
            return IDLIntArray.NULL;
        if (IDLIntArray_TEMP_STATIC_GEN_0 == null)
            IDLIntArray_TEMP_STATIC_GEN_0 = IDLIntArray.native_new();
        IDLIntArray_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return IDLIntArray_TEMP_STATIC_GEN_0;
    }

    /*[-JNI;-NATIVE]
return (jlong)IDLTemp::Int_1((int)value);
*/
    public static native long internal_native_Int_1__0(int value);

    public static IDLIntArray Int_2(int value) {
        long pointer = internal_native_Int_2__0(value);
        if (pointer == 0)
            return IDLIntArray.NULL;
        if (IDLIntArray_TEMP_STATIC_GEN_1 == null)
            IDLIntArray_TEMP_STATIC_GEN_1 = IDLIntArray.native_new();
        IDLIntArray_TEMP_STATIC_GEN_1.internal_reset(pointer, false);
        return IDLIntArray_TEMP_STATIC_GEN_1;
    }

    /*[-JNI;-NATIVE]
return (jlong)IDLTemp::Int_2((int)value);
*/
    public static native long internal_native_Int_2__0(int value);

    public static IDLIntArray Int_3(int value) {
        long pointer = internal_native_Int_3__0(value);
        if (pointer == 0)
            return IDLIntArray.NULL;
        if (IDLIntArray_TEMP_STATIC_GEN_2 == null)
            IDLIntArray_TEMP_STATIC_GEN_2 = IDLIntArray.native_new();
        IDLIntArray_TEMP_STATIC_GEN_2.internal_reset(pointer, false);
        return IDLIntArray_TEMP_STATIC_GEN_2;
    }

    /*[-JNI;-NATIVE]
return (jlong)IDLTemp::Int_3((int)value);
*/
    public static native long internal_native_Int_3__0(int value);

    public static IDLIntArray Int_4(int value) {
        long pointer = internal_native_Int_4__0(value);
        if (pointer == 0)
            return IDLIntArray.NULL;
        if (IDLIntArray_TEMP_STATIC_GEN_3 == null)
            IDLIntArray_TEMP_STATIC_GEN_3 = IDLIntArray.native_new();
        IDLIntArray_TEMP_STATIC_GEN_3.internal_reset(pointer, false);
        return IDLIntArray_TEMP_STATIC_GEN_3;
    }

    /*[-JNI;-NATIVE]
return (jlong)IDLTemp::Int_4((int)value);
*/
    public static native long internal_native_Int_4__0(int value);

    public static IDLFloatArray Float_1(float value) {
        long pointer = internal_native_Float_1__0(value);
        if (pointer == 0)
            return IDLFloatArray.NULL;
        if (IDLFloatArray_TEMP_STATIC_GEN_0 == null)
            IDLFloatArray_TEMP_STATIC_GEN_0 = IDLFloatArray.native_new();
        IDLFloatArray_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return IDLFloatArray_TEMP_STATIC_GEN_0;
    }

    /*[-JNI;-NATIVE]
return (jlong)IDLTemp::Float_1((float)value);
*/
    public static native long internal_native_Float_1__0(float value);

    public static IDLFloatArray Float_2(float value) {
        long pointer = internal_native_Float_2__0(value);
        if (pointer == 0)
            return IDLFloatArray.NULL;
        if (IDLFloatArray_TEMP_STATIC_GEN_1 == null)
            IDLFloatArray_TEMP_STATIC_GEN_1 = IDLFloatArray.native_new();
        IDLFloatArray_TEMP_STATIC_GEN_1.internal_reset(pointer, false);
        return IDLFloatArray_TEMP_STATIC_GEN_1;
    }

    /*[-JNI;-NATIVE]
return (jlong)IDLTemp::Float_2((float)value);
*/
    public static native long internal_native_Float_2__0(float value);

    public static IDLFloatArray Float_3(float value) {
        long pointer = internal_native_Float_3__0(value);
        if (pointer == 0)
            return IDLFloatArray.NULL;
        if (IDLFloatArray_TEMP_STATIC_GEN_2 == null)
            IDLFloatArray_TEMP_STATIC_GEN_2 = IDLFloatArray.native_new();
        IDLFloatArray_TEMP_STATIC_GEN_2.internal_reset(pointer, false);
        return IDLFloatArray_TEMP_STATIC_GEN_2;
    }

    /*[-JNI;-NATIVE]
return (jlong)IDLTemp::Float_3((float)value);
*/
    public static native long internal_native_Float_3__0(float value);

    public static IDLFloatArray Float_4(float value) {
        long pointer = internal_native_Float_4__0(value);
        if (pointer == 0)
            return IDLFloatArray.NULL;
        if (IDLFloatArray_TEMP_STATIC_GEN_3 == null)
            IDLFloatArray_TEMP_STATIC_GEN_3 = IDLFloatArray.native_new();
        IDLFloatArray_TEMP_STATIC_GEN_3.internal_reset(pointer, false);
        return IDLFloatArray_TEMP_STATIC_GEN_3;
    }

    /*[-JNI;-NATIVE]
return (jlong)IDLTemp::Float_4((float)value);
*/
    public static native long internal_native_Float_4__0(float value);

    public static IDLBoolArray Bool_1(boolean value) {
        long pointer = internal_native_Bool_1__0(value);
        if (pointer == 0)
            return IDLBoolArray.NULL;
        if (IDLBoolArray_TEMP_STATIC_GEN_0 == null)
            IDLBoolArray_TEMP_STATIC_GEN_0 = IDLBoolArray.native_new();
        IDLBoolArray_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return IDLBoolArray_TEMP_STATIC_GEN_0;
    }

    /*[-JNI;-NATIVE]
return (jlong)IDLTemp::Bool_1(value);
*/
    public static native long internal_native_Bool_1__0(boolean value);

    public static IDLBoolArray Bool_2(boolean value) {
        long pointer = internal_native_Bool_2__0(value);
        if (pointer == 0)
            return IDLBoolArray.NULL;
        if (IDLBoolArray_TEMP_STATIC_GEN_1 == null)
            IDLBoolArray_TEMP_STATIC_GEN_1 = IDLBoolArray.native_new();
        IDLBoolArray_TEMP_STATIC_GEN_1.internal_reset(pointer, false);
        return IDLBoolArray_TEMP_STATIC_GEN_1;
    }

    /*[-JNI;-NATIVE]
return (jlong)IDLTemp::Bool_2(value);
*/
    public static native long internal_native_Bool_2__0(boolean value);

    public static IDLBoolArray Bool_3(boolean value) {
        long pointer = internal_native_Bool_3__0(value);
        if (pointer == 0)
            return IDLBoolArray.NULL;
        if (IDLBoolArray_TEMP_STATIC_GEN_2 == null)
            IDLBoolArray_TEMP_STATIC_GEN_2 = IDLBoolArray.native_new();
        IDLBoolArray_TEMP_STATIC_GEN_2.internal_reset(pointer, false);
        return IDLBoolArray_TEMP_STATIC_GEN_2;
    }

    /*[-JNI;-NATIVE]
return (jlong)IDLTemp::Bool_3(value);
*/
    public static native long internal_native_Bool_3__0(boolean value);

    public static IDLBoolArray Bool_4(boolean value) {
        long pointer = internal_native_Bool_4__0(value);
        if (pointer == 0)
            return IDLBoolArray.NULL;
        if (IDLBoolArray_TEMP_STATIC_GEN_3 == null)
            IDLBoolArray_TEMP_STATIC_GEN_3 = IDLBoolArray.native_new();
        IDLBoolArray_TEMP_STATIC_GEN_3.internal_reset(pointer, false);
        return IDLBoolArray_TEMP_STATIC_GEN_3;
    }

    /*[-JNI;-NATIVE]
return (jlong)IDLTemp::Bool_4(value);
*/
    public static native long internal_native_Bool_4__0(boolean value);
}
