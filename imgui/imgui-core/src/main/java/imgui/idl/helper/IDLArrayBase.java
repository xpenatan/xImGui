/*
  -------------------------------------------------------
   This file was generated by JParser
 
   Do not make changes to this file
  -------------------------------------------------------
*/
package imgui.idl.helper;

import imgui.idl.IDLBase;

public class IDLArrayBase extends IDLBase {

    @Override
    protected void onNativeAddressChanged() {
        native_void_address = getPointer();
    }

    public void resize(int size) {
        internal_native_resize(native_address, size);
        native_void_address = getPointer();
    }

    /*
      [-JNI;-NATIVE]
            IDLArrayBase* nativeObject = (IDLArrayBase*)this_addr;
            nativeObject->resize(size);
    */
    public static native void internal_native_resize(long this_addr, int size);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected IDLArrayBase(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static IDLArrayBase native_new() {
        return new IDLArrayBase((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*
      [-JNI;-NATIVE]
      IDLArrayBase* nativeObject = (IDLArrayBase*)this_addr;
      delete nativeObject;
    */
    public static native void internal_native_deleteNative(long this_addr);

    public void clear() {
        internal_native_clear(native_address);
    }

    /*
      [-JNI;-NATIVE]
      IDLArrayBase* nativeObject = (IDLArrayBase*)this_addr;
      nativeObject->clear();
    */
    public static native void internal_native_clear(long this_addr);

    public int getSize() {
        return internal_native_getSize(native_address);
    }

    /*
      [-JNI;-NATIVE]
      IDLArrayBase* nativeObject = (IDLArrayBase*)this_addr;
      return nativeObject->getSize();
    */
    public static native int internal_native_getSize(long this_addr);

    public long getPointer() {
        return internal_native_getPointer(native_address);
    }

    /*
      [-JNI;-NATIVE]
      IDLArrayBase* nativeObject = (IDLArrayBase*)this_addr;
      return (jlong)nativeObject->getPointer();
    */
    public static native long internal_native_getPointer(long this_addr);
}
