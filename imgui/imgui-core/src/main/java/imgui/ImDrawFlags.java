/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package imgui;

import java.util.Map;
import java.util.HashMap;
import imgui.idl.IDLEnum;

public enum ImDrawFlags implements IDLEnum<ImDrawFlags> {

    CUSTOM(0),
    None(ImDrawFlags_None_NATIVE()),
    Closed(ImDrawFlags_Closed_NATIVE()),
    RoundCornersTopLeft(ImDrawFlags_RoundCornersTopLeft_NATIVE()),
    RoundCornersTopRight(ImDrawFlags_RoundCornersTopRight_NATIVE()),
    RoundCornersBottomLeft(ImDrawFlags_RoundCornersBottomLeft_NATIVE()),
    RoundCornersBottomRight(ImDrawFlags_RoundCornersBottomRight_NATIVE()),
    RoundCornersNone(ImDrawFlags_RoundCornersNone_NATIVE()),
    RoundCornersTop(ImDrawFlags_RoundCornersTop_NATIVE()),
    RoundCornersBottom(ImDrawFlags_RoundCornersBottom_NATIVE()),
    RoundCornersLeft(ImDrawFlags_RoundCornersLeft_NATIVE()),
    RoundCornersRight(ImDrawFlags_RoundCornersRight_NATIVE()),
    RoundCornersAll(ImDrawFlags_RoundCornersAll_NATIVE()),
    RoundCornersDefault_(ImDrawFlags_RoundCornersDefault__NATIVE()),
    RoundCornersMask_(ImDrawFlags_RoundCornersMask__NATIVE());

    private int value;

    private ImDrawFlags(int value) {
        this.value = value;
    }

    public int getValue() {
        return value;
    }

    public ImDrawFlags setValue(int value) {
        if (this != CUSTOM) {
            throw new RuntimeException("Cannot change none CUSTOM value");
        }
        this.value = value;
        return this;
    }

    public ImDrawFlags getCustom() {
        return CUSTOM;
    }

    public static final Map<Integer, ImDrawFlags> MAP = new HashMap<>();

    static {
        for (ImDrawFlags value : values()) {
            if (value != CUSTOM) {
                MAP.put(value.value, value);
            }
        }
    }

    /*[-JNI;-NATIVE]
return (jlong)ImDrawFlags_None;
*/
    private static native int ImDrawFlags_None_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImDrawFlags_Closed;
*/
    private static native int ImDrawFlags_Closed_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImDrawFlags_RoundCornersTopLeft;
*/
    private static native int ImDrawFlags_RoundCornersTopLeft_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImDrawFlags_RoundCornersTopRight;
*/
    private static native int ImDrawFlags_RoundCornersTopRight_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImDrawFlags_RoundCornersBottomLeft;
*/
    private static native int ImDrawFlags_RoundCornersBottomLeft_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImDrawFlags_RoundCornersBottomRight;
*/
    private static native int ImDrawFlags_RoundCornersBottomRight_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImDrawFlags_RoundCornersNone;
*/
    private static native int ImDrawFlags_RoundCornersNone_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImDrawFlags_RoundCornersTop;
*/
    private static native int ImDrawFlags_RoundCornersTop_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImDrawFlags_RoundCornersBottom;
*/
    private static native int ImDrawFlags_RoundCornersBottom_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImDrawFlags_RoundCornersLeft;
*/
    private static native int ImDrawFlags_RoundCornersLeft_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImDrawFlags_RoundCornersRight;
*/
    private static native int ImDrawFlags_RoundCornersRight_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImDrawFlags_RoundCornersAll;
*/
    private static native int ImDrawFlags_RoundCornersAll_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImDrawFlags_RoundCornersDefault_;
*/
    private static native int ImDrawFlags_RoundCornersDefault__NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImDrawFlags_RoundCornersMask_;
*/
    private static native int ImDrawFlags_RoundCornersMask__NATIVE();
}
