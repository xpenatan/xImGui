/*
  -------------------------------------------------------
   This file was generated by JParser
 
   Do not make changes to this file
  -------------------------------------------------------
*/
package imgui;

import com.github.xpenatan.jParser.idl.IDLBase;

public class ImFontConfig extends IDLBase {

    private IDLBase IDLBase_TEMP_GEN_0;

    private ImVec2 ImVec2_TEMP_GEN_0;

    private ImVec2 ImVec2_TEMP_GEN_1;

    public final static ImFontConfig NULL = native_new();

    public static ImFontConfig native_new() {
        return new ImFontConfig((byte) 0, (char) 0);
    }

    private ImFontConfig(byte v, char c) {
    }

    public ImFontConfig() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)new ImFontConfig();
    */
    public static native long internal_native_create();

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      delete nativeObject;
    */
    public static native void internal_native_deleteNative(long this_addr);

    public IDLBase get_FontData() {
        long pointer = internal_native_get_FontData(native_address);
        if (pointer == 0)
            return IDLBase.NULL;
        if (IDLBase_TEMP_GEN_0 == null)
            IDLBase_TEMP_GEN_0 = IDLBase.native_new();
        IDLBase_TEMP_GEN_0.internal_reset(pointer, false);
        return IDLBase_TEMP_GEN_0;
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      return (jlong)nativeObject->FontData;
    */
    public static native long internal_native_get_FontData(long this_addr);

    public void set_FontData(IDLBase FontData) {
        internal_native_set_FontData(native_address, FontData.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      nativeObject->FontData = (void**)FontData_addr;
    */
    public static native void internal_native_set_FontData(long this_addr, long FontData_addr);

    public int get_FontDataSize() {
        return internal_native_get_FontDataSize(native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      return nativeObject->FontDataSize;
    */
    public static native int internal_native_get_FontDataSize(long this_addr);

    public void set_FontDataSize(int FontDataSize) {
        internal_native_set_FontDataSize(native_address, FontDataSize);
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      nativeObject->FontDataSize = FontDataSize;
    */
    public static native void internal_native_set_FontDataSize(long this_addr, int FontDataSize);

    public boolean get_FontDataOwnedByAtlas() {
        return internal_native_get_FontDataOwnedByAtlas(native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      return nativeObject->FontDataOwnedByAtlas;
    */
    public static native boolean internal_native_get_FontDataOwnedByAtlas(long this_addr);

    public void set_FontDataOwnedByAtlas(boolean FontDataOwnedByAtlas) {
        internal_native_set_FontDataOwnedByAtlas(native_address, FontDataOwnedByAtlas);
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      nativeObject->FontDataOwnedByAtlas = FontDataOwnedByAtlas;
    */
    public static native void internal_native_set_FontDataOwnedByAtlas(long this_addr, boolean FontDataOwnedByAtlas);

    public int get_FontNo() {
        return internal_native_get_FontNo(native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      return nativeObject->FontNo;
    */
    public static native int internal_native_get_FontNo(long this_addr);

    public void set_FontNo(int FontNo) {
        internal_native_set_FontNo(native_address, FontNo);
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      nativeObject->FontNo = FontNo;
    */
    public static native void internal_native_set_FontNo(long this_addr, int FontNo);

    public float get_SizePixels() {
        return internal_native_get_SizePixels(native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      return nativeObject->SizePixels;
    */
    public static native float internal_native_get_SizePixels(long this_addr);

    public void set_SizePixels(float SizePixels) {
        internal_native_set_SizePixels(native_address, SizePixels);
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      nativeObject->SizePixels = SizePixels;
    */
    public static native void internal_native_set_SizePixels(long this_addr, float SizePixels);

    public int get_OversampleH() {
        return internal_native_get_OversampleH(native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      return nativeObject->OversampleH;
    */
    public static native int internal_native_get_OversampleH(long this_addr);

    public void set_OversampleH(int OversampleH) {
        internal_native_set_OversampleH(native_address, OversampleH);
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      nativeObject->OversampleH = OversampleH;
    */
    public static native void internal_native_set_OversampleH(long this_addr, int OversampleH);

    public int get_OversampleV() {
        return internal_native_get_OversampleV(native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      return nativeObject->OversampleV;
    */
    public static native int internal_native_get_OversampleV(long this_addr);

    public void set_OversampleV(int OversampleV) {
        internal_native_set_OversampleV(native_address, OversampleV);
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      nativeObject->OversampleV = OversampleV;
    */
    public static native void internal_native_set_OversampleV(long this_addr, int OversampleV);

    public boolean get_PixelSnapH() {
        return internal_native_get_PixelSnapH(native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      return nativeObject->PixelSnapH;
    */
    public static native boolean internal_native_get_PixelSnapH(long this_addr);

    public void set_PixelSnapH(boolean PixelSnapH) {
        internal_native_set_PixelSnapH(native_address, PixelSnapH);
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      nativeObject->PixelSnapH = PixelSnapH;
    */
    public static native void internal_native_set_PixelSnapH(long this_addr, boolean PixelSnapH);

    public ImVec2 get_GlyphExtraSpacing() {
        long pointer = internal_native_get_GlyphExtraSpacing(native_address);
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_GEN_0 == null)
            ImVec2_TEMP_GEN_0 = ImVec2.native_new();
        ImVec2_TEMP_GEN_0.internal_reset(pointer, false);
        return ImVec2_TEMP_GEN_0;
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      return (jlong)&nativeObject->GlyphExtraSpacing;
    */
    public static native long internal_native_get_GlyphExtraSpacing(long this_addr);

    public void set_GlyphExtraSpacing(ImVec2 GlyphExtraSpacing) {
        internal_native_set_GlyphExtraSpacing(native_address, GlyphExtraSpacing.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      nativeObject->GlyphExtraSpacing = *((ImVec2*)GlyphExtraSpacing_addr);
    */
    public static native void internal_native_set_GlyphExtraSpacing(long this_addr, long GlyphExtraSpacing_addr);

    public ImVec2 get_GlyphOffset() {
        long pointer = internal_native_get_GlyphOffset(native_address);
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_GEN_1 == null)
            ImVec2_TEMP_GEN_1 = ImVec2.native_new();
        ImVec2_TEMP_GEN_1.internal_reset(pointer, false);
        return ImVec2_TEMP_GEN_1;
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      return (jlong)&nativeObject->GlyphOffset;
    */
    public static native long internal_native_get_GlyphOffset(long this_addr);

    public void set_GlyphOffset(ImVec2 GlyphOffset) {
        internal_native_set_GlyphOffset(native_address, GlyphOffset.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      nativeObject->GlyphOffset = *((ImVec2*)GlyphOffset_addr);
    */
    public static native void internal_native_set_GlyphOffset(long this_addr, long GlyphOffset_addr);

    public float get_GlyphMinAdvanceX() {
        return internal_native_get_GlyphMinAdvanceX(native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      return nativeObject->GlyphMinAdvanceX;
    */
    public static native float internal_native_get_GlyphMinAdvanceX(long this_addr);

    public void set_GlyphMinAdvanceX(float GlyphMinAdvanceX) {
        internal_native_set_GlyphMinAdvanceX(native_address, GlyphMinAdvanceX);
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      nativeObject->GlyphMinAdvanceX = GlyphMinAdvanceX;
    */
    public static native void internal_native_set_GlyphMinAdvanceX(long this_addr, float GlyphMinAdvanceX);

    public float get_GlyphMaxAdvanceX() {
        return internal_native_get_GlyphMaxAdvanceX(native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      return nativeObject->GlyphMaxAdvanceX;
    */
    public static native float internal_native_get_GlyphMaxAdvanceX(long this_addr);

    public void set_GlyphMaxAdvanceX(float GlyphMaxAdvanceX) {
        internal_native_set_GlyphMaxAdvanceX(native_address, GlyphMaxAdvanceX);
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      nativeObject->GlyphMaxAdvanceX = GlyphMaxAdvanceX;
    */
    public static native void internal_native_set_GlyphMaxAdvanceX(long this_addr, float GlyphMaxAdvanceX);

    public boolean get_MergeMode() {
        return internal_native_get_MergeMode(native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      return nativeObject->MergeMode;
    */
    public static native boolean internal_native_get_MergeMode(long this_addr);

    public void set_MergeMode(boolean MergeMode) {
        internal_native_set_MergeMode(native_address, MergeMode);
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      nativeObject->MergeMode = MergeMode;
    */
    public static native void internal_native_set_MergeMode(long this_addr, boolean MergeMode);

    public float get_RasterizerMultiply() {
        return internal_native_get_RasterizerMultiply(native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      return nativeObject->RasterizerMultiply;
    */
    public static native float internal_native_get_RasterizerMultiply(long this_addr);

    public void set_RasterizerMultiply(float RasterizerMultiply) {
        internal_native_set_RasterizerMultiply(native_address, RasterizerMultiply);
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      nativeObject->RasterizerMultiply = RasterizerMultiply;
    */
    public static native void internal_native_set_RasterizerMultiply(long this_addr, float RasterizerMultiply);

    public float get_RasterizerDensity() {
        return internal_native_get_RasterizerDensity(native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      return nativeObject->RasterizerDensity;
    */
    public static native float internal_native_get_RasterizerDensity(long this_addr);

    public void set_RasterizerDensity(float RasterizerDensity) {
        internal_native_set_RasterizerDensity(native_address, RasterizerDensity);
    }

    /*
      [-JNI;-NATIVE]
      ImFontConfig* nativeObject = (ImFontConfig*)this_addr;
      nativeObject->RasterizerDensity = RasterizerDensity;
    */
    public static native void internal_native_set_RasterizerDensity(long this_addr, float RasterizerDensity);
}
