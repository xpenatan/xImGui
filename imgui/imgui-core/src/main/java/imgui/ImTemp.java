/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package imgui;

import com.github.xpenatan.jParser.idl.IDLBase;

public class ImTemp extends IDLBase {

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_0;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_1;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_2;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_3;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_4;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_5;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_6;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_7;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_8;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_9;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_10;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_11;

    static private ImVec4 ImVec4_TEMP_STATIC_GEN_0;

    static private ImVec4 ImVec4_TEMP_STATIC_GEN_1;

    static private ImVec4 ImVec4_TEMP_STATIC_GEN_2;

    static private ImVec4 ImVec4_TEMP_STATIC_GEN_3;

    static private ImVec4 ImVec4_TEMP_STATIC_GEN_4;

    static private ImVec4 ImVec4_TEMP_STATIC_GEN_5;

    static private ImVec4 ImVec4_TEMP_STATIC_GEN_6;

    static private ImVec4 ImVec4_TEMP_STATIC_GEN_7;

    static private ImVec4 ImVec4_TEMP_STATIC_GEN_8;

    static private ImVec4 ImVec4_TEMP_STATIC_GEN_9;

    static private ImVec4 ImVec4_TEMP_STATIC_GEN_10;

    static private ImVec4 ImVec4_TEMP_STATIC_GEN_11;

    static private ImRect ImRect_TEMP_STATIC_GEN_0;

    static private ImRect ImRect_TEMP_STATIC_GEN_1;

    static private ImRect ImRect_TEMP_STATIC_GEN_2;

    static private ImRect ImRect_TEMP_STATIC_GEN_3;

    static private ImRect ImRect_TEMP_STATIC_GEN_4;

    static private ImRect ImRect_TEMP_STATIC_GEN_5;

    static private ImRect ImRect_TEMP_STATIC_GEN_6;

    static private ImRect ImRect_TEMP_STATIC_GEN_7;

    static private ImRect ImRect_TEMP_STATIC_GEN_8;

    static private ImRect ImRect_TEMP_STATIC_GEN_9;

    static private ImRect ImRect_TEMP_STATIC_GEN_10;

    static private ImRect ImRect_TEMP_STATIC_GEN_11;

    static public final ImTemp NULL = ImTemp.native_new();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected ImTemp(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static ImTemp native_new() {
        return new ImTemp((byte) 0, (char) 0);
    }

    public static ImVec2 ImVec2_1() {
        long pointer = internal_native_ImVec2_1__0();
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_0 == null)
            ImVec2_TEMP_STATIC_GEN_0 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_0;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImVec2_1();
*/
    public static native long internal_native_ImVec2_1__0();

    public static ImVec2 ImVec2_1(float x, float y) {
        long pointer = internal_native_ImVec2_1__1(x, y);
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_1 == null)
            ImVec2_TEMP_STATIC_GEN_1 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_1.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_1;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImVec2_1((float)x, (float)y);
*/
    public static native long internal_native_ImVec2_1__1(float x, float y);

    public static ImVec2 ImVec2_1(ImVec2 other) {
        long pointer = internal_native_ImVec2_1__2(other.native_address);
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_2 == null)
            ImVec2_TEMP_STATIC_GEN_2 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_2.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_2;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImVec2_1(*((ImVec2* )other_addr));
*/
    public static native long internal_native_ImVec2_1__2(long other_addr);

    public static ImVec2 ImVec2_2() {
        long pointer = internal_native_ImVec2_2__0();
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_3 == null)
            ImVec2_TEMP_STATIC_GEN_3 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_3.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_3;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImVec2_2();
*/
    public static native long internal_native_ImVec2_2__0();

    public static ImVec2 ImVec2_2(float x, float y) {
        long pointer = internal_native_ImVec2_2__1(x, y);
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_4 == null)
            ImVec2_TEMP_STATIC_GEN_4 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_4.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_4;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImVec2_2((float)x, (float)y);
*/
    public static native long internal_native_ImVec2_2__1(float x, float y);

    public static ImVec2 ImVec2_2(ImVec2 other) {
        long pointer = internal_native_ImVec2_2__2(other.native_address);
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_5 == null)
            ImVec2_TEMP_STATIC_GEN_5 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_5.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_5;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImVec2_2(*((ImVec2* )other_addr));
*/
    public static native long internal_native_ImVec2_2__2(long other_addr);

    public static ImVec2 ImVec2_3() {
        long pointer = internal_native_ImVec2_3__0();
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_6 == null)
            ImVec2_TEMP_STATIC_GEN_6 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_6.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_6;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImVec2_3();
*/
    public static native long internal_native_ImVec2_3__0();

    public static ImVec2 ImVec2_3(float x, float y) {
        long pointer = internal_native_ImVec2_3__1(x, y);
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_7 == null)
            ImVec2_TEMP_STATIC_GEN_7 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_7.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_7;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImVec2_3((float)x, (float)y);
*/
    public static native long internal_native_ImVec2_3__1(float x, float y);

    public static ImVec2 ImVec2_3(ImVec2 other) {
        long pointer = internal_native_ImVec2_3__2(other.native_address);
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_8 == null)
            ImVec2_TEMP_STATIC_GEN_8 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_8.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_8;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImVec2_3(*((ImVec2* )other_addr));
*/
    public static native long internal_native_ImVec2_3__2(long other_addr);

    public static ImVec2 ImVec2_4() {
        long pointer = internal_native_ImVec2_4__0();
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_9 == null)
            ImVec2_TEMP_STATIC_GEN_9 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_9.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_9;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImVec2_4();
*/
    public static native long internal_native_ImVec2_4__0();

    public static ImVec2 ImVec2_4(float x, float y) {
        long pointer = internal_native_ImVec2_4__1(x, y);
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_10 == null)
            ImVec2_TEMP_STATIC_GEN_10 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_10.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_10;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImVec2_4((float)x, (float)y);
*/
    public static native long internal_native_ImVec2_4__1(float x, float y);

    public static ImVec2 ImVec2_4(ImVec2 other) {
        long pointer = internal_native_ImVec2_4__2(other.native_address);
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_11 == null)
            ImVec2_TEMP_STATIC_GEN_11 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_11.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_11;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImVec2_4(*((ImVec2* )other_addr));
*/
    public static native long internal_native_ImVec2_4__2(long other_addr);

    public static ImVec4 ImVec4_1() {
        long pointer = internal_native_ImVec4_1__0();
        if (pointer == 0)
            return ImVec4.NULL;
        if (ImVec4_TEMP_STATIC_GEN_0 == null)
            ImVec4_TEMP_STATIC_GEN_0 = ImVec4.native_new();
        ImVec4_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return ImVec4_TEMP_STATIC_GEN_0;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImVec4_1();
*/
    public static native long internal_native_ImVec4_1__0();

    public static ImVec4 ImVec4_1(float x, float y, float z, float w) {
        long pointer = internal_native_ImVec4_1__1(x, y, z, w);
        if (pointer == 0)
            return ImVec4.NULL;
        if (ImVec4_TEMP_STATIC_GEN_1 == null)
            ImVec4_TEMP_STATIC_GEN_1 = ImVec4.native_new();
        ImVec4_TEMP_STATIC_GEN_1.internal_reset(pointer, false);
        return ImVec4_TEMP_STATIC_GEN_1;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImVec4_1((float)x, (float)y, (float)z, (float)w);
*/
    public static native long internal_native_ImVec4_1__1(float x, float y, float z, float w);

    public static ImVec4 ImVec4_1(ImVec4 other) {
        long pointer = internal_native_ImVec4_1__2(other.native_address);
        if (pointer == 0)
            return ImVec4.NULL;
        if (ImVec4_TEMP_STATIC_GEN_2 == null)
            ImVec4_TEMP_STATIC_GEN_2 = ImVec4.native_new();
        ImVec4_TEMP_STATIC_GEN_2.internal_reset(pointer, false);
        return ImVec4_TEMP_STATIC_GEN_2;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImVec4_1(*((ImVec4* )other_addr));
*/
    public static native long internal_native_ImVec4_1__2(long other_addr);

    public static ImVec4 ImVec4_2() {
        long pointer = internal_native_ImVec4_2__0();
        if (pointer == 0)
            return ImVec4.NULL;
        if (ImVec4_TEMP_STATIC_GEN_3 == null)
            ImVec4_TEMP_STATIC_GEN_3 = ImVec4.native_new();
        ImVec4_TEMP_STATIC_GEN_3.internal_reset(pointer, false);
        return ImVec4_TEMP_STATIC_GEN_3;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImVec4_2();
*/
    public static native long internal_native_ImVec4_2__0();

    public static ImVec4 ImVec4_2(float x, float y, float z, float w) {
        long pointer = internal_native_ImVec4_2__1(x, y, z, w);
        if (pointer == 0)
            return ImVec4.NULL;
        if (ImVec4_TEMP_STATIC_GEN_4 == null)
            ImVec4_TEMP_STATIC_GEN_4 = ImVec4.native_new();
        ImVec4_TEMP_STATIC_GEN_4.internal_reset(pointer, false);
        return ImVec4_TEMP_STATIC_GEN_4;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImVec4_2((float)x, (float)y, (float)z, (float)w);
*/
    public static native long internal_native_ImVec4_2__1(float x, float y, float z, float w);

    public static ImVec4 ImVec4_2(ImVec4 other) {
        long pointer = internal_native_ImVec4_2__2(other.native_address);
        if (pointer == 0)
            return ImVec4.NULL;
        if (ImVec4_TEMP_STATIC_GEN_5 == null)
            ImVec4_TEMP_STATIC_GEN_5 = ImVec4.native_new();
        ImVec4_TEMP_STATIC_GEN_5.internal_reset(pointer, false);
        return ImVec4_TEMP_STATIC_GEN_5;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImVec4_2(*((ImVec4* )other_addr));
*/
    public static native long internal_native_ImVec4_2__2(long other_addr);

    public static ImVec4 ImVec4_3() {
        long pointer = internal_native_ImVec4_3__0();
        if (pointer == 0)
            return ImVec4.NULL;
        if (ImVec4_TEMP_STATIC_GEN_6 == null)
            ImVec4_TEMP_STATIC_GEN_6 = ImVec4.native_new();
        ImVec4_TEMP_STATIC_GEN_6.internal_reset(pointer, false);
        return ImVec4_TEMP_STATIC_GEN_6;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImVec4_3();
*/
    public static native long internal_native_ImVec4_3__0();

    public static ImVec4 ImVec4_3(float x, float y, float z, float w) {
        long pointer = internal_native_ImVec4_3__1(x, y, z, w);
        if (pointer == 0)
            return ImVec4.NULL;
        if (ImVec4_TEMP_STATIC_GEN_7 == null)
            ImVec4_TEMP_STATIC_GEN_7 = ImVec4.native_new();
        ImVec4_TEMP_STATIC_GEN_7.internal_reset(pointer, false);
        return ImVec4_TEMP_STATIC_GEN_7;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImVec4_3((float)x, (float)y, (float)z, (float)w);
*/
    public static native long internal_native_ImVec4_3__1(float x, float y, float z, float w);

    public static ImVec4 ImVec4_3(ImVec4 other) {
        long pointer = internal_native_ImVec4_3__2(other.native_address);
        if (pointer == 0)
            return ImVec4.NULL;
        if (ImVec4_TEMP_STATIC_GEN_8 == null)
            ImVec4_TEMP_STATIC_GEN_8 = ImVec4.native_new();
        ImVec4_TEMP_STATIC_GEN_8.internal_reset(pointer, false);
        return ImVec4_TEMP_STATIC_GEN_8;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImVec4_3(*((ImVec4* )other_addr));
*/
    public static native long internal_native_ImVec4_3__2(long other_addr);

    public static ImVec4 ImVec4_4() {
        long pointer = internal_native_ImVec4_4__0();
        if (pointer == 0)
            return ImVec4.NULL;
        if (ImVec4_TEMP_STATIC_GEN_9 == null)
            ImVec4_TEMP_STATIC_GEN_9 = ImVec4.native_new();
        ImVec4_TEMP_STATIC_GEN_9.internal_reset(pointer, false);
        return ImVec4_TEMP_STATIC_GEN_9;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImVec4_4();
*/
    public static native long internal_native_ImVec4_4__0();

    public static ImVec4 ImVec4_4(float x, float y, float z, float w) {
        long pointer = internal_native_ImVec4_4__1(x, y, z, w);
        if (pointer == 0)
            return ImVec4.NULL;
        if (ImVec4_TEMP_STATIC_GEN_10 == null)
            ImVec4_TEMP_STATIC_GEN_10 = ImVec4.native_new();
        ImVec4_TEMP_STATIC_GEN_10.internal_reset(pointer, false);
        return ImVec4_TEMP_STATIC_GEN_10;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImVec4_4((float)x, (float)y, (float)z, (float)w);
*/
    public static native long internal_native_ImVec4_4__1(float x, float y, float z, float w);

    public static ImVec4 ImVec4_4(ImVec4 other) {
        long pointer = internal_native_ImVec4_4__2(other.native_address);
        if (pointer == 0)
            return ImVec4.NULL;
        if (ImVec4_TEMP_STATIC_GEN_11 == null)
            ImVec4_TEMP_STATIC_GEN_11 = ImVec4.native_new();
        ImVec4_TEMP_STATIC_GEN_11.internal_reset(pointer, false);
        return ImVec4_TEMP_STATIC_GEN_11;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImVec4_4(*((ImVec4* )other_addr));
*/
    public static native long internal_native_ImVec4_4__2(long other_addr);

    public static ImRect ImRect_1() {
        long pointer = internal_native_ImRect_1__0();
        if (pointer == 0)
            return ImRect.NULL;
        if (ImRect_TEMP_STATIC_GEN_0 == null)
            ImRect_TEMP_STATIC_GEN_0 = ImRect.native_new();
        ImRect_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return ImRect_TEMP_STATIC_GEN_0;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImRect_1();
*/
    public static native long internal_native_ImRect_1__0();

    public static ImRect ImRect_1(float minX, float minY, float maxX, float maxY) {
        long pointer = internal_native_ImRect_1__1(minX, minY, maxX, maxY);
        if (pointer == 0)
            return ImRect.NULL;
        if (ImRect_TEMP_STATIC_GEN_1 == null)
            ImRect_TEMP_STATIC_GEN_1 = ImRect.native_new();
        ImRect_TEMP_STATIC_GEN_1.internal_reset(pointer, false);
        return ImRect_TEMP_STATIC_GEN_1;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImRect_1((float)minX, (float)minY, (float)maxX, (float)maxY);
*/
    public static native long internal_native_ImRect_1__1(float minX, float minY, float maxX, float maxY);

    public static ImRect ImRect_1(ImVec2 min, ImVec2 max) {
        long pointer = internal_native_ImRect_1__2(min.native_address, max.native_address);
        if (pointer == 0)
            return ImRect.NULL;
        if (ImRect_TEMP_STATIC_GEN_2 == null)
            ImRect_TEMP_STATIC_GEN_2 = ImRect.native_new();
        ImRect_TEMP_STATIC_GEN_2.internal_reset(pointer, false);
        return ImRect_TEMP_STATIC_GEN_2;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImRect_1(*((ImVec2* )min_addr), *((ImVec2* )max_addr));
*/
    public static native long internal_native_ImRect_1__2(long min_addr, long max_addr);

    public static ImRect ImRect_2() {
        long pointer = internal_native_ImRect_2__0();
        if (pointer == 0)
            return ImRect.NULL;
        if (ImRect_TEMP_STATIC_GEN_3 == null)
            ImRect_TEMP_STATIC_GEN_3 = ImRect.native_new();
        ImRect_TEMP_STATIC_GEN_3.internal_reset(pointer, false);
        return ImRect_TEMP_STATIC_GEN_3;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImRect_2();
*/
    public static native long internal_native_ImRect_2__0();

    public static ImRect ImRect_2(float minX, float minY, float maxX, float maxY) {
        long pointer = internal_native_ImRect_2__1(minX, minY, maxX, maxY);
        if (pointer == 0)
            return ImRect.NULL;
        if (ImRect_TEMP_STATIC_GEN_4 == null)
            ImRect_TEMP_STATIC_GEN_4 = ImRect.native_new();
        ImRect_TEMP_STATIC_GEN_4.internal_reset(pointer, false);
        return ImRect_TEMP_STATIC_GEN_4;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImRect_2((float)minX, (float)minY, (float)maxX, (float)maxY);
*/
    public static native long internal_native_ImRect_2__1(float minX, float minY, float maxX, float maxY);

    public static ImRect ImRect_2(ImVec2 min, ImVec2 max) {
        long pointer = internal_native_ImRect_2__2(min.native_address, max.native_address);
        if (pointer == 0)
            return ImRect.NULL;
        if (ImRect_TEMP_STATIC_GEN_5 == null)
            ImRect_TEMP_STATIC_GEN_5 = ImRect.native_new();
        ImRect_TEMP_STATIC_GEN_5.internal_reset(pointer, false);
        return ImRect_TEMP_STATIC_GEN_5;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImRect_2(*((ImVec2* )min_addr), *((ImVec2* )max_addr));
*/
    public static native long internal_native_ImRect_2__2(long min_addr, long max_addr);

    public static ImRect ImRect_3() {
        long pointer = internal_native_ImRect_3__0();
        if (pointer == 0)
            return ImRect.NULL;
        if (ImRect_TEMP_STATIC_GEN_6 == null)
            ImRect_TEMP_STATIC_GEN_6 = ImRect.native_new();
        ImRect_TEMP_STATIC_GEN_6.internal_reset(pointer, false);
        return ImRect_TEMP_STATIC_GEN_6;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImRect_3();
*/
    public static native long internal_native_ImRect_3__0();

    public static ImRect ImRect_3(float minX, float minY, float maxX, float maxY) {
        long pointer = internal_native_ImRect_3__1(minX, minY, maxX, maxY);
        if (pointer == 0)
            return ImRect.NULL;
        if (ImRect_TEMP_STATIC_GEN_7 == null)
            ImRect_TEMP_STATIC_GEN_7 = ImRect.native_new();
        ImRect_TEMP_STATIC_GEN_7.internal_reset(pointer, false);
        return ImRect_TEMP_STATIC_GEN_7;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImRect_3((float)minX, (float)minY, (float)maxX, (float)maxY);
*/
    public static native long internal_native_ImRect_3__1(float minX, float minY, float maxX, float maxY);

    public static ImRect ImRect_3(ImVec2 min, ImVec2 max) {
        long pointer = internal_native_ImRect_3__2(min.native_address, max.native_address);
        if (pointer == 0)
            return ImRect.NULL;
        if (ImRect_TEMP_STATIC_GEN_8 == null)
            ImRect_TEMP_STATIC_GEN_8 = ImRect.native_new();
        ImRect_TEMP_STATIC_GEN_8.internal_reset(pointer, false);
        return ImRect_TEMP_STATIC_GEN_8;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImRect_3(*((ImVec2* )min_addr), *((ImVec2* )max_addr));
*/
    public static native long internal_native_ImRect_3__2(long min_addr, long max_addr);

    public static ImRect ImRect_4() {
        long pointer = internal_native_ImRect_4__0();
        if (pointer == 0)
            return ImRect.NULL;
        if (ImRect_TEMP_STATIC_GEN_9 == null)
            ImRect_TEMP_STATIC_GEN_9 = ImRect.native_new();
        ImRect_TEMP_STATIC_GEN_9.internal_reset(pointer, false);
        return ImRect_TEMP_STATIC_GEN_9;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImRect_4();
*/
    public static native long internal_native_ImRect_4__0();

    public static ImRect ImRect_4(float minX, float minY, float maxX, float maxY) {
        long pointer = internal_native_ImRect_4__1(minX, minY, maxX, maxY);
        if (pointer == 0)
            return ImRect.NULL;
        if (ImRect_TEMP_STATIC_GEN_10 == null)
            ImRect_TEMP_STATIC_GEN_10 = ImRect.native_new();
        ImRect_TEMP_STATIC_GEN_10.internal_reset(pointer, false);
        return ImRect_TEMP_STATIC_GEN_10;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImRect_4((float)minX, (float)minY, (float)maxX, (float)maxY);
*/
    public static native long internal_native_ImRect_4__1(float minX, float minY, float maxX, float maxY);

    public static ImRect ImRect_4(ImVec2 min, ImVec2 max) {
        long pointer = internal_native_ImRect_4__2(min.native_address, max.native_address);
        if (pointer == 0)
            return ImRect.NULL;
        if (ImRect_TEMP_STATIC_GEN_11 == null)
            ImRect_TEMP_STATIC_GEN_11 = ImRect.native_new();
        ImRect_TEMP_STATIC_GEN_11.internal_reset(pointer, false);
        return ImRect_TEMP_STATIC_GEN_11;
    }

    /*[-JNI;-NATIVE]
return (jlong)ImTemp::ImRect_4(*((ImVec2* )min_addr), *((ImVec2* )max_addr));
*/
    public static native long internal_native_ImRect_4__2(long min_addr, long max_addr);
}
