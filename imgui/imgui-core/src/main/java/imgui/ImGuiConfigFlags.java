/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package imgui;

import java.util.Map;
import java.util.HashMap;
import imgui.idl.IDLEnum;

public enum ImGuiConfigFlags implements IDLEnum<ImGuiConfigFlags> {

    CUSTOM(0),
    None(ImGuiConfigFlags_None_NATIVE()),
    NavEnableKeyboard(ImGuiConfigFlags_NavEnableKeyboard_NATIVE()),
    NavEnableGamepad(ImGuiConfigFlags_NavEnableGamepad_NATIVE()),
    NavEnableSetMousePos(ImGuiConfigFlags_NavEnableSetMousePos_NATIVE()),
    NavNoCaptureKeyboard(ImGuiConfigFlags_NavNoCaptureKeyboard_NATIVE()),
    NoMouse(ImGuiConfigFlags_NoMouse_NATIVE()),
    NoMouseCursorChange(ImGuiConfigFlags_NoMouseCursorChange_NATIVE()),
    DockingEnable(ImGuiConfigFlags_DockingEnable_NATIVE()),
    ViewportsEnable(ImGuiConfigFlags_ViewportsEnable_NATIVE()),
    DpiEnableScaleViewports(ImGuiConfigFlags_DpiEnableScaleViewports_NATIVE()),
    DpiEnableScaleFonts(ImGuiConfigFlags_DpiEnableScaleFonts_NATIVE());

    private int value;

    private ImGuiConfigFlags(int value) {
        this.value = value;
    }

    public int getValue() {
        return value;
    }

    public ImGuiConfigFlags setValue(int value) {
        if (this != CUSTOM) {
            throw new RuntimeException("Cannot change none CUSTOM value");
        }
        this.value = value;
        return this;
    }

    public ImGuiConfigFlags getCustom() {
        return CUSTOM;
    }

    public static final Map<Integer, ImGuiConfigFlags> MAP = new HashMap<>();

    static {
        for (ImGuiConfigFlags value : values()) {
            if (value != CUSTOM) {
                MAP.put(value.value, value);
            }
        }
    }

    /*[-JNI;-NATIVE]
return (jlong)ImGuiConfigFlags_None;
*/
    private static native int ImGuiConfigFlags_None_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiConfigFlags_NavEnableKeyboard;
*/
    private static native int ImGuiConfigFlags_NavEnableKeyboard_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiConfigFlags_NavEnableGamepad;
*/
    private static native int ImGuiConfigFlags_NavEnableGamepad_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiConfigFlags_NavEnableSetMousePos;
*/
    private static native int ImGuiConfigFlags_NavEnableSetMousePos_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiConfigFlags_NavNoCaptureKeyboard;
*/
    private static native int ImGuiConfigFlags_NavNoCaptureKeyboard_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiConfigFlags_NoMouse;
*/
    private static native int ImGuiConfigFlags_NoMouse_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiConfigFlags_NoMouseCursorChange;
*/
    private static native int ImGuiConfigFlags_NoMouseCursorChange_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiConfigFlags_DockingEnable;
*/
    private static native int ImGuiConfigFlags_DockingEnable_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiConfigFlags_ViewportsEnable;
*/
    private static native int ImGuiConfigFlags_ViewportsEnable_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiConfigFlags_DpiEnableScaleViewports;
*/
    private static native int ImGuiConfigFlags_DpiEnableScaleViewports_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiConfigFlags_DpiEnableScaleFonts;
*/
    private static native int ImGuiConfigFlags_DpiEnableScaleFonts_NATIVE();
}
