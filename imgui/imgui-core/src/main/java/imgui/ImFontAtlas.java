/*
  -------------------------------------------------------
   This file was generated by JParser
 
   Do not make changes to this file
  -------------------------------------------------------
*/
package imgui;

import imgui.idl.IDLBase;
import imgui.idl.helper.IDLByteArray;
import imgui.idl.helper.IDLIntArray;

public class ImFontAtlas extends IDLBase {

    private ImFont ImFont_TEMP_GEN_0;

    private ImFont ImFont_TEMP_GEN_1;

    private IDLBase IDLBase_TEMP_GEN_0;

    public final static ImFontAtlas NULL = native_new();

    public static ImFontAtlas native_new() {
        return new ImFontAtlas((byte) 0, (char) 0);
    }

    private ImFontAtlas(byte v, char c) {
    }

    public ImFont AddFontFromMemoryTTF(byte[] fontData, int font_size) {
        IDLByteArray byteArray = new IDLByteArray(fontData.length);
        byteArray.copy(fontData);
        return AddFontFromMemoryTTF(byteArray, byteArray.getSize(), font_size);
    }

    public void GetTexDataAsRGBA32(IDLByteArray pixelBuffer, IDLIntArray outWidth, IDLIntArray outHeight) {
        GetTexDataAsRGBA32NATIVE(native_address, pixelBuffer.native_address, outWidth.native_address, outHeight.native_address);
    }

    /*
      [-JNI;-NATIVE]
              ImFontAtlas* fontAtlas = (ImFontAtlas*)addr;
              IDLByteArray* pixelBuffer = (IDLByteArray*)pixelBufferAddr;
              IDLIntArray* widthIntArray = (IDLIntArray*)widthAddr;
              IDLIntArray* heightIntArray = (IDLIntArray*)heightAddr;
              int* widthPtr = (int*)widthIntArray->getData();
              int* heightPtr = (int*)heightIntArray->getData();
              ImHelper::memcpyFont(fontAtlas, pixelBuffer, widthPtr, heightPtr);
    */
    private static native void GetTexDataAsRGBA32NATIVE(long addr, long pixelBufferAddr, long widthAddr, long heightAddr);

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImFontAtlas* nativeObject = (ImFontAtlas*)this_addr;
      delete nativeObject;
    */
    public static native void internal_native_deleteNative(long this_addr);

    public ImFont AddFont(ImFontConfig font_cfg) {
        long pointer = internal_native_AddFont(native_address, font_cfg.native_address);
        if (pointer == 0)
            return ImFont.NULL;
        if (ImFont_TEMP_GEN_0 == null)
            ImFont_TEMP_GEN_0 = ImFont.native_new();
        ImFont_TEMP_GEN_0.internal_reset(pointer, false);
        return ImFont_TEMP_GEN_0;
    }

    /*
      [-JNI;-NATIVE]
      ImFontAtlas* nativeObject = (ImFontAtlas*)this_addr;
      ImFont* obj = nativeObject->AddFont((ImFontConfig* )font_cfg_addr);
      return (jlong)obj;
    */
    public static native long internal_native_AddFont(long this_addr, long font_cfg_addr);

    public ImFont AddFontFromMemoryTTF(IDLBase font_data, int font_data_size, int size_pixels) {
        long pointer = internal_native_AddFontFromMemoryTTF(native_address, font_data.native_void_address, font_data_size, size_pixels);
        if (pointer == 0)
            return ImFont.NULL;
        if (ImFont_TEMP_GEN_1 == null)
            ImFont_TEMP_GEN_1 = ImFont.native_new();
        ImFont_TEMP_GEN_1.internal_reset(pointer, false);
        return ImFont_TEMP_GEN_1;
    }

    /*
      [-JNI;-NATIVE]
      ImFontAtlas* nativeObject = (ImFontAtlas*)this_addr;
      ImFont* obj = nativeObject->AddFontFromMemoryTTF((void** )font_data_addr, (int)font_data_size, (int)size_pixels);
      return (jlong)obj;
    */
    public static native long internal_native_AddFontFromMemoryTTF(long this_addr, long font_data_addr, int font_data_size, int size_pixels);

    public IDLBase get_TexID() {
        long pointer = internal_native_get_TexID(native_address);
        if (pointer == 0)
            return IDLBase.NULL;
        if (IDLBase_TEMP_GEN_0 == null)
            IDLBase_TEMP_GEN_0 = IDLBase.native_new();
        IDLBase_TEMP_GEN_0.internal_reset(pointer, false);
        return IDLBase_TEMP_GEN_0;
    }

    /*
      [-JNI;-NATIVE]
      ImFontAtlas* nativeObject = (ImFontAtlas*)this_addr;
      return (jlong)nativeObject->TexID;
    */
    public static native long internal_native_get_TexID(long this_addr);

    public void set_TexID(IDLBase TexID) {
        internal_native_set_TexID(native_address, TexID.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      ImFontAtlas* nativeObject = (ImFontAtlas*)this_addr;
      nativeObject->TexID = (void**)TexID_addr;
    */
    public static native void internal_native_set_TexID(long this_addr, long TexID_addr);
}
