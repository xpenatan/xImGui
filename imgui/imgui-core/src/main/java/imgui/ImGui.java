/*
  -------------------------------------------------------
   This file was generated by JParser
 
   Do not make changes to this file
  -------------------------------------------------------
*/
package imgui;

import imgui.idl.helper.IDLBool;
import imgui.idl.helper.IDLDouble;
import imgui.idl.helper.IDLFloat;
import imgui.idl.helper.IDLInt;
import imgui.idl.IDLBase;
import imgui.idl.helper.IDLBoolArray;
import imgui.idl.helper.IDLIntArray;
import imgui.idl.helper.IDLFloatArray;
import imgui.idl.helper.IDLByteArray;
import imgui.idl.helper.IDLDoubleArray;
import imgui.idl.helper.IDLString;

/**
 * @author xpenatan
 */
public class ImGui extends IDLBase {

    static private ImGuiContext ImGuiContext_TEMP_STATIC_GEN_0;

    static private ImGuiContext ImGuiContext_TEMP_STATIC_GEN_1;

    static private ImGuiContext ImGuiContext_TEMP_STATIC_GEN_2;

    static private ImGuiIO ImGuiIO_TEMP_STATIC_GEN_0;

    static private ImGuiStyle ImGuiStyle_TEMP_STATIC_GEN_0;

    static private ImDrawData ImDrawData_TEMP_STATIC_GEN_0;

    static private ImDrawList ImDrawList_TEMP_STATIC_GEN_0;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_0;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_1;

    static private ImGuiViewport ImGuiViewport_TEMP_STATIC_GEN_0;

    static private ImFont ImFont_TEMP_STATIC_GEN_0;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_2;

    static private ImVec4 ImVec4_TEMP_STATIC_GEN_0;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_3;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_4;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_5;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_6;

    static private ImGuiMultiSelectIO ImGuiMultiSelectIO_TEMP_STATIC_GEN_0;

    static private ImGuiMultiSelectIO ImGuiMultiSelectIO_TEMP_STATIC_GEN_1;

    static private ImGuiMultiSelectIO ImGuiMultiSelectIO_TEMP_STATIC_GEN_2;

    static private ImGuiMultiSelectIO ImGuiMultiSelectIO_TEMP_STATIC_GEN_3;

    static private ImGuiTableSortSpecs ImGuiTableSortSpecs_TEMP_STATIC_GEN_0;

    static private ImGuiPayload ImGuiPayload_TEMP_STATIC_GEN_0;

    static private ImGuiPayload ImGuiPayload_TEMP_STATIC_GEN_1;

    static private ImGuiPayload ImGuiPayload_TEMP_STATIC_GEN_2;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_7;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_8;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_9;

    static private ImGuiViewport ImGuiViewport_TEMP_STATIC_GEN_1;

    static private ImDrawList ImDrawList_TEMP_STATIC_GEN_1;

    static private ImDrawList ImDrawList_TEMP_STATIC_GEN_2;

    static private ImDrawList ImDrawList_TEMP_STATIC_GEN_3;

    static private ImDrawList ImDrawList_TEMP_STATIC_GEN_4;

    static private ImDrawListSharedData ImDrawListSharedData_TEMP_STATIC_GEN_0;

    static private ImGuiStorage ImGuiStorage_TEMP_STATIC_GEN_0;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_10;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_11;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_12;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_13;

    static private ImVec4 ImVec4_TEMP_STATIC_GEN_1;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_14;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_15;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_16;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_17;

    static private ImVec2 ImVec2_TEMP_STATIC_GEN_18;

    static private IDLString IDLString_TEMP_STATIC_GEN_0;

    static private ImGuiPlatformIO ImGuiPlatformIO_TEMP_STATIC_GEN_0;

    static private ImGuiViewport ImGuiViewport_TEMP_STATIC_GEN_2;

    static private ImGuiViewport ImGuiViewport_TEMP_STATIC_GEN_3;

    public static void UpdateDisplayAndInputAndFrame(float deltaTime, int width, int height, int backBufferWidth, int backBufferHeight) {
        UpdateDisplayAndInputAndFrameNative(deltaTime, width, height, backBufferWidth, backBufferHeight);
    }

    /*
      [-JNI;-NATIVE]
              ImGuiIO * io = &ImGui::GetIO();
     
              io->DisplaySize = ImVec2(width, height);
              if (width > 0 && height > 0)
                  io->DisplayFramebufferScale = ImVec2((float)display_w / width, (float)display_h / height);
              io->DeltaTime = deltaTime;
     
              ImGui::NewFrame();
    */
    private static native void UpdateDisplayAndInputAndFrameNative(float deltaTime, int width, int height, int display_w, int display_h);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected ImGui(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static ImGui native_new() {
        return new ImGui((byte) 0, (char) 0);
    }

    public static ImGuiContext CreateContext(ImFontAtlas shared_font_atlas) {
        long pointer = internal_native_CreateContext(shared_font_atlas.native_address);
        if (pointer == 0)
            return ImGuiContext.NULL;
        if (ImGuiContext_TEMP_STATIC_GEN_0 == null)
            ImGuiContext_TEMP_STATIC_GEN_0 = ImGuiContext.native_new();
        ImGuiContext_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return ImGuiContext_TEMP_STATIC_GEN_0;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)ImGuiWrapper::ImGui::CreateContext((ImFontAtlas* )shared_font_atlas_addr);
    */
    public static native long internal_native_CreateContext(long shared_font_atlas_addr);

    public static ImGuiContext CreateContext() {
        long pointer = internal_native_CreateContext();
        if (pointer == 0)
            return ImGuiContext.NULL;
        if (ImGuiContext_TEMP_STATIC_GEN_1 == null)
            ImGuiContext_TEMP_STATIC_GEN_1 = ImGuiContext.native_new();
        ImGuiContext_TEMP_STATIC_GEN_1.internal_reset(pointer, false);
        return ImGuiContext_TEMP_STATIC_GEN_1;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)ImGuiWrapper::ImGui::CreateContext();
    */
    public static native long internal_native_CreateContext();

    public static void DestroyContext(ImGuiContext ctx) {
        internal_native_DestroyContext(ctx.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::DestroyContext((ImGuiContext* )ctx_addr);
    */
    public static native void internal_native_DestroyContext(long ctx_addr);

    public static void DestroyContext() {
        internal_native_DestroyContext();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::DestroyContext();
    */
    public static native void internal_native_DestroyContext();

    public static ImGuiContext GetCurrentContext() {
        long pointer = internal_native_GetCurrentContext();
        if (pointer == 0)
            return ImGuiContext.NULL;
        if (ImGuiContext_TEMP_STATIC_GEN_2 == null)
            ImGuiContext_TEMP_STATIC_GEN_2 = ImGuiContext.native_new();
        ImGuiContext_TEMP_STATIC_GEN_2.internal_reset(pointer, false);
        return ImGuiContext_TEMP_STATIC_GEN_2;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)ImGuiWrapper::ImGui::GetCurrentContext();
    */
    public static native long internal_native_GetCurrentContext();

    public static void SetCurrentContext(ImGuiContext ctx) {
        internal_native_SetCurrentContext(ctx.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetCurrentContext((ImGuiContext* )ctx_addr);
    */
    public static native void internal_native_SetCurrentContext(long ctx_addr);

    public static ImGuiIO GetIO() {
        long pointer = internal_native_GetIO();
        if (pointer == 0)
            return ImGuiIO.NULL;
        if (ImGuiIO_TEMP_STATIC_GEN_0 == null)
            ImGuiIO_TEMP_STATIC_GEN_0 = ImGuiIO.native_new();
        ImGuiIO_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return ImGuiIO_TEMP_STATIC_GEN_0;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)&ImGuiWrapper::ImGui::GetIO();
    */
    public static native long internal_native_GetIO();

    public static ImGuiStyle GetStyle() {
        long pointer = internal_native_GetStyle();
        if (pointer == 0)
            return ImGuiStyle.NULL;
        if (ImGuiStyle_TEMP_STATIC_GEN_0 == null)
            ImGuiStyle_TEMP_STATIC_GEN_0 = ImGuiStyle.native_new();
        ImGuiStyle_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return ImGuiStyle_TEMP_STATIC_GEN_0;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)&ImGuiWrapper::ImGui::GetStyle();
    */
    public static native long internal_native_GetStyle();

    public static void NewFrame() {
        internal_native_NewFrame();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::NewFrame();
    */
    public static native void internal_native_NewFrame();

    public static void EndFrame() {
        internal_native_EndFrame();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::EndFrame();
    */
    public static native void internal_native_EndFrame();

    public static void Render() {
        internal_native_Render();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::Render();
    */
    public static native void internal_native_Render();

    public static ImDrawData GetDrawData() {
        long pointer = internal_native_GetDrawData();
        if (pointer == 0)
            return ImDrawData.NULL;
        if (ImDrawData_TEMP_STATIC_GEN_0 == null)
            ImDrawData_TEMP_STATIC_GEN_0 = ImDrawData.native_new();
        ImDrawData_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return ImDrawData_TEMP_STATIC_GEN_0;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)ImGuiWrapper::ImGui::GetDrawData();
    */
    public static native long internal_native_GetDrawData();

    public static void ShowDemoWindow(IDLBoolArray p_open) {
        internal_native_ShowDemoWindow(p_open.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::ShowDemoWindow((bool*)p_open_addr);
    */
    public static native void internal_native_ShowDemoWindow(long p_open_addr);

    public static void ShowDemoWindow() {
        internal_native_ShowDemoWindow();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::ShowDemoWindow();
    */
    public static native void internal_native_ShowDemoWindow();

    public static void ShowMetricsWindow(IDLBoolArray p_open) {
        internal_native_ShowMetricsWindow(p_open.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::ShowMetricsWindow((bool*)p_open_addr);
    */
    public static native void internal_native_ShowMetricsWindow(long p_open_addr);

    public static void ShowMetricsWindow() {
        internal_native_ShowMetricsWindow();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::ShowMetricsWindow();
    */
    public static native void internal_native_ShowMetricsWindow();

    public static void ShowDebugLogWindow(IDLBoolArray p_open) {
        internal_native_ShowDebugLogWindow(p_open.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::ShowDebugLogWindow((bool*)p_open_addr);
    */
    public static native void internal_native_ShowDebugLogWindow(long p_open_addr);

    public static void ShowDebugLogWindow() {
        internal_native_ShowDebugLogWindow();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::ShowDebugLogWindow();
    */
    public static native void internal_native_ShowDebugLogWindow();

    public static void ShowIDStackToolWindow(IDLBoolArray p_open) {
        internal_native_ShowIDStackToolWindow(p_open.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::ShowIDStackToolWindow((bool*)p_open_addr);
    */
    public static native void internal_native_ShowIDStackToolWindow(long p_open_addr);

    public static void ShowIDStackToolWindow() {
        internal_native_ShowIDStackToolWindow();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::ShowIDStackToolWindow();
    */
    public static native void internal_native_ShowIDStackToolWindow();

    public static void ShowAboutWindow(IDLBoolArray p_open) {
        internal_native_ShowAboutWindow(p_open.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::ShowAboutWindow((bool*)p_open_addr);
    */
    public static native void internal_native_ShowAboutWindow(long p_open_addr);

    public static void ShowAboutWindow() {
        internal_native_ShowAboutWindow();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::ShowAboutWindow();
    */
    public static native void internal_native_ShowAboutWindow();

    public static void ShowStyleEditor(ImGuiStyle ref) {
        internal_native_ShowStyleEditor(ref.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::ShowStyleEditor((ImGuiStyle* )ref_addr);
    */
    public static native void internal_native_ShowStyleEditor(long ref_addr);

    public static void ShowStyleEditor() {
        internal_native_ShowStyleEditor();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::ShowStyleEditor();
    */
    public static native void internal_native_ShowStyleEditor();

    public static void ShowStyleSelector(String label) {
        internal_native_ShowStyleSelector(label);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::ShowStyleSelector(label);
    */
    public static native void internal_native_ShowStyleSelector(String label);

    public static void ShowFontSelector(String label) {
        internal_native_ShowFontSelector(label);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::ShowFontSelector(label);
    */
    public static native void internal_native_ShowFontSelector(String label);

    public static void ShowUserGuide() {
        internal_native_ShowUserGuide();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::ShowUserGuide();
    */
    public static native void internal_native_ShowUserGuide();

    public static void StyleColorsDark(ImGuiStyle dst) {
        internal_native_StyleColorsDark(dst.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::StyleColorsDark((ImGuiStyle* )dst_addr);
    */
    public static native void internal_native_StyleColorsDark(long dst_addr);

    public static void StyleColorsDark() {
        internal_native_StyleColorsDark();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::StyleColorsDark();
    */
    public static native void internal_native_StyleColorsDark();

    public static void StyleColorsLight(ImGuiStyle dst) {
        internal_native_StyleColorsLight(dst.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::StyleColorsLight((ImGuiStyle* )dst_addr);
    */
    public static native void internal_native_StyleColorsLight(long dst_addr);

    public static void StyleColorsLight() {
        internal_native_StyleColorsLight();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::StyleColorsLight();
    */
    public static native void internal_native_StyleColorsLight();

    public static void StyleColorsClassic(ImGuiStyle dst) {
        internal_native_StyleColorsClassic(dst.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::StyleColorsClassic((ImGuiStyle* )dst_addr);
    */
    public static native void internal_native_StyleColorsClassic(long dst_addr);

    public static void StyleColorsClassic() {
        internal_native_StyleColorsClassic();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::StyleColorsClassic();
    */
    public static native void internal_native_StyleColorsClassic();

    public static boolean Begin(String name, IDLBoolArray p_open, ImGuiWindowFlags ImGuiWindowFlags) {
        return internal_native_Begin(name, p_open.native_void_address, ImGuiWindowFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::Begin(name, (bool*)p_open_addr, (::ImGuiWindowFlags)ImGuiWindowFlags);
    */
    public static native boolean internal_native_Begin(String name, long p_open_addr, long ImGuiWindowFlags);

    public static boolean Begin(String name, IDLBoolArray p_open) {
        return internal_native_Begin(name, p_open.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::Begin(name, (bool*)p_open_addr);
    */
    public static native boolean internal_native_Begin(String name, long p_open_addr);

    public static boolean Begin(String name) {
        return internal_native_Begin(name);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::Begin(name);
    */
    public static native boolean internal_native_Begin(String name);

    public static void End() {
        internal_native_End();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::End();
    */
    public static native void internal_native_End();

    public static boolean BeginChild(String str_id, ImVec2 size, ImGuiChildFlags ImGuiChildFlags, ImGuiWindowFlags ImGuiWindowFlags) {
        return internal_native_BeginChild__0(str_id, size.native_address, ImGuiChildFlags.getValue(), ImGuiWindowFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginChild(str_id, *((ImVec2* )size_addr), (::ImGuiChildFlags)ImGuiChildFlags, (::ImGuiWindowFlags)ImGuiWindowFlags);
    */
    public static native boolean internal_native_BeginChild__0(String str_id, long size_addr, long ImGuiChildFlags, long ImGuiWindowFlags);

    public static boolean BeginChild(String str_id, ImVec2 size, ImGuiChildFlags ImGuiChildFlags) {
        return internal_native_BeginChild__0(str_id, size.native_address, ImGuiChildFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginChild(str_id, *((ImVec2* )size_addr), (::ImGuiChildFlags)ImGuiChildFlags);
    */
    public static native boolean internal_native_BeginChild__0(String str_id, long size_addr, long ImGuiChildFlags);

    public static boolean BeginChild(String str_id, ImVec2 size) {
        return internal_native_BeginChild__0(str_id, size.native_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginChild(str_id, *((ImVec2* )size_addr));
    */
    public static native boolean internal_native_BeginChild__0(String str_id, long size_addr);

    public static boolean BeginChild(String str_id) {
        return internal_native_BeginChild__0(str_id);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginChild(str_id);
    */
    public static native boolean internal_native_BeginChild__0(String str_id);

    public static boolean BeginChild(int id, ImVec2 size, ImGuiChildFlags ImGuiChildFlags, ImGuiWindowFlags ImGuiWindowFlags) {
        return internal_native_BeginChild__1(id, size.native_address, ImGuiChildFlags.getValue(), ImGuiWindowFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginChild((int)id, *((ImVec2* )size_addr), (::ImGuiChildFlags)ImGuiChildFlags, (::ImGuiWindowFlags)ImGuiWindowFlags);
    */
    public static native boolean internal_native_BeginChild__1(int id, long size_addr, long ImGuiChildFlags, long ImGuiWindowFlags);

    public static boolean BeginChild(int id, ImVec2 size, ImGuiChildFlags ImGuiChildFlags) {
        return internal_native_BeginChild__1(id, size.native_address, ImGuiChildFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginChild((int)id, *((ImVec2* )size_addr), (::ImGuiChildFlags)ImGuiChildFlags);
    */
    public static native boolean internal_native_BeginChild__1(int id, long size_addr, long ImGuiChildFlags);

    public static boolean BeginChild(int id, ImVec2 size) {
        return internal_native_BeginChild__1(id, size.native_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginChild((int)id, *((ImVec2* )size_addr));
    */
    public static native boolean internal_native_BeginChild__1(int id, long size_addr);

    public static boolean BeginChild(int id) {
        return internal_native_BeginChild__1(id);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginChild((int)id);
    */
    public static native boolean internal_native_BeginChild__1(int id);

    public static void EndChild() {
        internal_native_EndChild();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::EndChild();
    */
    public static native void internal_native_EndChild();

    public static boolean IsWindowAppearing() {
        return internal_native_IsWindowAppearing();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsWindowAppearing();
    */
    public static native boolean internal_native_IsWindowAppearing();

    public static boolean IsWindowCollapsed() {
        return internal_native_IsWindowCollapsed();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsWindowCollapsed();
    */
    public static native boolean internal_native_IsWindowCollapsed();

    public static boolean IsWindowFocused(ImGuiFocusedFlags ImGuiFocusedFlags) {
        return internal_native_IsWindowFocused(ImGuiFocusedFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsWindowFocused((::ImGuiFocusedFlags)ImGuiFocusedFlags);
    */
    public static native boolean internal_native_IsWindowFocused(long ImGuiFocusedFlags);

    public static boolean IsWindowFocused() {
        return internal_native_IsWindowFocused();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsWindowFocused();
    */
    public static native boolean internal_native_IsWindowFocused();

    public static boolean IsWindowHovered(ImGuiHoveredFlags ImGuiFocusedFlags) {
        return internal_native_IsWindowHovered(ImGuiFocusedFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsWindowHovered((::ImGuiHoveredFlags)ImGuiFocusedFlags);
    */
    public static native boolean internal_native_IsWindowHovered(long ImGuiFocusedFlags);

    public static boolean IsWindowHovered() {
        return internal_native_IsWindowHovered();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsWindowHovered();
    */
    public static native boolean internal_native_IsWindowHovered();

    public static ImDrawList GetWindowDrawList() {
        long pointer = internal_native_GetWindowDrawList();
        if (pointer == 0)
            return ImDrawList.NULL;
        if (ImDrawList_TEMP_STATIC_GEN_0 == null)
            ImDrawList_TEMP_STATIC_GEN_0 = ImDrawList.native_new();
        ImDrawList_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return ImDrawList_TEMP_STATIC_GEN_0;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)ImGuiWrapper::ImGui::GetWindowDrawList();
    */
    public static native long internal_native_GetWindowDrawList();

    public static float GetWindowDpiScale() {
        return internal_native_GetWindowDpiScale();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetWindowDpiScale();
    */
    public static native float internal_native_GetWindowDpiScale();

    public static ImVec2 GetWindowPos() {
        long pointer = internal_native_GetWindowPos();
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_0 == null)
            ImVec2_TEMP_STATIC_GEN_0 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_0;
    }

    /*
      [-JNI;-NATIVE]
      static ImVec2 copy_addr;
      copy_addr = ImGuiWrapper::ImGui::GetWindowPos();
      return (jlong)&copy_addr;
    */
    public static native long internal_native_GetWindowPos();

    public static ImVec2 GetWindowSize() {
        long pointer = internal_native_GetWindowSize();
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_1 == null)
            ImVec2_TEMP_STATIC_GEN_1 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_1.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_1;
    }

    /*
      [-JNI;-NATIVE]
      static ImVec2 copy_addr;
      copy_addr = ImGuiWrapper::ImGui::GetWindowSize();
      return (jlong)&copy_addr;
    */
    public static native long internal_native_GetWindowSize();

    public static float GetWindowWidth() {
        return internal_native_GetWindowWidth();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetWindowWidth();
    */
    public static native float internal_native_GetWindowWidth();

    public static float GetWindowHeight() {
        return internal_native_GetWindowHeight();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetWindowHeight();
    */
    public static native float internal_native_GetWindowHeight();

    public static ImGuiViewport GetWindowViewport() {
        long pointer = internal_native_GetWindowViewport();
        if (pointer == 0)
            return ImGuiViewport.NULL;
        if (ImGuiViewport_TEMP_STATIC_GEN_0 == null)
            ImGuiViewport_TEMP_STATIC_GEN_0 = ImGuiViewport.native_new();
        ImGuiViewport_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return ImGuiViewport_TEMP_STATIC_GEN_0;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)ImGuiWrapper::ImGui::GetWindowViewport();
    */
    public static native long internal_native_GetWindowViewport();

    public static void SetNextWindowPos(ImVec2 pos, ImGuiCond ImGuiCond, ImVec2 pivot) {
        internal_native_SetNextWindowPos(pos.native_address, ImGuiCond.getValue(), pivot.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetNextWindowPos(*((ImVec2* )pos_addr), (::ImGuiCond)ImGuiCond, *((ImVec2* )pivot_addr));
    */
    public static native void internal_native_SetNextWindowPos(long pos_addr, long ImGuiCond, long pivot_addr);

    public static void SetNextWindowPos(ImVec2 pos, ImGuiCond ImGuiCond) {
        internal_native_SetNextWindowPos(pos.native_address, ImGuiCond.getValue());
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetNextWindowPos(*((ImVec2* )pos_addr), (::ImGuiCond)ImGuiCond);
    */
    public static native void internal_native_SetNextWindowPos(long pos_addr, long ImGuiCond);

    public static void SetNextWindowPos(ImVec2 pos) {
        internal_native_SetNextWindowPos(pos.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetNextWindowPos(*((ImVec2* )pos_addr));
    */
    public static native void internal_native_SetNextWindowPos(long pos_addr);

    public static void SetNextWindowSize(ImVec2 size, ImGuiCond ImGuiCond) {
        internal_native_SetNextWindowSize(size.native_address, ImGuiCond.getValue());
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetNextWindowSize(*((ImVec2* )size_addr), (::ImGuiCond)ImGuiCond);
    */
    public static native void internal_native_SetNextWindowSize(long size_addr, long ImGuiCond);

    public static void SetNextWindowSize(ImVec2 size) {
        internal_native_SetNextWindowSize(size.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetNextWindowSize(*((ImVec2* )size_addr));
    */
    public static native void internal_native_SetNextWindowSize(long size_addr);

    public static void SetNextWindowSizeConstraints(ImVec2 size_min, ImVec2 size_max) {
        internal_native_SetNextWindowSizeConstraints(size_min.native_address, size_max.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetNextWindowSizeConstraints(*((ImVec2* )size_min_addr), *((ImVec2* )size_max_addr));
    */
    public static native void internal_native_SetNextWindowSizeConstraints(long size_min_addr, long size_max_addr);

    public static void SetNextWindowContentSize(ImVec2 size) {
        internal_native_SetNextWindowContentSize(size.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetNextWindowContentSize(*((ImVec2* )size_addr));
    */
    public static native void internal_native_SetNextWindowContentSize(long size_addr);

    public static void SetNextWindowCollapsed(boolean collapsed, ImGuiCond ImGuiCond) {
        internal_native_SetNextWindowCollapsed(collapsed, ImGuiCond.getValue());
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetNextWindowCollapsed(collapsed, (::ImGuiCond)ImGuiCond);
    */
    public static native void internal_native_SetNextWindowCollapsed(boolean collapsed, long ImGuiCond);

    public static void SetNextWindowCollapsed(boolean collapsed) {
        internal_native_SetNextWindowCollapsed(collapsed);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetNextWindowCollapsed(collapsed);
    */
    public static native void internal_native_SetNextWindowCollapsed(boolean collapsed);

    public static void SetNextWindowFocus() {
        internal_native_SetNextWindowFocus();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetNextWindowFocus();
    */
    public static native void internal_native_SetNextWindowFocus();

    public static void SetNextWindowScroll(ImVec2 scroll) {
        internal_native_SetNextWindowScroll(scroll.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetNextWindowScroll(*((ImVec2* )scroll_addr));
    */
    public static native void internal_native_SetNextWindowScroll(long scroll_addr);

    public static void SetNextWindowBgAlpha(float alpha) {
        internal_native_SetNextWindowBgAlpha(alpha);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetNextWindowBgAlpha((float)alpha);
    */
    public static native void internal_native_SetNextWindowBgAlpha(float alpha);

    public static void SetNextWindowViewport(int viewport_id) {
        internal_native_SetNextWindowViewport(viewport_id);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetNextWindowViewport((int)viewport_id);
    */
    public static native void internal_native_SetNextWindowViewport(int viewport_id);

    public static void SetWindowPos(ImVec2 pos, ImGuiCond ImGuiCond) {
        internal_native_SetWindowPos__0(pos.native_address, ImGuiCond.getValue());
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetWindowPos(*((ImVec2* )pos_addr), (::ImGuiCond)ImGuiCond);
    */
    public static native void internal_native_SetWindowPos__0(long pos_addr, long ImGuiCond);

    public static void SetWindowPos(ImVec2 pos) {
        internal_native_SetWindowPos__0(pos.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetWindowPos(*((ImVec2* )pos_addr));
    */
    public static native void internal_native_SetWindowPos__0(long pos_addr);

    public static void SetWindowPos(String name, ImVec2 pos, ImGuiCond ImGuiCond) {
        internal_native_SetWindowPos__1(name, pos.native_address, ImGuiCond.getValue());
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetWindowPos(name, *((ImVec2* )pos_addr), (::ImGuiCond)ImGuiCond);
    */
    public static native void internal_native_SetWindowPos__1(String name, long pos_addr, long ImGuiCond);

    public static void SetWindowPos(String name, ImVec2 pos) {
        internal_native_SetWindowPos__1(name, pos.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetWindowPos(name, *((ImVec2* )pos_addr));
    */
    public static native void internal_native_SetWindowPos__1(String name, long pos_addr);

    public static void SetWindowSize(ImVec2 size, ImGuiCond ImGuiCond) {
        internal_native_SetWindowSize__0(size.native_address, ImGuiCond.getValue());
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetWindowSize(*((ImVec2* )size_addr), (::ImGuiCond)ImGuiCond);
    */
    public static native void internal_native_SetWindowSize__0(long size_addr, long ImGuiCond);

    public static void SetWindowSize(ImVec2 size) {
        internal_native_SetWindowSize__0(size.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetWindowSize(*((ImVec2* )size_addr));
    */
    public static native void internal_native_SetWindowSize__0(long size_addr);

    public static void SetWindowSize(String name, ImVec2 size, ImGuiCond ImGuiCond) {
        internal_native_SetWindowSize__1(name, size.native_address, ImGuiCond.getValue());
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetWindowSize(name, *((ImVec2* )size_addr), (::ImGuiCond)ImGuiCond);
    */
    public static native void internal_native_SetWindowSize__1(String name, long size_addr, long ImGuiCond);

    public static void SetWindowSize(String name, ImVec2 size) {
        internal_native_SetWindowSize__1(name, size.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetWindowSize(name, *((ImVec2* )size_addr));
    */
    public static native void internal_native_SetWindowSize__1(String name, long size_addr);

    public static void SetWindowCollapsed(boolean collapsed, ImGuiCond ImGuiCond) {
        internal_native_SetWindowCollapsed__0(collapsed, ImGuiCond.getValue());
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetWindowCollapsed(collapsed, (::ImGuiCond)ImGuiCond);
    */
    public static native void internal_native_SetWindowCollapsed__0(boolean collapsed, long ImGuiCond);

    public static void SetWindowCollapsed(boolean collapsed) {
        internal_native_SetWindowCollapsed__0(collapsed);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetWindowCollapsed(collapsed);
    */
    public static native void internal_native_SetWindowCollapsed__0(boolean collapsed);

    public static void SetWindowCollapsed(String name, boolean collapsed, ImGuiCond ImGuiCond) {
        internal_native_SetWindowCollapsed__1(name, collapsed, ImGuiCond.getValue());
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetWindowCollapsed_1(name, collapsed, (::ImGuiCond)ImGuiCond);
    */
    public static native void internal_native_SetWindowCollapsed__1(String name, boolean collapsed, long ImGuiCond);

    public static void SetWindowCollapsed(String name, boolean collapsed) {
        internal_native_SetWindowCollapsed__1(name, collapsed);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetWindowCollapsed_1(name, collapsed);
    */
    public static native void internal_native_SetWindowCollapsed__1(String name, boolean collapsed);

    public static void SetWindowFocus() {
        internal_native_SetWindowFocus();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetWindowFocus();
    */
    public static native void internal_native_SetWindowFocus();

    public static void SetWindowFontScale(float scale) {
        internal_native_SetWindowFontScale(scale);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetWindowFontScale((float)scale);
    */
    public static native void internal_native_SetWindowFontScale(float scale);

    public static void SetWindowFocus(String name) {
        internal_native_SetWindowFocus(name);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetWindowFocus(name);
    */
    public static native void internal_native_SetWindowFocus(String name);

    public static float GetScrollX() {
        return internal_native_GetScrollX();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetScrollX();
    */
    public static native float internal_native_GetScrollX();

    public static float GetScrollY() {
        return internal_native_GetScrollY();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetScrollY();
    */
    public static native float internal_native_GetScrollY();

    public static void SetScrollX(float scroll_x) {
        internal_native_SetScrollX(scroll_x);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetScrollX((float)scroll_x);
    */
    public static native void internal_native_SetScrollX(float scroll_x);

    public static void SetScrollY(float scroll_y) {
        internal_native_SetScrollY(scroll_y);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetScrollY((float)scroll_y);
    */
    public static native void internal_native_SetScrollY(float scroll_y);

    public static float GetScrollMaxX() {
        return internal_native_GetScrollMaxX();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetScrollMaxX();
    */
    public static native float internal_native_GetScrollMaxX();

    public static float GetScrollMaxY() {
        return internal_native_GetScrollMaxY();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetScrollMaxY();
    */
    public static native float internal_native_GetScrollMaxY();

    public static void SetScrollHereX(float center_x_ratio) {
        internal_native_SetScrollHereX(center_x_ratio);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetScrollHereX((float)center_x_ratio);
    */
    public static native void internal_native_SetScrollHereX(float center_x_ratio);

    public static void SetScrollHereX() {
        internal_native_SetScrollHereX();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetScrollHereX();
    */
    public static native void internal_native_SetScrollHereX();

    public static void SetScrollHereY(float center_y_ratio) {
        internal_native_SetScrollHereY(center_y_ratio);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetScrollHereY((float)center_y_ratio);
    */
    public static native void internal_native_SetScrollHereY(float center_y_ratio);

    public static void SetScrollHereY() {
        internal_native_SetScrollHereY();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetScrollHereY();
    */
    public static native void internal_native_SetScrollHereY();

    public static void SetScrollFromPosX(float local_x, float center_x_ratio) {
        internal_native_SetScrollFromPosX(local_x, center_x_ratio);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetScrollFromPosX((float)local_x, (float)center_x_ratio);
    */
    public static native void internal_native_SetScrollFromPosX(float local_x, float center_x_ratio);

    public static void SetScrollFromPosX(float local_x) {
        internal_native_SetScrollFromPosX(local_x);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetScrollFromPosX((float)local_x);
    */
    public static native void internal_native_SetScrollFromPosX(float local_x);

    public static void SetScrollFromPosY(float local_y, float center_y_ratio) {
        internal_native_SetScrollFromPosY(local_y, center_y_ratio);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetScrollFromPosY((float)local_y, (float)center_y_ratio);
    */
    public static native void internal_native_SetScrollFromPosY(float local_y, float center_y_ratio);

    public static void SetScrollFromPosY(float local_y) {
        internal_native_SetScrollFromPosY(local_y);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetScrollFromPosY((float)local_y);
    */
    public static native void internal_native_SetScrollFromPosY(float local_y);

    public static void PushFont(ImFont font) {
        internal_native_PushFont(font.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PushFont((ImFont* )font_addr);
    */
    public static native void internal_native_PushFont(long font_addr);

    public static void PopFont() {
        internal_native_PopFont();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PopFont();
    */
    public static native void internal_native_PopFont();

    public static void PushStyleColor(ImGuiCol idx, int col) {
        internal_native_PushStyleColor__0(idx.getValue(), col);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PushStyleColor((::ImGuiCol)idx, col);
    */
    public static native void internal_native_PushStyleColor__0(long idx, int col);

    public static void PushStyleColor(ImGuiCol idx, ImVec4 col) {
        internal_native_PushStyleColor__1(idx.getValue(), col.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PushStyleColor((::ImGuiCol)idx, *((ImVec4* )col_addr));
    */
    public static native void internal_native_PushStyleColor__1(long idx, long col_addr);

    public static void PopStyleColor(int count) {
        internal_native_PopStyleColor(count);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PopStyleColor((int)count);
    */
    public static native void internal_native_PopStyleColor(int count);

    public static void PopStyleColor() {
        internal_native_PopStyleColor();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PopStyleColor();
    */
    public static native void internal_native_PopStyleColor();

    public static void PushStyleVar(ImGuiStyleVar idx, float val) {
        internal_native_PushStyleVar__0(idx.getValue(), val);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PushStyleVar((::ImGuiStyleVar)idx, (float)val);
    */
    public static native void internal_native_PushStyleVar__0(long idx, float val);

    public static void PushStyleVar(ImGuiStyleVar idx, ImVec2 val) {
        internal_native_PushStyleVar__1(idx.getValue(), val.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PushStyleVar((::ImGuiStyleVar)idx, *((ImVec2* )val_addr));
    */
    public static native void internal_native_PushStyleVar__1(long idx, long val_addr);

    public static void PopStyleVar(int count) {
        internal_native_PopStyleVar(count);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PopStyleVar((int)count);
    */
    public static native void internal_native_PopStyleVar(int count);

    public static void PopStyleVar() {
        internal_native_PopStyleVar();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PopStyleVar();
    */
    public static native void internal_native_PopStyleVar();

    public static void PushItemWidth(float item_width) {
        internal_native_PushItemWidth(item_width);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PushItemWidth((float)item_width);
    */
    public static native void internal_native_PushItemWidth(float item_width);

    public static void PopItemWidth() {
        internal_native_PopItemWidth();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PopItemWidth();
    */
    public static native void internal_native_PopItemWidth();

    public static void SetNextItemWidth(float item_width) {
        internal_native_SetNextItemWidth(item_width);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetNextItemWidth((float)item_width);
    */
    public static native void internal_native_SetNextItemWidth(float item_width);

    public static float CalcItemWidth() {
        return internal_native_CalcItemWidth();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::CalcItemWidth();
    */
    public static native float internal_native_CalcItemWidth();

    public static void PushTextWrapPos(float wrap_local_pos_x) {
        internal_native_PushTextWrapPos(wrap_local_pos_x);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PushTextWrapPos((float)wrap_local_pos_x);
    */
    public static native void internal_native_PushTextWrapPos(float wrap_local_pos_x);

    public static void PushTextWrapPos() {
        internal_native_PushTextWrapPos();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PushTextWrapPos();
    */
    public static native void internal_native_PushTextWrapPos();

    public static void PopTextWrapPos() {
        internal_native_PopTextWrapPos();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PopTextWrapPos();
    */
    public static native void internal_native_PopTextWrapPos();

    public static ImFont GetFont() {
        long pointer = internal_native_GetFont();
        if (pointer == 0)
            return ImFont.NULL;
        if (ImFont_TEMP_STATIC_GEN_0 == null)
            ImFont_TEMP_STATIC_GEN_0 = ImFont.native_new();
        ImFont_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return ImFont_TEMP_STATIC_GEN_0;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)ImGuiWrapper::ImGui::GetFont();
    */
    public static native long internal_native_GetFont();

    public static float GetFontSize() {
        return internal_native_GetFontSize();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetFontSize();
    */
    public static native float internal_native_GetFontSize();

    public static ImVec2 GetFontTexUvWhitePixel() {
        long pointer = internal_native_GetFontTexUvWhitePixel();
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_2 == null)
            ImVec2_TEMP_STATIC_GEN_2 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_2.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_2;
    }

    /*
      [-JNI;-NATIVE]
      static ImVec2 copy_addr;
      copy_addr = ImGuiWrapper::ImGui::GetFontTexUvWhitePixel();
      return (jlong)&copy_addr;
    */
    public static native long internal_native_GetFontTexUvWhitePixel();

    public static int GetColorU32Style(int idx, float alpha_mul) {
        return internal_native_GetColorU32Style(idx, alpha_mul);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetColorU32Style((int)idx, (float)alpha_mul);
    */
    public static native int internal_native_GetColorU32Style(int idx, float alpha_mul);

    public static int GetColorU32Style(int idx) {
        return internal_native_GetColorU32Style(idx);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetColorU32Style((int)idx);
    */
    public static native int internal_native_GetColorU32Style(int idx);

    public static int GetColorU32(ImVec4 col) {
        return internal_native_GetColorU32__0(col.native_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetColorU32(*((ImVec4* )col_addr));
    */
    public static native int internal_native_GetColorU32__0(long col_addr);

    public static int GetColorU32(int col) {
        return internal_native_GetColorU32__1(col);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetColorU32(col);
    */
    public static native int internal_native_GetColorU32__1(int col);

    public static ImVec4 GetStyleColorVec4(int idx) {
        long pointer = internal_native_GetStyleColorVec4(idx);
        if (pointer == 0)
            return ImVec4.NULL;
        if (ImVec4_TEMP_STATIC_GEN_0 == null)
            ImVec4_TEMP_STATIC_GEN_0 = ImVec4.native_new();
        ImVec4_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return ImVec4_TEMP_STATIC_GEN_0;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)&ImGuiWrapper::ImGui::GetStyleColorVec4((int)idx);
    */
    public static native long internal_native_GetStyleColorVec4(int idx);

    public static ImVec2 GetCursorScreenPos() {
        long pointer = internal_native_GetCursorScreenPos();
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_3 == null)
            ImVec2_TEMP_STATIC_GEN_3 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_3.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_3;
    }

    /*
      [-JNI;-NATIVE]
      static ImVec2 copy_addr;
      copy_addr = ImGuiWrapper::ImGui::GetCursorScreenPos();
      return (jlong)&copy_addr;
    */
    public static native long internal_native_GetCursorScreenPos();

    public static void SetCursorScreenPos(ImVec2 pos) {
        internal_native_SetCursorScreenPos(pos.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetCursorScreenPos(*((ImVec2* )pos_addr));
    */
    public static native void internal_native_SetCursorScreenPos(long pos_addr);

    public static ImVec2 GetContentRegionAvail() {
        long pointer = internal_native_GetContentRegionAvail();
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_4 == null)
            ImVec2_TEMP_STATIC_GEN_4 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_4.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_4;
    }

    /*
      [-JNI;-NATIVE]
      static ImVec2 copy_addr;
      copy_addr = ImGuiWrapper::ImGui::GetContentRegionAvail();
      return (jlong)&copy_addr;
    */
    public static native long internal_native_GetContentRegionAvail();

    public static ImVec2 GetCursorPos() {
        long pointer = internal_native_GetCursorPos();
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_5 == null)
            ImVec2_TEMP_STATIC_GEN_5 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_5.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_5;
    }

    /*
      [-JNI;-NATIVE]
      static ImVec2 copy_addr;
      copy_addr = ImGuiWrapper::ImGui::GetCursorPos();
      return (jlong)&copy_addr;
    */
    public static native long internal_native_GetCursorPos();

    public static float GetCursorPosX() {
        return internal_native_GetCursorPosX();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetCursorPosX();
    */
    public static native float internal_native_GetCursorPosX();

    public static float GetCursorPosY() {
        return internal_native_GetCursorPosY();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetCursorPosY();
    */
    public static native float internal_native_GetCursorPosY();

    public static void SetCursorPos(ImVec2 local_pos) {
        internal_native_SetCursorPos(local_pos.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetCursorPos(*((ImVec2* )local_pos_addr));
    */
    public static native void internal_native_SetCursorPos(long local_pos_addr);

    public static void SetCursorPosX(float local_x) {
        internal_native_SetCursorPosX(local_x);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetCursorPosX((float)local_x);
    */
    public static native void internal_native_SetCursorPosX(float local_x);

    public static void SetCursorPosY(float local_y) {
        internal_native_SetCursorPosY(local_y);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetCursorPosY((float)local_y);
    */
    public static native void internal_native_SetCursorPosY(float local_y);

    public static ImVec2 GetCursorStartPos() {
        long pointer = internal_native_GetCursorStartPos();
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_6 == null)
            ImVec2_TEMP_STATIC_GEN_6 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_6.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_6;
    }

    /*
      [-JNI;-NATIVE]
      static ImVec2 copy_addr;
      copy_addr = ImGuiWrapper::ImGui::GetCursorStartPos();
      return (jlong)&copy_addr;
    */
    public static native long internal_native_GetCursorStartPos();

    public static void Separator() {
        internal_native_Separator();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::Separator();
    */
    public static native void internal_native_Separator();

    public static void SameLine(float offset_from_start_x, float spacing) {
        internal_native_SameLine(offset_from_start_x, spacing);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SameLine((float)offset_from_start_x, (float)spacing);
    */
    public static native void internal_native_SameLine(float offset_from_start_x, float spacing);

    public static void SameLine(float offset_from_start_x) {
        internal_native_SameLine(offset_from_start_x);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SameLine((float)offset_from_start_x);
    */
    public static native void internal_native_SameLine(float offset_from_start_x);

    public static void SameLine() {
        internal_native_SameLine();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SameLine();
    */
    public static native void internal_native_SameLine();

    public static void NewLine() {
        internal_native_NewLine();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::NewLine();
    */
    public static native void internal_native_NewLine();

    public static void Spacing() {
        internal_native_Spacing();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::Spacing();
    */
    public static native void internal_native_Spacing();

    public static void Dummy(ImVec2 size) {
        internal_native_Dummy(size.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::Dummy(*((ImVec2* )size_addr));
    */
    public static native void internal_native_Dummy(long size_addr);

    public static void Indent(float indent_w) {
        internal_native_Indent(indent_w);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::Indent((float)indent_w);
    */
    public static native void internal_native_Indent(float indent_w);

    public static void Indent() {
        internal_native_Indent();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::Indent();
    */
    public static native void internal_native_Indent();

    public static void Unindent(float indent_w) {
        internal_native_Unindent(indent_w);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::Unindent((float)indent_w);
    */
    public static native void internal_native_Unindent(float indent_w);

    public static void Unindent() {
        internal_native_Unindent();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::Unindent();
    */
    public static native void internal_native_Unindent();

    public static void BeginGroup() {
        internal_native_BeginGroup();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::BeginGroup();
    */
    public static native void internal_native_BeginGroup();

    public static void EndGroup() {
        internal_native_EndGroup();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::EndGroup();
    */
    public static native void internal_native_EndGroup();

    public static void AlignTextToFramePadding() {
        internal_native_AlignTextToFramePadding();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::AlignTextToFramePadding();
    */
    public static native void internal_native_AlignTextToFramePadding();

    public static float GetTextLineHeight() {
        return internal_native_GetTextLineHeight();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetTextLineHeight();
    */
    public static native float internal_native_GetTextLineHeight();

    public static float GetTextLineHeightWithSpacing() {
        return internal_native_GetTextLineHeightWithSpacing();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetTextLineHeightWithSpacing();
    */
    public static native float internal_native_GetTextLineHeightWithSpacing();

    public static float GetFrameHeight() {
        return internal_native_GetFrameHeight();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetFrameHeight();
    */
    public static native float internal_native_GetFrameHeight();

    public static float GetFrameHeightWithSpacing() {
        return internal_native_GetFrameHeightWithSpacing();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetFrameHeightWithSpacing();
    */
    public static native float internal_native_GetFrameHeightWithSpacing();

    public static void PushID(String str_id) {
        internal_native_PushID__0(str_id);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PushID(str_id);
    */
    public static native void internal_native_PushID__0(String str_id);

    public static void PushID(String str_id_begin, String str_id_end) {
        internal_native_PushID__1(str_id_begin, str_id_end);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PushID(str_id_begin, str_id_end);
    */
    public static native void internal_native_PushID__1(String str_id_begin, String str_id_end);

    public static void PushID(int int_id) {
        internal_native_PushID__2(int_id);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PushID((int)int_id);
    */
    public static native void internal_native_PushID__2(int int_id);

    public static void PopID() {
        internal_native_PopID();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PopID();
    */
    public static native void internal_native_PopID();

    public static int GetID(String str_id) {
        return internal_native_GetID__0(str_id);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetID(str_id);
    */
    public static native int internal_native_GetID__0(String str_id);

    public static int GetID(String str_id_begin, String str_id_end) {
        return internal_native_GetID__1(str_id_begin, str_id_end);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetID(str_id_begin, str_id_end);
    */
    public static native int internal_native_GetID__1(String str_id_begin, String str_id_end);

    public static int GetID(IDLBase ptr_id) {
        return internal_native_GetID__2(ptr_id.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetID((void** )ptr_id_addr);
    */
    public static native int internal_native_GetID__2(long ptr_id_addr);

    public static void TextUnformatted(String text, String text_end) {
        internal_native_TextUnformatted(text, text_end);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::TextUnformatted(text, text_end);
    */
    public static native void internal_native_TextUnformatted(String text, String text_end);

    public static void TextUnformatted(String text) {
        internal_native_TextUnformatted(text);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::TextUnformatted(text);
    */
    public static native void internal_native_TextUnformatted(String text);

    public static void Text(String fmt) {
        internal_native_Text(fmt);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::Text(fmt);
    */
    public static native void internal_native_Text(String fmt);

    public static void TextColored(ImVec4 col, String fmt) {
        internal_native_TextColored(col.native_address, fmt);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::TextColored(*((ImVec4* )col_addr), fmt);
    */
    public static native void internal_native_TextColored(long col_addr, String fmt);

    public static void TextDisabled(String fmt) {
        internal_native_TextDisabled(fmt);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::TextDisabled(fmt);
    */
    public static native void internal_native_TextDisabled(String fmt);

    public static void TextWrapped(String fmt) {
        internal_native_TextWrapped(fmt);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::TextWrapped(fmt);
    */
    public static native void internal_native_TextWrapped(String fmt);

    public static void LabelText(String label, String fmt) {
        internal_native_LabelText(label, fmt);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::LabelText(label, fmt);
    */
    public static native void internal_native_LabelText(String label, String fmt);

    public static void BulletText(String fmt) {
        internal_native_BulletText(fmt);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::BulletText(fmt);
    */
    public static native void internal_native_BulletText(String fmt);

    public static void SeparatorText(String label) {
        internal_native_SeparatorText(label);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SeparatorText(label);
    */
    public static native void internal_native_SeparatorText(String label);

    public static boolean Button(String label, ImVec2 size) {
        return internal_native_Button(label, size.native_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::Button(label, *((ImVec2* )size_addr));
    */
    public static native boolean internal_native_Button(String label, long size_addr);

    public static boolean Button(String label) {
        return internal_native_Button(label);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::Button(label);
    */
    public static native boolean internal_native_Button(String label);

    public static boolean SmallButton(String label) {
        return internal_native_SmallButton(label);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SmallButton(label);
    */
    public static native boolean internal_native_SmallButton(String label);

    public static boolean InvisibleButton(String str_id, ImVec2 size, ImGuiButtonFlags ImGuiButtonFlags) {
        return internal_native_InvisibleButton(str_id, size.native_address, ImGuiButtonFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InvisibleButton(str_id, *((ImVec2* )size_addr), (::ImGuiButtonFlags)ImGuiButtonFlags);
    */
    public static native boolean internal_native_InvisibleButton(String str_id, long size_addr, long ImGuiButtonFlags);

    public static boolean InvisibleButton(String str_id, ImVec2 size) {
        return internal_native_InvisibleButton(str_id, size.native_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InvisibleButton(str_id, *((ImVec2* )size_addr));
    */
    public static native boolean internal_native_InvisibleButton(String str_id, long size_addr);

    public static boolean ArrowButton(String str_id, ImGuiDir dir) {
        return internal_native_ArrowButton(str_id, dir.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::ArrowButton(str_id, (::ImGuiDir)dir);
    */
    public static native boolean internal_native_ArrowButton(String str_id, long dir);

    public static boolean Checkbox(String label, IDLBoolArray v) {
        return internal_native_Checkbox(label, v.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::Checkbox(label, (bool*)v_addr);
    */
    public static native boolean internal_native_Checkbox(String label, long v_addr);

    public static boolean CheckboxFlags(String label, IDLIntArray flags, int flags_value) {
        return internal_native_CheckboxFlags(label, flags.native_void_address, flags_value);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::CheckboxFlags(label, (int*)flags_addr, (int)flags_value);
    */
    public static native boolean internal_native_CheckboxFlags(String label, long flags_addr, int flags_value);

    public static boolean RadioButton(String label, boolean active) {
        return internal_native_RadioButton__0(label, active);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::RadioButton(label, active);
    */
    public static native boolean internal_native_RadioButton__0(String label, boolean active);

    public static boolean RadioButton(String label, IDLIntArray v, int v_button) {
        return internal_native_RadioButton__1(label, v.native_void_address, v_button);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::RadioButton(label, (int*)v_addr, (int)v_button);
    */
    public static native boolean internal_native_RadioButton__1(String label, long v_addr, int v_button);

    public static void ProgressBar(float fraction, ImVec2 size_arg, String overlay) {
        internal_native_ProgressBar(fraction, size_arg.native_address, overlay);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::ProgressBar((float)fraction, *((ImVec2* )size_arg_addr), overlay);
    */
    public static native void internal_native_ProgressBar(float fraction, long size_arg_addr, String overlay);

    public static void ProgressBar(float fraction, ImVec2 size_arg) {
        internal_native_ProgressBar(fraction, size_arg.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::ProgressBar((float)fraction, *((ImVec2* )size_arg_addr));
    */
    public static native void internal_native_ProgressBar(float fraction, long size_arg_addr);

    public static void ProgressBar(float fraction) {
        internal_native_ProgressBar(fraction);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::ProgressBar((float)fraction);
    */
    public static native void internal_native_ProgressBar(float fraction);

    public static void Bullet() {
        internal_native_Bullet();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::Bullet();
    */
    public static native void internal_native_Bullet();

    public static boolean TextLink(String label) {
        return internal_native_TextLink(label);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::TextLink(label);
    */
    public static native boolean internal_native_TextLink(String label);

    public static void TextLinkOpenURL(String label, String url) {
        internal_native_TextLinkOpenURL(label, url);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::TextLinkOpenURL(label, url);
    */
    public static native void internal_native_TextLinkOpenURL(String label, String url);

    public static void TextLinkOpenURL(String label) {
        internal_native_TextLinkOpenURL(label);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::TextLinkOpenURL(label);
    */
    public static native void internal_native_TextLinkOpenURL(String label);

    public static void Image(int user_texture_id, ImVec2 size, ImVec2 uv0, ImVec2 uv1, ImVec4 tint_col, ImVec4 border_col) {
        internal_native_Image(user_texture_id, size.native_address, uv0.native_address, uv1.native_address, tint_col.native_address, border_col.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::Image((int)user_texture_id, *((ImVec2* )size_addr), *((ImVec2* )uv0_addr), *((ImVec2* )uv1_addr), *((ImVec4* )tint_col_addr), *((ImVec4* )border_col_addr));
    */
    public static native void internal_native_Image(int user_texture_id, long size_addr, long uv0_addr, long uv1_addr, long tint_col_addr, long border_col_addr);

    public static void Image(int user_texture_id, ImVec2 size, ImVec2 uv0, ImVec2 uv1, ImVec4 tint_col) {
        internal_native_Image(user_texture_id, size.native_address, uv0.native_address, uv1.native_address, tint_col.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::Image((int)user_texture_id, *((ImVec2* )size_addr), *((ImVec2* )uv0_addr), *((ImVec2* )uv1_addr), *((ImVec4* )tint_col_addr));
    */
    public static native void internal_native_Image(int user_texture_id, long size_addr, long uv0_addr, long uv1_addr, long tint_col_addr);

    public static void Image(int user_texture_id, ImVec2 size, ImVec2 uv0, ImVec2 uv1) {
        internal_native_Image(user_texture_id, size.native_address, uv0.native_address, uv1.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::Image((int)user_texture_id, *((ImVec2* )size_addr), *((ImVec2* )uv0_addr), *((ImVec2* )uv1_addr));
    */
    public static native void internal_native_Image(int user_texture_id, long size_addr, long uv0_addr, long uv1_addr);

    public static void Image(int user_texture_id, ImVec2 size, ImVec2 uv0) {
        internal_native_Image(user_texture_id, size.native_address, uv0.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::Image((int)user_texture_id, *((ImVec2* )size_addr), *((ImVec2* )uv0_addr));
    */
    public static native void internal_native_Image(int user_texture_id, long size_addr, long uv0_addr);

    public static void Image(int user_texture_id, ImVec2 size) {
        internal_native_Image(user_texture_id, size.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::Image((int)user_texture_id, *((ImVec2* )size_addr));
    */
    public static native void internal_native_Image(int user_texture_id, long size_addr);

    public static boolean ImageButton(String str_id, int user_texture_id, ImVec2 size, ImVec2 uv0, ImVec2 uv1, ImVec4 bg_col, ImVec4 tint_col) {
        return internal_native_ImageButton(str_id, user_texture_id, size.native_address, uv0.native_address, uv1.native_address, bg_col.native_address, tint_col.native_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::ImageButton(str_id, (int)user_texture_id, *((ImVec2* )size_addr), *((ImVec2* )uv0_addr), *((ImVec2* )uv1_addr), *((ImVec4* )bg_col_addr), *((ImVec4* )tint_col_addr));
    */
    public static native boolean internal_native_ImageButton(String str_id, int user_texture_id, long size_addr, long uv0_addr, long uv1_addr, long bg_col_addr, long tint_col_addr);

    public static boolean ImageButton(String str_id, int user_texture_id, ImVec2 size, ImVec2 uv0, ImVec2 uv1, ImVec4 bg_col) {
        return internal_native_ImageButton(str_id, user_texture_id, size.native_address, uv0.native_address, uv1.native_address, bg_col.native_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::ImageButton(str_id, (int)user_texture_id, *((ImVec2* )size_addr), *((ImVec2* )uv0_addr), *((ImVec2* )uv1_addr), *((ImVec4* )bg_col_addr));
    */
    public static native boolean internal_native_ImageButton(String str_id, int user_texture_id, long size_addr, long uv0_addr, long uv1_addr, long bg_col_addr);

    public static boolean ImageButton(String str_id, int user_texture_id, ImVec2 size, ImVec2 uv0, ImVec2 uv1) {
        return internal_native_ImageButton(str_id, user_texture_id, size.native_address, uv0.native_address, uv1.native_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::ImageButton(str_id, (int)user_texture_id, *((ImVec2* )size_addr), *((ImVec2* )uv0_addr), *((ImVec2* )uv1_addr));
    */
    public static native boolean internal_native_ImageButton(String str_id, int user_texture_id, long size_addr, long uv0_addr, long uv1_addr);

    public static boolean ImageButton(String str_id, int user_texture_id, ImVec2 size, ImVec2 uv0) {
        return internal_native_ImageButton(str_id, user_texture_id, size.native_address, uv0.native_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::ImageButton(str_id, (int)user_texture_id, *((ImVec2* )size_addr), *((ImVec2* )uv0_addr));
    */
    public static native boolean internal_native_ImageButton(String str_id, int user_texture_id, long size_addr, long uv0_addr);

    public static boolean ImageButton(String str_id, int user_texture_id, ImVec2 size) {
        return internal_native_ImageButton(str_id, user_texture_id, size.native_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::ImageButton(str_id, (int)user_texture_id, *((ImVec2* )size_addr));
    */
    public static native boolean internal_native_ImageButton(String str_id, int user_texture_id, long size_addr);

    public static boolean BeginCombo(String label, String preview_value, ImGuiComboFlags ImGuiComboFlags) {
        return internal_native_BeginCombo(label, preview_value, ImGuiComboFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginCombo(label, preview_value, (::ImGuiComboFlags)ImGuiComboFlags);
    */
    public static native boolean internal_native_BeginCombo(String label, String preview_value, long ImGuiComboFlags);

    public static boolean BeginCombo(String label, String preview_value) {
        return internal_native_BeginCombo(label, preview_value);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginCombo(label, preview_value);
    */
    public static native boolean internal_native_BeginCombo(String label, String preview_value);

    public static void EndCombo() {
        internal_native_EndCombo();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::EndCombo();
    */
    public static native void internal_native_EndCombo();

    public static boolean Combo(String label, IDLIntArray current_item, String items_separated_by_zeros, int popup_max_height_in_items) {
        return internal_native_Combo(label, current_item.native_void_address, items_separated_by_zeros, popup_max_height_in_items);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::Combo(label, (int*)current_item_addr, items_separated_by_zeros, (int)popup_max_height_in_items);
    */
    public static native boolean internal_native_Combo(String label, long current_item_addr, String items_separated_by_zeros, int popup_max_height_in_items);

    public static boolean Combo(String label, IDLIntArray current_item, String items_separated_by_zeros) {
        return internal_native_Combo(label, current_item.native_void_address, items_separated_by_zeros);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::Combo(label, (int*)current_item_addr, items_separated_by_zeros);
    */
    public static native boolean internal_native_Combo(String label, long current_item_addr, String items_separated_by_zeros);

    public static boolean DragFloat(String label, IDLFloatArray v, float v_speed, float v_min, float v_max, String format, ImGuiSliderFlags ImGuiSliderFlags) {
        return internal_native_DragFloat(label, v.native_void_address, v_speed, v_min, v_max, format, ImGuiSliderFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloat(label, (float*)v_addr, (float)v_speed, (float)v_min, (float)v_max, format, (::ImGuiSliderFlags)ImGuiSliderFlags);
    */
    public static native boolean internal_native_DragFloat(String label, long v_addr, float v_speed, float v_min, float v_max, String format, long ImGuiSliderFlags);

    public static boolean DragFloat(String label, IDLFloatArray v, float v_speed, float v_min, float v_max, String format) {
        return internal_native_DragFloat(label, v.native_void_address, v_speed, v_min, v_max, format);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloat(label, (float*)v_addr, (float)v_speed, (float)v_min, (float)v_max, format);
    */
    public static native boolean internal_native_DragFloat(String label, long v_addr, float v_speed, float v_min, float v_max, String format);

    public static boolean DragFloat(String label, IDLFloatArray v, float v_speed, float v_min, float v_max) {
        return internal_native_DragFloat(label, v.native_void_address, v_speed, v_min, v_max);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloat(label, (float*)v_addr, (float)v_speed, (float)v_min, (float)v_max);
    */
    public static native boolean internal_native_DragFloat(String label, long v_addr, float v_speed, float v_min, float v_max);

    public static boolean DragFloat(String label, IDLFloatArray v, float v_speed, float v_min) {
        return internal_native_DragFloat(label, v.native_void_address, v_speed, v_min);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloat(label, (float*)v_addr, (float)v_speed, (float)v_min);
    */
    public static native boolean internal_native_DragFloat(String label, long v_addr, float v_speed, float v_min);

    public static boolean DragFloat(String label, IDLFloatArray v, float v_speed) {
        return internal_native_DragFloat(label, v.native_void_address, v_speed);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloat(label, (float*)v_addr, (float)v_speed);
    */
    public static native boolean internal_native_DragFloat(String label, long v_addr, float v_speed);

    public static boolean DragFloat(String label, IDLFloatArray v) {
        return internal_native_DragFloat(label, v.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloat(label, (float*)v_addr);
    */
    public static native boolean internal_native_DragFloat(String label, long v_addr);

    public static boolean DragFloat2(String label, IDLFloatArray v, float v_speed, float v_min, float v_max, String format, ImGuiSliderFlags ImGuiSliderFlags) {
        return internal_native_DragFloat2(label, v.native_void_address, v_speed, v_min, v_max, format, ImGuiSliderFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloat2(label, (float*)v_addr, (float)v_speed, (float)v_min, (float)v_max, format, (::ImGuiSliderFlags)ImGuiSliderFlags);
    */
    public static native boolean internal_native_DragFloat2(String label, long v_addr, float v_speed, float v_min, float v_max, String format, long ImGuiSliderFlags);

    public static boolean DragFloat2(String label, IDLFloatArray v, float v_speed, float v_min, float v_max, String format) {
        return internal_native_DragFloat2(label, v.native_void_address, v_speed, v_min, v_max, format);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloat2(label, (float*)v_addr, (float)v_speed, (float)v_min, (float)v_max, format);
    */
    public static native boolean internal_native_DragFloat2(String label, long v_addr, float v_speed, float v_min, float v_max, String format);

    public static boolean DragFloat2(String label, IDLFloatArray v, float v_speed, float v_min, float v_max) {
        return internal_native_DragFloat2(label, v.native_void_address, v_speed, v_min, v_max);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloat2(label, (float*)v_addr, (float)v_speed, (float)v_min, (float)v_max);
    */
    public static native boolean internal_native_DragFloat2(String label, long v_addr, float v_speed, float v_min, float v_max);

    public static boolean DragFloat2(String label, IDLFloatArray v, float v_speed, float v_min) {
        return internal_native_DragFloat2(label, v.native_void_address, v_speed, v_min);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloat2(label, (float*)v_addr, (float)v_speed, (float)v_min);
    */
    public static native boolean internal_native_DragFloat2(String label, long v_addr, float v_speed, float v_min);

    public static boolean DragFloat2(String label, IDLFloatArray v, float v_speed) {
        return internal_native_DragFloat2(label, v.native_void_address, v_speed);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloat2(label, (float*)v_addr, (float)v_speed);
    */
    public static native boolean internal_native_DragFloat2(String label, long v_addr, float v_speed);

    public static boolean DragFloat2(String label, IDLFloatArray v) {
        return internal_native_DragFloat2(label, v.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloat2(label, (float*)v_addr);
    */
    public static native boolean internal_native_DragFloat2(String label, long v_addr);

    public static boolean DragFloat3(String label, IDLFloatArray v, float v_speed, float v_min, float v_max, String format, ImGuiSliderFlags ImGuiSliderFlags) {
        return internal_native_DragFloat3(label, v.native_void_address, v_speed, v_min, v_max, format, ImGuiSliderFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloat3(label, (float*)v_addr, (float)v_speed, (float)v_min, (float)v_max, format, (::ImGuiSliderFlags)ImGuiSliderFlags);
    */
    public static native boolean internal_native_DragFloat3(String label, long v_addr, float v_speed, float v_min, float v_max, String format, long ImGuiSliderFlags);

    public static boolean DragFloat3(String label, IDLFloatArray v, float v_speed, float v_min, float v_max, String format) {
        return internal_native_DragFloat3(label, v.native_void_address, v_speed, v_min, v_max, format);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloat3(label, (float*)v_addr, (float)v_speed, (float)v_min, (float)v_max, format);
    */
    public static native boolean internal_native_DragFloat3(String label, long v_addr, float v_speed, float v_min, float v_max, String format);

    public static boolean DragFloat3(String label, IDLFloatArray v, float v_speed, float v_min, float v_max) {
        return internal_native_DragFloat3(label, v.native_void_address, v_speed, v_min, v_max);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloat3(label, (float*)v_addr, (float)v_speed, (float)v_min, (float)v_max);
    */
    public static native boolean internal_native_DragFloat3(String label, long v_addr, float v_speed, float v_min, float v_max);

    public static boolean DragFloat3(String label, IDLFloatArray v, float v_speed, float v_min) {
        return internal_native_DragFloat3(label, v.native_void_address, v_speed, v_min);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloat3(label, (float*)v_addr, (float)v_speed, (float)v_min);
    */
    public static native boolean internal_native_DragFloat3(String label, long v_addr, float v_speed, float v_min);

    public static boolean DragFloat3(String label, IDLFloatArray v, float v_speed) {
        return internal_native_DragFloat3(label, v.native_void_address, v_speed);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloat3(label, (float*)v_addr, (float)v_speed);
    */
    public static native boolean internal_native_DragFloat3(String label, long v_addr, float v_speed);

    public static boolean DragFloat3(String label, IDLFloatArray v) {
        return internal_native_DragFloat3(label, v.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloat3(label, (float*)v_addr);
    */
    public static native boolean internal_native_DragFloat3(String label, long v_addr);

    public static boolean DragFloat4(String label, IDLFloatArray v, float v_speed, float v_min, float v_max, String format, ImGuiSliderFlags ImGuiSliderFlags) {
        return internal_native_DragFloat4(label, v.native_void_address, v_speed, v_min, v_max, format, ImGuiSliderFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloat4(label, (float*)v_addr, (float)v_speed, (float)v_min, (float)v_max, format, (::ImGuiSliderFlags)ImGuiSliderFlags);
    */
    public static native boolean internal_native_DragFloat4(String label, long v_addr, float v_speed, float v_min, float v_max, String format, long ImGuiSliderFlags);

    public static boolean DragFloat4(String label, IDLFloatArray v, float v_speed, float v_min, float v_max, String format) {
        return internal_native_DragFloat4(label, v.native_void_address, v_speed, v_min, v_max, format);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloat4(label, (float*)v_addr, (float)v_speed, (float)v_min, (float)v_max, format);
    */
    public static native boolean internal_native_DragFloat4(String label, long v_addr, float v_speed, float v_min, float v_max, String format);

    public static boolean DragFloat4(String label, IDLFloatArray v, float v_speed, float v_min, float v_max) {
        return internal_native_DragFloat4(label, v.native_void_address, v_speed, v_min, v_max);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloat4(label, (float*)v_addr, (float)v_speed, (float)v_min, (float)v_max);
    */
    public static native boolean internal_native_DragFloat4(String label, long v_addr, float v_speed, float v_min, float v_max);

    public static boolean DragFloat4(String label, IDLFloatArray v, float v_speed, float v_min) {
        return internal_native_DragFloat4(label, v.native_void_address, v_speed, v_min);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloat4(label, (float*)v_addr, (float)v_speed, (float)v_min);
    */
    public static native boolean internal_native_DragFloat4(String label, long v_addr, float v_speed, float v_min);

    public static boolean DragFloat4(String label, IDLFloatArray v, float v_speed) {
        return internal_native_DragFloat4(label, v.native_void_address, v_speed);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloat4(label, (float*)v_addr, (float)v_speed);
    */
    public static native boolean internal_native_DragFloat4(String label, long v_addr, float v_speed);

    public static boolean DragFloat4(String label, IDLFloatArray v) {
        return internal_native_DragFloat4(label, v.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloat4(label, (float*)v_addr);
    */
    public static native boolean internal_native_DragFloat4(String label, long v_addr);

    public static boolean DragFloatRange2(String label, IDLFloatArray v_current_min, IDLFloatArray v_current_max, float v_speed, float v_min, float v_max, String format, String format_max, ImGuiSliderFlags ImGuiSliderFlags) {
        return internal_native_DragFloatRange2(label, v_current_min.native_void_address, v_current_max.native_void_address, v_speed, v_min, v_max, format, format_max, ImGuiSliderFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloatRange2(label, (float*)v_current_min_addr, (float*)v_current_max_addr, (float)v_speed, (float)v_min, (float)v_max, format, format_max, (::ImGuiSliderFlags)ImGuiSliderFlags);
    */
    public static native boolean internal_native_DragFloatRange2(String label, long v_current_min_addr, long v_current_max_addr, float v_speed, float v_min, float v_max, String format, String format_max, long ImGuiSliderFlags);

    public static boolean DragFloatRange2(String label, IDLFloatArray v_current_min, IDLFloatArray v_current_max, float v_speed, float v_min, float v_max, String format, String format_max) {
        return internal_native_DragFloatRange2(label, v_current_min.native_void_address, v_current_max.native_void_address, v_speed, v_min, v_max, format, format_max);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloatRange2(label, (float*)v_current_min_addr, (float*)v_current_max_addr, (float)v_speed, (float)v_min, (float)v_max, format, format_max);
    */
    public static native boolean internal_native_DragFloatRange2(String label, long v_current_min_addr, long v_current_max_addr, float v_speed, float v_min, float v_max, String format, String format_max);

    public static boolean DragFloatRange2(String label, IDLFloatArray v_current_min, IDLFloatArray v_current_max, float v_speed, float v_min, float v_max, String format) {
        return internal_native_DragFloatRange2(label, v_current_min.native_void_address, v_current_max.native_void_address, v_speed, v_min, v_max, format);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloatRange2(label, (float*)v_current_min_addr, (float*)v_current_max_addr, (float)v_speed, (float)v_min, (float)v_max, format);
    */
    public static native boolean internal_native_DragFloatRange2(String label, long v_current_min_addr, long v_current_max_addr, float v_speed, float v_min, float v_max, String format);

    public static boolean DragFloatRange2(String label, IDLFloatArray v_current_min, IDLFloatArray v_current_max, float v_speed, float v_min, float v_max) {
        return internal_native_DragFloatRange2(label, v_current_min.native_void_address, v_current_max.native_void_address, v_speed, v_min, v_max);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloatRange2(label, (float*)v_current_min_addr, (float*)v_current_max_addr, (float)v_speed, (float)v_min, (float)v_max);
    */
    public static native boolean internal_native_DragFloatRange2(String label, long v_current_min_addr, long v_current_max_addr, float v_speed, float v_min, float v_max);

    public static boolean DragFloatRange2(String label, IDLFloatArray v_current_min, IDLFloatArray v_current_max, float v_speed, float v_min) {
        return internal_native_DragFloatRange2(label, v_current_min.native_void_address, v_current_max.native_void_address, v_speed, v_min);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloatRange2(label, (float*)v_current_min_addr, (float*)v_current_max_addr, (float)v_speed, (float)v_min);
    */
    public static native boolean internal_native_DragFloatRange2(String label, long v_current_min_addr, long v_current_max_addr, float v_speed, float v_min);

    public static boolean DragFloatRange2(String label, IDLFloatArray v_current_min, IDLFloatArray v_current_max, float v_speed) {
        return internal_native_DragFloatRange2(label, v_current_min.native_void_address, v_current_max.native_void_address, v_speed);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloatRange2(label, (float*)v_current_min_addr, (float*)v_current_max_addr, (float)v_speed);
    */
    public static native boolean internal_native_DragFloatRange2(String label, long v_current_min_addr, long v_current_max_addr, float v_speed);

    public static boolean DragFloatRange2(String label, IDLFloatArray v_current_min, IDLFloatArray v_current_max) {
        return internal_native_DragFloatRange2(label, v_current_min.native_void_address, v_current_max.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragFloatRange2(label, (float*)v_current_min_addr, (float*)v_current_max_addr);
    */
    public static native boolean internal_native_DragFloatRange2(String label, long v_current_min_addr, long v_current_max_addr);

    public static boolean DragInt(String label, IDLIntArray v, float v_speed, int v_min, int v_max, String format, ImGuiSliderFlags ImGuiSliderFlags) {
        return internal_native_DragInt(label, v.native_void_address, v_speed, v_min, v_max, format, ImGuiSliderFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragInt(label, (int*)v_addr, (float)v_speed, (int)v_min, (int)v_max, format, (::ImGuiSliderFlags)ImGuiSliderFlags);
    */
    public static native boolean internal_native_DragInt(String label, long v_addr, float v_speed, int v_min, int v_max, String format, long ImGuiSliderFlags);

    public static boolean DragInt(String label, IDLIntArray v, float v_speed, int v_min, int v_max, String format) {
        return internal_native_DragInt(label, v.native_void_address, v_speed, v_min, v_max, format);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragInt(label, (int*)v_addr, (float)v_speed, (int)v_min, (int)v_max, format);
    */
    public static native boolean internal_native_DragInt(String label, long v_addr, float v_speed, int v_min, int v_max, String format);

    public static boolean DragInt(String label, IDLIntArray v, float v_speed, int v_min, int v_max) {
        return internal_native_DragInt(label, v.native_void_address, v_speed, v_min, v_max);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragInt(label, (int*)v_addr, (float)v_speed, (int)v_min, (int)v_max);
    */
    public static native boolean internal_native_DragInt(String label, long v_addr, float v_speed, int v_min, int v_max);

    public static boolean DragInt(String label, IDLIntArray v, float v_speed, int v_min) {
        return internal_native_DragInt(label, v.native_void_address, v_speed, v_min);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragInt(label, (int*)v_addr, (float)v_speed, (int)v_min);
    */
    public static native boolean internal_native_DragInt(String label, long v_addr, float v_speed, int v_min);

    public static boolean DragInt(String label, IDLIntArray v, float v_speed) {
        return internal_native_DragInt(label, v.native_void_address, v_speed);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragInt(label, (int*)v_addr, (float)v_speed);
    */
    public static native boolean internal_native_DragInt(String label, long v_addr, float v_speed);

    public static boolean DragInt(String label, IDLIntArray v) {
        return internal_native_DragInt(label, v.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragInt(label, (int*)v_addr);
    */
    public static native boolean internal_native_DragInt(String label, long v_addr);

    public static boolean DragInt2(String label, IDLIntArray v, float v_speed, int v_min, int v_max, String format, ImGuiSliderFlags ImGuiSliderFlags) {
        return internal_native_DragInt2(label, v.native_void_address, v_speed, v_min, v_max, format, ImGuiSliderFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragInt2(label, (int*)v_addr, (float)v_speed, (int)v_min, (int)v_max, format, (::ImGuiSliderFlags)ImGuiSliderFlags);
    */
    public static native boolean internal_native_DragInt2(String label, long v_addr, float v_speed, int v_min, int v_max, String format, long ImGuiSliderFlags);

    public static boolean DragInt2(String label, IDLIntArray v, float v_speed, int v_min, int v_max, String format) {
        return internal_native_DragInt2(label, v.native_void_address, v_speed, v_min, v_max, format);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragInt2(label, (int*)v_addr, (float)v_speed, (int)v_min, (int)v_max, format);
    */
    public static native boolean internal_native_DragInt2(String label, long v_addr, float v_speed, int v_min, int v_max, String format);

    public static boolean DragInt2(String label, IDLIntArray v, float v_speed, int v_min, int v_max) {
        return internal_native_DragInt2(label, v.native_void_address, v_speed, v_min, v_max);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragInt2(label, (int*)v_addr, (float)v_speed, (int)v_min, (int)v_max);
    */
    public static native boolean internal_native_DragInt2(String label, long v_addr, float v_speed, int v_min, int v_max);

    public static boolean DragInt2(String label, IDLIntArray v, float v_speed, int v_min) {
        return internal_native_DragInt2(label, v.native_void_address, v_speed, v_min);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragInt2(label, (int*)v_addr, (float)v_speed, (int)v_min);
    */
    public static native boolean internal_native_DragInt2(String label, long v_addr, float v_speed, int v_min);

    public static boolean DragInt2(String label, IDLIntArray v, float v_speed) {
        return internal_native_DragInt2(label, v.native_void_address, v_speed);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragInt2(label, (int*)v_addr, (float)v_speed);
    */
    public static native boolean internal_native_DragInt2(String label, long v_addr, float v_speed);

    public static boolean DragInt2(String label, IDLIntArray v) {
        return internal_native_DragInt2(label, v.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragInt2(label, (int*)v_addr);
    */
    public static native boolean internal_native_DragInt2(String label, long v_addr);

    public static boolean DragInt3(String label, IDLIntArray v, float v_speed, int v_min, int v_max, String format, ImGuiSliderFlags ImGuiSliderFlags) {
        return internal_native_DragInt3(label, v.native_void_address, v_speed, v_min, v_max, format, ImGuiSliderFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragInt3(label, (int*)v_addr, (float)v_speed, (int)v_min, (int)v_max, format, (::ImGuiSliderFlags)ImGuiSliderFlags);
    */
    public static native boolean internal_native_DragInt3(String label, long v_addr, float v_speed, int v_min, int v_max, String format, long ImGuiSliderFlags);

    public static boolean DragInt3(String label, IDLIntArray v, float v_speed, int v_min, int v_max, String format) {
        return internal_native_DragInt3(label, v.native_void_address, v_speed, v_min, v_max, format);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragInt3(label, (int*)v_addr, (float)v_speed, (int)v_min, (int)v_max, format);
    */
    public static native boolean internal_native_DragInt3(String label, long v_addr, float v_speed, int v_min, int v_max, String format);

    public static boolean DragInt3(String label, IDLIntArray v, float v_speed, int v_min, int v_max) {
        return internal_native_DragInt3(label, v.native_void_address, v_speed, v_min, v_max);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragInt3(label, (int*)v_addr, (float)v_speed, (int)v_min, (int)v_max);
    */
    public static native boolean internal_native_DragInt3(String label, long v_addr, float v_speed, int v_min, int v_max);

    public static boolean DragInt3(String label, IDLIntArray v, float v_speed, int v_min) {
        return internal_native_DragInt3(label, v.native_void_address, v_speed, v_min);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragInt3(label, (int*)v_addr, (float)v_speed, (int)v_min);
    */
    public static native boolean internal_native_DragInt3(String label, long v_addr, float v_speed, int v_min);

    public static boolean DragInt3(String label, IDLIntArray v, float v_speed) {
        return internal_native_DragInt3(label, v.native_void_address, v_speed);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragInt3(label, (int*)v_addr, (float)v_speed);
    */
    public static native boolean internal_native_DragInt3(String label, long v_addr, float v_speed);

    public static boolean DragInt3(String label, IDLIntArray v) {
        return internal_native_DragInt3(label, v.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragInt3(label, (int*)v_addr);
    */
    public static native boolean internal_native_DragInt3(String label, long v_addr);

    public static boolean DragInt4(String label, IDLIntArray v, float v_speed, int v_min, int v_max, String format, ImGuiSliderFlags ImGuiSliderFlags) {
        return internal_native_DragInt4(label, v.native_void_address, v_speed, v_min, v_max, format, ImGuiSliderFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragInt4(label, (int*)v_addr, (float)v_speed, (int)v_min, (int)v_max, format, (::ImGuiSliderFlags)ImGuiSliderFlags);
    */
    public static native boolean internal_native_DragInt4(String label, long v_addr, float v_speed, int v_min, int v_max, String format, long ImGuiSliderFlags);

    public static boolean DragInt4(String label, IDLIntArray v, float v_speed, int v_min, int v_max, String format) {
        return internal_native_DragInt4(label, v.native_void_address, v_speed, v_min, v_max, format);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragInt4(label, (int*)v_addr, (float)v_speed, (int)v_min, (int)v_max, format);
    */
    public static native boolean internal_native_DragInt4(String label, long v_addr, float v_speed, int v_min, int v_max, String format);

    public static boolean DragInt4(String label, IDLIntArray v, float v_speed, int v_min, int v_max) {
        return internal_native_DragInt4(label, v.native_void_address, v_speed, v_min, v_max);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragInt4(label, (int*)v_addr, (float)v_speed, (int)v_min, (int)v_max);
    */
    public static native boolean internal_native_DragInt4(String label, long v_addr, float v_speed, int v_min, int v_max);

    public static boolean DragInt4(String label, IDLIntArray v, float v_speed, int v_min) {
        return internal_native_DragInt4(label, v.native_void_address, v_speed, v_min);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragInt4(label, (int*)v_addr, (float)v_speed, (int)v_min);
    */
    public static native boolean internal_native_DragInt4(String label, long v_addr, float v_speed, int v_min);

    public static boolean DragInt4(String label, IDLIntArray v, float v_speed) {
        return internal_native_DragInt4(label, v.native_void_address, v_speed);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragInt4(label, (int*)v_addr, (float)v_speed);
    */
    public static native boolean internal_native_DragInt4(String label, long v_addr, float v_speed);

    public static boolean DragInt4(String label, IDLIntArray v) {
        return internal_native_DragInt4(label, v.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragInt4(label, (int*)v_addr);
    */
    public static native boolean internal_native_DragInt4(String label, long v_addr);

    public static boolean DragIntRange2(String label, IDLIntArray v_current_min, IDLIntArray v_current_max, float v_speed, int v_min, int v_max, String format, String format_max, ImGuiSliderFlags ImGuiSliderFlags) {
        return internal_native_DragIntRange2(label, v_current_min.native_void_address, v_current_max.native_void_address, v_speed, v_min, v_max, format, format_max, ImGuiSliderFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragIntRange2(label, (int*)v_current_min_addr, (int*)v_current_max_addr, (float)v_speed, (int)v_min, (int)v_max, format, format_max, (::ImGuiSliderFlags)ImGuiSliderFlags);
    */
    public static native boolean internal_native_DragIntRange2(String label, long v_current_min_addr, long v_current_max_addr, float v_speed, int v_min, int v_max, String format, String format_max, long ImGuiSliderFlags);

    public static boolean DragIntRange2(String label, IDLIntArray v_current_min, IDLIntArray v_current_max, float v_speed, int v_min, int v_max, String format, String format_max) {
        return internal_native_DragIntRange2(label, v_current_min.native_void_address, v_current_max.native_void_address, v_speed, v_min, v_max, format, format_max);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragIntRange2(label, (int*)v_current_min_addr, (int*)v_current_max_addr, (float)v_speed, (int)v_min, (int)v_max, format, format_max);
    */
    public static native boolean internal_native_DragIntRange2(String label, long v_current_min_addr, long v_current_max_addr, float v_speed, int v_min, int v_max, String format, String format_max);

    public static boolean DragIntRange2(String label, IDLIntArray v_current_min, IDLIntArray v_current_max, float v_speed, int v_min, int v_max, String format) {
        return internal_native_DragIntRange2(label, v_current_min.native_void_address, v_current_max.native_void_address, v_speed, v_min, v_max, format);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragIntRange2(label, (int*)v_current_min_addr, (int*)v_current_max_addr, (float)v_speed, (int)v_min, (int)v_max, format);
    */
    public static native boolean internal_native_DragIntRange2(String label, long v_current_min_addr, long v_current_max_addr, float v_speed, int v_min, int v_max, String format);

    public static boolean DragIntRange2(String label, IDLIntArray v_current_min, IDLIntArray v_current_max, float v_speed, int v_min, int v_max) {
        return internal_native_DragIntRange2(label, v_current_min.native_void_address, v_current_max.native_void_address, v_speed, v_min, v_max);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragIntRange2(label, (int*)v_current_min_addr, (int*)v_current_max_addr, (float)v_speed, (int)v_min, (int)v_max);
    */
    public static native boolean internal_native_DragIntRange2(String label, long v_current_min_addr, long v_current_max_addr, float v_speed, int v_min, int v_max);

    public static boolean DragIntRange2(String label, IDLIntArray v_current_min, IDLIntArray v_current_max, float v_speed, int v_min) {
        return internal_native_DragIntRange2(label, v_current_min.native_void_address, v_current_max.native_void_address, v_speed, v_min);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragIntRange2(label, (int*)v_current_min_addr, (int*)v_current_max_addr, (float)v_speed, (int)v_min);
    */
    public static native boolean internal_native_DragIntRange2(String label, long v_current_min_addr, long v_current_max_addr, float v_speed, int v_min);

    public static boolean DragIntRange2(String label, IDLIntArray v_current_min, IDLIntArray v_current_max, float v_speed) {
        return internal_native_DragIntRange2(label, v_current_min.native_void_address, v_current_max.native_void_address, v_speed);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragIntRange2(label, (int*)v_current_min_addr, (int*)v_current_max_addr, (float)v_speed);
    */
    public static native boolean internal_native_DragIntRange2(String label, long v_current_min_addr, long v_current_max_addr, float v_speed);

    public static boolean DragIntRange2(String label, IDLIntArray v_current_min, IDLIntArray v_current_max) {
        return internal_native_DragIntRange2(label, v_current_min.native_void_address, v_current_max.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DragIntRange2(label, (int*)v_current_min_addr, (int*)v_current_max_addr);
    */
    public static native boolean internal_native_DragIntRange2(String label, long v_current_min_addr, long v_current_max_addr);

    public static boolean SliderFloat(String label, IDLFloatArray v, float v_min, float v_max, String format, ImGuiSliderFlags ImGuiSliderFlags) {
        return internal_native_SliderFloat(label, v.native_void_address, v_min, v_max, format, ImGuiSliderFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderFloat(label, (float*)v_addr, (float)v_min, (float)v_max, format, (::ImGuiSliderFlags)ImGuiSliderFlags);
    */
    public static native boolean internal_native_SliderFloat(String label, long v_addr, float v_min, float v_max, String format, long ImGuiSliderFlags);

    public static boolean SliderFloat(String label, IDLFloatArray v, float v_min, float v_max, String format) {
        return internal_native_SliderFloat(label, v.native_void_address, v_min, v_max, format);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderFloat(label, (float*)v_addr, (float)v_min, (float)v_max, format);
    */
    public static native boolean internal_native_SliderFloat(String label, long v_addr, float v_min, float v_max, String format);

    public static boolean SliderFloat(String label, IDLFloatArray v, float v_min, float v_max) {
        return internal_native_SliderFloat(label, v.native_void_address, v_min, v_max);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderFloat(label, (float*)v_addr, (float)v_min, (float)v_max);
    */
    public static native boolean internal_native_SliderFloat(String label, long v_addr, float v_min, float v_max);

    public static boolean SliderFloat2(String label, IDLFloatArray v, float v_min, float v_max, String format, ImGuiSliderFlags ImGuiSliderFlags) {
        return internal_native_SliderFloat2(label, v.native_void_address, v_min, v_max, format, ImGuiSliderFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderFloat2(label, (float*)v_addr, (float)v_min, (float)v_max, format, (::ImGuiSliderFlags)ImGuiSliderFlags);
    */
    public static native boolean internal_native_SliderFloat2(String label, long v_addr, float v_min, float v_max, String format, long ImGuiSliderFlags);

    public static boolean SliderFloat2(String label, IDLFloatArray v, float v_min, float v_max, String format) {
        return internal_native_SliderFloat2(label, v.native_void_address, v_min, v_max, format);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderFloat2(label, (float*)v_addr, (float)v_min, (float)v_max, format);
    */
    public static native boolean internal_native_SliderFloat2(String label, long v_addr, float v_min, float v_max, String format);

    public static boolean SliderFloat2(String label, IDLFloatArray v, float v_min, float v_max) {
        return internal_native_SliderFloat2(label, v.native_void_address, v_min, v_max);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderFloat2(label, (float*)v_addr, (float)v_min, (float)v_max);
    */
    public static native boolean internal_native_SliderFloat2(String label, long v_addr, float v_min, float v_max);

    public static boolean SliderFloat3(String label, IDLFloatArray v, float v_min, float v_max, String format, ImGuiSliderFlags ImGuiSliderFlags) {
        return internal_native_SliderFloat3(label, v.native_void_address, v_min, v_max, format, ImGuiSliderFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderFloat3(label, (float*)v_addr, (float)v_min, (float)v_max, format, (::ImGuiSliderFlags)ImGuiSliderFlags);
    */
    public static native boolean internal_native_SliderFloat3(String label, long v_addr, float v_min, float v_max, String format, long ImGuiSliderFlags);

    public static boolean SliderFloat3(String label, IDLFloatArray v, float v_min, float v_max, String format) {
        return internal_native_SliderFloat3(label, v.native_void_address, v_min, v_max, format);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderFloat3(label, (float*)v_addr, (float)v_min, (float)v_max, format);
    */
    public static native boolean internal_native_SliderFloat3(String label, long v_addr, float v_min, float v_max, String format);

    public static boolean SliderFloat3(String label, IDLFloatArray v, float v_min, float v_max) {
        return internal_native_SliderFloat3(label, v.native_void_address, v_min, v_max);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderFloat3(label, (float*)v_addr, (float)v_min, (float)v_max);
    */
    public static native boolean internal_native_SliderFloat3(String label, long v_addr, float v_min, float v_max);

    public static boolean SliderFloat4(String label, IDLFloatArray v, float v_min, float v_max, String format, ImGuiSliderFlags ImGuiSliderFlags) {
        return internal_native_SliderFloat4(label, v.native_void_address, v_min, v_max, format, ImGuiSliderFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderFloat4(label, (float*)v_addr, (float)v_min, (float)v_max, format, (::ImGuiSliderFlags)ImGuiSliderFlags);
    */
    public static native boolean internal_native_SliderFloat4(String label, long v_addr, float v_min, float v_max, String format, long ImGuiSliderFlags);

    public static boolean SliderFloat4(String label, IDLFloatArray v, float v_min, float v_max, String format) {
        return internal_native_SliderFloat4(label, v.native_void_address, v_min, v_max, format);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderFloat4(label, (float*)v_addr, (float)v_min, (float)v_max, format);
    */
    public static native boolean internal_native_SliderFloat4(String label, long v_addr, float v_min, float v_max, String format);

    public static boolean SliderFloat4(String label, IDLFloatArray v, float v_min, float v_max) {
        return internal_native_SliderFloat4(label, v.native_void_address, v_min, v_max);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderFloat4(label, (float*)v_addr, (float)v_min, (float)v_max);
    */
    public static native boolean internal_native_SliderFloat4(String label, long v_addr, float v_min, float v_max);

    public static boolean SliderAngle(String label, IDLFloatArray v_rad, float v_degrees_min, float v_degrees_max, String format, ImGuiSliderFlags ImGuiSliderFlags) {
        return internal_native_SliderAngle(label, v_rad.native_void_address, v_degrees_min, v_degrees_max, format, ImGuiSliderFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderAngle(label, (float*)v_rad_addr, (float)v_degrees_min, (float)v_degrees_max, format, (::ImGuiSliderFlags)ImGuiSliderFlags);
    */
    public static native boolean internal_native_SliderAngle(String label, long v_rad_addr, float v_degrees_min, float v_degrees_max, String format, long ImGuiSliderFlags);

    public static boolean SliderAngle(String label, IDLFloatArray v_rad, float v_degrees_min, float v_degrees_max, String format) {
        return internal_native_SliderAngle(label, v_rad.native_void_address, v_degrees_min, v_degrees_max, format);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderAngle(label, (float*)v_rad_addr, (float)v_degrees_min, (float)v_degrees_max, format);
    */
    public static native boolean internal_native_SliderAngle(String label, long v_rad_addr, float v_degrees_min, float v_degrees_max, String format);

    public static boolean SliderAngle(String label, IDLFloatArray v_rad, float v_degrees_min, float v_degrees_max) {
        return internal_native_SliderAngle(label, v_rad.native_void_address, v_degrees_min, v_degrees_max);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderAngle(label, (float*)v_rad_addr, (float)v_degrees_min, (float)v_degrees_max);
    */
    public static native boolean internal_native_SliderAngle(String label, long v_rad_addr, float v_degrees_min, float v_degrees_max);

    public static boolean SliderAngle(String label, IDLFloatArray v_rad, float v_degrees_min) {
        return internal_native_SliderAngle(label, v_rad.native_void_address, v_degrees_min);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderAngle(label, (float*)v_rad_addr, (float)v_degrees_min);
    */
    public static native boolean internal_native_SliderAngle(String label, long v_rad_addr, float v_degrees_min);

    public static boolean SliderAngle(String label, IDLFloatArray v_rad) {
        return internal_native_SliderAngle(label, v_rad.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderAngle(label, (float*)v_rad_addr);
    */
    public static native boolean internal_native_SliderAngle(String label, long v_rad_addr);

    public static boolean SliderInt(String label, IDLIntArray v, int v_min, int v_max, String format, ImGuiSliderFlags ImGuiSliderFlags) {
        return internal_native_SliderInt(label, v.native_void_address, v_min, v_max, format, ImGuiSliderFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderInt(label, (int*)v_addr, (int)v_min, (int)v_max, format, (::ImGuiSliderFlags)ImGuiSliderFlags);
    */
    public static native boolean internal_native_SliderInt(String label, long v_addr, int v_min, int v_max, String format, long ImGuiSliderFlags);

    public static boolean SliderInt(String label, IDLIntArray v, int v_min, int v_max, String format) {
        return internal_native_SliderInt(label, v.native_void_address, v_min, v_max, format);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderInt(label, (int*)v_addr, (int)v_min, (int)v_max, format);
    */
    public static native boolean internal_native_SliderInt(String label, long v_addr, int v_min, int v_max, String format);

    public static boolean SliderInt(String label, IDLIntArray v, int v_min, int v_max) {
        return internal_native_SliderInt(label, v.native_void_address, v_min, v_max);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderInt(label, (int*)v_addr, (int)v_min, (int)v_max);
    */
    public static native boolean internal_native_SliderInt(String label, long v_addr, int v_min, int v_max);

    public static boolean SliderInt2(String label, IDLIntArray v, int v_min, int v_max, String format, ImGuiSliderFlags ImGuiSliderFlags) {
        return internal_native_SliderInt2(label, v.native_void_address, v_min, v_max, format, ImGuiSliderFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderInt2(label, (int*)v_addr, (int)v_min, (int)v_max, format, (::ImGuiSliderFlags)ImGuiSliderFlags);
    */
    public static native boolean internal_native_SliderInt2(String label, long v_addr, int v_min, int v_max, String format, long ImGuiSliderFlags);

    public static boolean SliderInt2(String label, IDLIntArray v, int v_min, int v_max, String format) {
        return internal_native_SliderInt2(label, v.native_void_address, v_min, v_max, format);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderInt2(label, (int*)v_addr, (int)v_min, (int)v_max, format);
    */
    public static native boolean internal_native_SliderInt2(String label, long v_addr, int v_min, int v_max, String format);

    public static boolean SliderInt2(String label, IDLIntArray v, int v_min, int v_max) {
        return internal_native_SliderInt2(label, v.native_void_address, v_min, v_max);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderInt2(label, (int*)v_addr, (int)v_min, (int)v_max);
    */
    public static native boolean internal_native_SliderInt2(String label, long v_addr, int v_min, int v_max);

    public static boolean SliderInt3(String label, IDLIntArray v, int v_min, int v_max, String format, ImGuiSliderFlags ImGuiSliderFlags) {
        return internal_native_SliderInt3(label, v.native_void_address, v_min, v_max, format, ImGuiSliderFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderInt3(label, (int*)v_addr, (int)v_min, (int)v_max, format, (::ImGuiSliderFlags)ImGuiSliderFlags);
    */
    public static native boolean internal_native_SliderInt3(String label, long v_addr, int v_min, int v_max, String format, long ImGuiSliderFlags);

    public static boolean SliderInt3(String label, IDLIntArray v, int v_min, int v_max, String format) {
        return internal_native_SliderInt3(label, v.native_void_address, v_min, v_max, format);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderInt3(label, (int*)v_addr, (int)v_min, (int)v_max, format);
    */
    public static native boolean internal_native_SliderInt3(String label, long v_addr, int v_min, int v_max, String format);

    public static boolean SliderInt3(String label, IDLIntArray v, int v_min, int v_max) {
        return internal_native_SliderInt3(label, v.native_void_address, v_min, v_max);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderInt3(label, (int*)v_addr, (int)v_min, (int)v_max);
    */
    public static native boolean internal_native_SliderInt3(String label, long v_addr, int v_min, int v_max);

    public static boolean SliderInt4(String label, IDLIntArray v, int v_min, int v_max, String format, ImGuiSliderFlags ImGuiSliderFlags) {
        return internal_native_SliderInt4(label, v.native_void_address, v_min, v_max, format, ImGuiSliderFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderInt4(label, (int*)v_addr, (int)v_min, (int)v_max, format, (::ImGuiSliderFlags)ImGuiSliderFlags);
    */
    public static native boolean internal_native_SliderInt4(String label, long v_addr, int v_min, int v_max, String format, long ImGuiSliderFlags);

    public static boolean SliderInt4(String label, IDLIntArray v, int v_min, int v_max, String format) {
        return internal_native_SliderInt4(label, v.native_void_address, v_min, v_max, format);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderInt4(label, (int*)v_addr, (int)v_min, (int)v_max, format);
    */
    public static native boolean internal_native_SliderInt4(String label, long v_addr, int v_min, int v_max, String format);

    public static boolean SliderInt4(String label, IDLIntArray v, int v_min, int v_max) {
        return internal_native_SliderInt4(label, v.native_void_address, v_min, v_max);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SliderInt4(label, (int*)v_addr, (int)v_min, (int)v_max);
    */
    public static native boolean internal_native_SliderInt4(String label, long v_addr, int v_min, int v_max);

    public static boolean VSliderFloat(String label, ImVec2 size, IDLFloatArray v, float v_min, float v_max, String format, ImGuiSliderFlags ImGuiSliderFlags) {
        return internal_native_VSliderFloat(label, size.native_address, v.native_void_address, v_min, v_max, format, ImGuiSliderFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::VSliderFloat(label, *((ImVec2* )size_addr), (float*)v_addr, (float)v_min, (float)v_max, format, (::ImGuiSliderFlags)ImGuiSliderFlags);
    */
    public static native boolean internal_native_VSliderFloat(String label, long size_addr, long v_addr, float v_min, float v_max, String format, long ImGuiSliderFlags);

    public static boolean VSliderFloat(String label, ImVec2 size, IDLFloatArray v, float v_min, float v_max, String format) {
        return internal_native_VSliderFloat(label, size.native_address, v.native_void_address, v_min, v_max, format);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::VSliderFloat(label, *((ImVec2* )size_addr), (float*)v_addr, (float)v_min, (float)v_max, format);
    */
    public static native boolean internal_native_VSliderFloat(String label, long size_addr, long v_addr, float v_min, float v_max, String format);

    public static boolean VSliderFloat(String label, ImVec2 size, IDLFloatArray v, float v_min, float v_max) {
        return internal_native_VSliderFloat(label, size.native_address, v.native_void_address, v_min, v_max);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::VSliderFloat(label, *((ImVec2* )size_addr), (float*)v_addr, (float)v_min, (float)v_max);
    */
    public static native boolean internal_native_VSliderFloat(String label, long size_addr, long v_addr, float v_min, float v_max);

    public static boolean VSliderInt(String label, ImVec2 size, IDLIntArray v, int v_min, int v_max, String format, ImGuiSliderFlags ImGuiSliderFlags) {
        return internal_native_VSliderInt(label, size.native_address, v.native_void_address, v_min, v_max, format, ImGuiSliderFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::VSliderInt(label, *((ImVec2* )size_addr), (int*)v_addr, (int)v_min, (int)v_max, format, (::ImGuiSliderFlags)ImGuiSliderFlags);
    */
    public static native boolean internal_native_VSliderInt(String label, long size_addr, long v_addr, int v_min, int v_max, String format, long ImGuiSliderFlags);

    public static boolean VSliderInt(String label, ImVec2 size, IDLIntArray v, int v_min, int v_max, String format) {
        return internal_native_VSliderInt(label, size.native_address, v.native_void_address, v_min, v_max, format);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::VSliderInt(label, *((ImVec2* )size_addr), (int*)v_addr, (int)v_min, (int)v_max, format);
    */
    public static native boolean internal_native_VSliderInt(String label, long size_addr, long v_addr, int v_min, int v_max, String format);

    public static boolean VSliderInt(String label, ImVec2 size, IDLIntArray v, int v_min, int v_max) {
        return internal_native_VSliderInt(label, size.native_address, v.native_void_address, v_min, v_max);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::VSliderInt(label, *((ImVec2* )size_addr), (int*)v_addr, (int)v_min, (int)v_max);
    */
    public static native boolean internal_native_VSliderInt(String label, long size_addr, long v_addr, int v_min, int v_max);

    public static boolean InputText(String label, IDLByteArray buf, int buf_size, ImGuiInputTextFlags ImGuiInputTextFlags) {
        return internal_native_InputText(label, buf.native_void_address, buf_size, ImGuiInputTextFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputText(label, (char*)buf_addr, (int)buf_size, (::ImGuiInputTextFlags)ImGuiInputTextFlags);
    */
    public static native boolean internal_native_InputText(String label, long buf_addr, int buf_size, long ImGuiInputTextFlags);

    public static boolean InputText(String label, IDLByteArray buf, int buf_size) {
        return internal_native_InputText(label, buf.native_void_address, buf_size);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputText(label, (char*)buf_addr, (int)buf_size);
    */
    public static native boolean internal_native_InputText(String label, long buf_addr, int buf_size);

    public static boolean InputTextMultiline(String label, IDLByteArray buf, int buf_size, ImVec2 size, ImGuiInputTextFlags ImGuiInputTextFlags) {
        return internal_native_InputTextMultiline(label, buf.native_void_address, buf_size, size.native_address, ImGuiInputTextFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputTextMultiline(label, (char*)buf_addr, (int)buf_size, *((ImVec2* )size_addr), (::ImGuiInputTextFlags)ImGuiInputTextFlags);
    */
    public static native boolean internal_native_InputTextMultiline(String label, long buf_addr, int buf_size, long size_addr, long ImGuiInputTextFlags);

    public static boolean InputTextMultiline(String label, IDLByteArray buf, int buf_size, ImVec2 size) {
        return internal_native_InputTextMultiline(label, buf.native_void_address, buf_size, size.native_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputTextMultiline(label, (char*)buf_addr, (int)buf_size, *((ImVec2* )size_addr));
    */
    public static native boolean internal_native_InputTextMultiline(String label, long buf_addr, int buf_size, long size_addr);

    public static boolean InputTextMultiline(String label, IDLByteArray buf, int buf_size) {
        return internal_native_InputTextMultiline(label, buf.native_void_address, buf_size);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputTextMultiline(label, (char*)buf_addr, (int)buf_size);
    */
    public static native boolean internal_native_InputTextMultiline(String label, long buf_addr, int buf_size);

    public static boolean InputTextWithHint(String label, String hint, IDLByteArray buf, int buf_size, ImGuiInputTextFlags ImGuiInputTextFlags) {
        return internal_native_InputTextWithHint(label, hint, buf.native_void_address, buf_size, ImGuiInputTextFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputTextWithHint(label, hint, (char*)buf_addr, (int)buf_size, (::ImGuiInputTextFlags)ImGuiInputTextFlags);
    */
    public static native boolean internal_native_InputTextWithHint(String label, String hint, long buf_addr, int buf_size, long ImGuiInputTextFlags);

    public static boolean InputTextWithHint(String label, String hint, IDLByteArray buf, int buf_size) {
        return internal_native_InputTextWithHint(label, hint, buf.native_void_address, buf_size);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputTextWithHint(label, hint, (char*)buf_addr, (int)buf_size);
    */
    public static native boolean internal_native_InputTextWithHint(String label, String hint, long buf_addr, int buf_size);

    public static boolean InputFloat(String label, IDLFloatArray v, float step, float step_fast, String format, ImGuiInputTextFlags ImGuiInputTextFlags) {
        return internal_native_InputFloat(label, v.native_void_address, step, step_fast, format, ImGuiInputTextFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputFloat(label, (float*)v_addr, (float)step, (float)step_fast, format, (::ImGuiInputTextFlags)ImGuiInputTextFlags);
    */
    public static native boolean internal_native_InputFloat(String label, long v_addr, float step, float step_fast, String format, long ImGuiInputTextFlags);

    public static boolean InputFloat(String label, IDLFloatArray v, float step, float step_fast, String format) {
        return internal_native_InputFloat(label, v.native_void_address, step, step_fast, format);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputFloat(label, (float*)v_addr, (float)step, (float)step_fast, format);
    */
    public static native boolean internal_native_InputFloat(String label, long v_addr, float step, float step_fast, String format);

    public static boolean InputFloat(String label, IDLFloatArray v, float step, float step_fast) {
        return internal_native_InputFloat(label, v.native_void_address, step, step_fast);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputFloat(label, (float*)v_addr, (float)step, (float)step_fast);
    */
    public static native boolean internal_native_InputFloat(String label, long v_addr, float step, float step_fast);

    public static boolean InputFloat(String label, IDLFloatArray v, float step) {
        return internal_native_InputFloat(label, v.native_void_address, step);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputFloat(label, (float*)v_addr, (float)step);
    */
    public static native boolean internal_native_InputFloat(String label, long v_addr, float step);

    public static boolean InputFloat(String label, IDLFloatArray v) {
        return internal_native_InputFloat(label, v.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputFloat(label, (float*)v_addr);
    */
    public static native boolean internal_native_InputFloat(String label, long v_addr);

    public static boolean InputFloat2(String label, IDLFloatArray v, String format, ImGuiInputTextFlags ImGuiInputTextFlags) {
        return internal_native_InputFloat2(label, v.native_void_address, format, ImGuiInputTextFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputFloat2(label, (float*)v_addr, format, (::ImGuiInputTextFlags)ImGuiInputTextFlags);
    */
    public static native boolean internal_native_InputFloat2(String label, long v_addr, String format, long ImGuiInputTextFlags);

    public static boolean InputFloat2(String label, IDLFloatArray v, String format) {
        return internal_native_InputFloat2(label, v.native_void_address, format);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputFloat2(label, (float*)v_addr, format);
    */
    public static native boolean internal_native_InputFloat2(String label, long v_addr, String format);

    public static boolean InputFloat2(String label, IDLFloatArray v) {
        return internal_native_InputFloat2(label, v.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputFloat2(label, (float*)v_addr);
    */
    public static native boolean internal_native_InputFloat2(String label, long v_addr);

    public static boolean InputFloat3(String label, IDLFloatArray v, String format, ImGuiInputTextFlags ImGuiInputTextFlags) {
        return internal_native_InputFloat3(label, v.native_void_address, format, ImGuiInputTextFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputFloat3(label, (float*)v_addr, format, (::ImGuiInputTextFlags)ImGuiInputTextFlags);
    */
    public static native boolean internal_native_InputFloat3(String label, long v_addr, String format, long ImGuiInputTextFlags);

    public static boolean InputFloat3(String label, IDLFloatArray v, String format) {
        return internal_native_InputFloat3(label, v.native_void_address, format);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputFloat3(label, (float*)v_addr, format);
    */
    public static native boolean internal_native_InputFloat3(String label, long v_addr, String format);

    public static boolean InputFloat3(String label, IDLFloatArray v) {
        return internal_native_InputFloat3(label, v.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputFloat3(label, (float*)v_addr);
    */
    public static native boolean internal_native_InputFloat3(String label, long v_addr);

    public static boolean InputFloat4(String label, IDLFloatArray v, String format, ImGuiInputTextFlags ImGuiInputTextFlags) {
        return internal_native_InputFloat4(label, v.native_void_address, format, ImGuiInputTextFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputFloat4(label, (float*)v_addr, format, (::ImGuiInputTextFlags)ImGuiInputTextFlags);
    */
    public static native boolean internal_native_InputFloat4(String label, long v_addr, String format, long ImGuiInputTextFlags);

    public static boolean InputFloat4(String label, IDLFloatArray v, String format) {
        return internal_native_InputFloat4(label, v.native_void_address, format);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputFloat4(label, (float*)v_addr, format);
    */
    public static native boolean internal_native_InputFloat4(String label, long v_addr, String format);

    public static boolean InputFloat4(String label, IDLFloatArray v) {
        return internal_native_InputFloat4(label, v.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputFloat4(label, (float*)v_addr);
    */
    public static native boolean internal_native_InputFloat4(String label, long v_addr);

    public static boolean InputInt(String label, IDLIntArray v, int step, int step_fast, ImGuiInputTextFlags ImGuiInputTextFlags) {
        return internal_native_InputInt(label, v.native_void_address, step, step_fast, ImGuiInputTextFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputInt(label, (int*)v_addr, (int)step, (int)step_fast, (::ImGuiInputTextFlags)ImGuiInputTextFlags);
    */
    public static native boolean internal_native_InputInt(String label, long v_addr, int step, int step_fast, long ImGuiInputTextFlags);

    public static boolean InputInt(String label, IDLIntArray v, int step, int step_fast) {
        return internal_native_InputInt(label, v.native_void_address, step, step_fast);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputInt(label, (int*)v_addr, (int)step, (int)step_fast);
    */
    public static native boolean internal_native_InputInt(String label, long v_addr, int step, int step_fast);

    public static boolean InputInt(String label, IDLIntArray v, int step) {
        return internal_native_InputInt(label, v.native_void_address, step);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputInt(label, (int*)v_addr, (int)step);
    */
    public static native boolean internal_native_InputInt(String label, long v_addr, int step);

    public static boolean InputInt(String label, IDLIntArray v) {
        return internal_native_InputInt(label, v.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputInt(label, (int*)v_addr);
    */
    public static native boolean internal_native_InputInt(String label, long v_addr);

    public static boolean InputInt2(String label, IDLIntArray v, ImGuiInputTextFlags ImGuiInputTextFlags) {
        return internal_native_InputInt2(label, v.native_void_address, ImGuiInputTextFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputInt2(label, (int*)v_addr, (::ImGuiInputTextFlags)ImGuiInputTextFlags);
    */
    public static native boolean internal_native_InputInt2(String label, long v_addr, long ImGuiInputTextFlags);

    public static boolean InputInt2(String label, IDLIntArray v) {
        return internal_native_InputInt2(label, v.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputInt2(label, (int*)v_addr);
    */
    public static native boolean internal_native_InputInt2(String label, long v_addr);

    public static boolean InputInt3(String label, IDLIntArray v, ImGuiInputTextFlags ImGuiInputTextFlags) {
        return internal_native_InputInt3(label, v.native_void_address, ImGuiInputTextFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputInt3(label, (int*)v_addr, (::ImGuiInputTextFlags)ImGuiInputTextFlags);
    */
    public static native boolean internal_native_InputInt3(String label, long v_addr, long ImGuiInputTextFlags);

    public static boolean InputInt3(String label, IDLIntArray v) {
        return internal_native_InputInt3(label, v.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputInt3(label, (int*)v_addr);
    */
    public static native boolean internal_native_InputInt3(String label, long v_addr);

    public static boolean InputInt4(String label, IDLIntArray v, ImGuiInputTextFlags ImGuiInputTextFlags) {
        return internal_native_InputInt4(label, v.native_void_address, ImGuiInputTextFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputInt4(label, (int*)v_addr, (::ImGuiInputTextFlags)ImGuiInputTextFlags);
    */
    public static native boolean internal_native_InputInt4(String label, long v_addr, long ImGuiInputTextFlags);

    public static boolean InputInt4(String label, IDLIntArray v) {
        return internal_native_InputInt4(label, v.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputInt4(label, (int*)v_addr);
    */
    public static native boolean internal_native_InputInt4(String label, long v_addr);

    public static boolean InputDouble(String label, IDLDoubleArray v, double step, double step_fast, String format, ImGuiInputTextFlags ImGuiInputTextFlags) {
        return internal_native_InputDouble(label, v.native_void_address, step, step_fast, format, ImGuiInputTextFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputDouble(label, (double*)v_addr, (double)step, (double)step_fast, format, (::ImGuiInputTextFlags)ImGuiInputTextFlags);
    */
    public static native boolean internal_native_InputDouble(String label, long v_addr, double step, double step_fast, String format, long ImGuiInputTextFlags);

    public static boolean InputDouble(String label, IDLDoubleArray v, double step, double step_fast, String format) {
        return internal_native_InputDouble(label, v.native_void_address, step, step_fast, format);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputDouble(label, (double*)v_addr, (double)step, (double)step_fast, format);
    */
    public static native boolean internal_native_InputDouble(String label, long v_addr, double step, double step_fast, String format);

    public static boolean InputDouble(String label, IDLDoubleArray v, double step, double step_fast) {
        return internal_native_InputDouble(label, v.native_void_address, step, step_fast);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputDouble(label, (double*)v_addr, (double)step, (double)step_fast);
    */
    public static native boolean internal_native_InputDouble(String label, long v_addr, double step, double step_fast);

    public static boolean InputDouble(String label, IDLDoubleArray v, double step) {
        return internal_native_InputDouble(label, v.native_void_address, step);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputDouble(label, (double*)v_addr, (double)step);
    */
    public static native boolean internal_native_InputDouble(String label, long v_addr, double step);

    public static boolean InputDouble(String label, IDLDoubleArray v) {
        return internal_native_InputDouble(label, v.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::InputDouble(label, (double*)v_addr);
    */
    public static native boolean internal_native_InputDouble(String label, long v_addr);

    public static boolean ColorEdit3(String label, IDLFloatArray col, ImGuiColorEditFlags ImGuiColorEditFlags) {
        return internal_native_ColorEdit3(label, col.native_void_address, ImGuiColorEditFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::ColorEdit3(label, (float*)col_addr, (::ImGuiColorEditFlags)ImGuiColorEditFlags);
    */
    public static native boolean internal_native_ColorEdit3(String label, long col_addr, long ImGuiColorEditFlags);

    public static boolean ColorEdit3(String label, IDLFloatArray col) {
        return internal_native_ColorEdit3(label, col.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::ColorEdit3(label, (float*)col_addr);
    */
    public static native boolean internal_native_ColorEdit3(String label, long col_addr);

    public static boolean ColorEdit4(String label, IDLFloatArray col, ImGuiColorEditFlags ImGuiColorEditFlags) {
        return internal_native_ColorEdit4(label, col.native_void_address, ImGuiColorEditFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::ColorEdit4(label, (float*)col_addr, (::ImGuiColorEditFlags)ImGuiColorEditFlags);
    */
    public static native boolean internal_native_ColorEdit4(String label, long col_addr, long ImGuiColorEditFlags);

    public static boolean ColorEdit4(String label, IDLFloatArray col) {
        return internal_native_ColorEdit4(label, col.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::ColorEdit4(label, (float*)col_addr);
    */
    public static native boolean internal_native_ColorEdit4(String label, long col_addr);

    public static boolean ColorPicker3(String label, IDLFloatArray col, ImGuiColorEditFlags ImGuiColorEditFlags) {
        return internal_native_ColorPicker3(label, col.native_void_address, ImGuiColorEditFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::ColorPicker3(label, (float*)col_addr, (::ImGuiColorEditFlags)ImGuiColorEditFlags);
    */
    public static native boolean internal_native_ColorPicker3(String label, long col_addr, long ImGuiColorEditFlags);

    public static boolean ColorPicker3(String label, IDLFloatArray col) {
        return internal_native_ColorPicker3(label, col.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::ColorPicker3(label, (float*)col_addr);
    */
    public static native boolean internal_native_ColorPicker3(String label, long col_addr);

    public static boolean ColorPicker4(String label, IDLFloatArray col, ImGuiColorEditFlags ImGuiColorEditFlags, IDLFloatArray ref_col) {
        return internal_native_ColorPicker4(label, col.native_void_address, ImGuiColorEditFlags.getValue(), ref_col.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::ColorPicker4(label, (float*)col_addr, (::ImGuiColorEditFlags)ImGuiColorEditFlags, (float*)ref_col_addr);
    */
    public static native boolean internal_native_ColorPicker4(String label, long col_addr, long ImGuiColorEditFlags, long ref_col_addr);

    public static boolean ColorPicker4(String label, IDLFloatArray col, ImGuiColorEditFlags ImGuiColorEditFlags) {
        return internal_native_ColorPicker4(label, col.native_void_address, ImGuiColorEditFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::ColorPicker4(label, (float*)col_addr, (::ImGuiColorEditFlags)ImGuiColorEditFlags);
    */
    public static native boolean internal_native_ColorPicker4(String label, long col_addr, long ImGuiColorEditFlags);

    public static boolean ColorPicker4(String label, IDLFloatArray col) {
        return internal_native_ColorPicker4(label, col.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::ColorPicker4(label, (float*)col_addr);
    */
    public static native boolean internal_native_ColorPicker4(String label, long col_addr);

    public static boolean ColorButton(String desc_id, ImVec4 col, ImGuiColorEditFlags ImGuiColorEditFlags, ImVec2 size) {
        return internal_native_ColorButton(desc_id, col.native_address, ImGuiColorEditFlags.getValue(), size.native_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::ColorButton(desc_id, *((ImVec4* )col_addr), (::ImGuiColorEditFlags)ImGuiColorEditFlags, *((ImVec2* )size_addr));
    */
    public static native boolean internal_native_ColorButton(String desc_id, long col_addr, long ImGuiColorEditFlags, long size_addr);

    public static boolean ColorButton(String desc_id, ImVec4 col, ImGuiColorEditFlags ImGuiColorEditFlags) {
        return internal_native_ColorButton(desc_id, col.native_address, ImGuiColorEditFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::ColorButton(desc_id, *((ImVec4* )col_addr), (::ImGuiColorEditFlags)ImGuiColorEditFlags);
    */
    public static native boolean internal_native_ColorButton(String desc_id, long col_addr, long ImGuiColorEditFlags);

    public static boolean ColorButton(String desc_id, ImVec4 col) {
        return internal_native_ColorButton(desc_id, col.native_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::ColorButton(desc_id, *((ImVec4* )col_addr));
    */
    public static native boolean internal_native_ColorButton(String desc_id, long col_addr);

    public static void SetColorEditOptions(ImGuiColorEditFlags ImGuiColorEditFlags) {
        internal_native_SetColorEditOptions(ImGuiColorEditFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetColorEditOptions((::ImGuiColorEditFlags)ImGuiColorEditFlags);
    */
    public static native void internal_native_SetColorEditOptions(long ImGuiColorEditFlags);

    public static boolean TreeNode(String label) {
        return internal_native_TreeNode__0(label);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::TreeNode(label);
    */
    public static native boolean internal_native_TreeNode__0(String label);

    public static boolean TreeNode(String str_id, String fmt) {
        return internal_native_TreeNode__1(str_id, fmt);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::TreeNode(str_id, fmt);
    */
    public static native boolean internal_native_TreeNode__1(String str_id, String fmt);

    public static boolean TreeNode(IDLBase ptr_id, String fmt) {
        return internal_native_TreeNode__2(ptr_id.native_void_address, fmt);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::TreeNode((void** )ptr_id_addr, fmt);
    */
    public static native boolean internal_native_TreeNode__2(long ptr_id_addr, String fmt);

    public static boolean TreeNodeEx(String label, ImGuiTreeNodeFlags flaImGuiTreeNodeFlagsgs) {
        return internal_native_TreeNodeEx__0(label, flaImGuiTreeNodeFlagsgs.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::TreeNodeEx(label, (::ImGuiTreeNodeFlags)flaImGuiTreeNodeFlagsgs);
    */
    public static native boolean internal_native_TreeNodeEx__0(String label, long flaImGuiTreeNodeFlagsgs);

    public static boolean TreeNodeEx(String label) {
        return internal_native_TreeNodeEx__0(label);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::TreeNodeEx(label);
    */
    public static native boolean internal_native_TreeNodeEx__0(String label);

    public static boolean TreeNodeEx(String str_id, ImGuiTreeNodeFlags ImGuiTreeNodeFlags, String fmt) {
        return internal_native_TreeNodeEx__1(str_id, ImGuiTreeNodeFlags.getValue(), fmt);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::TreeNodeEx(str_id, (::ImGuiTreeNodeFlags)ImGuiTreeNodeFlags, fmt);
    */
    public static native boolean internal_native_TreeNodeEx__1(String str_id, long ImGuiTreeNodeFlags, String fmt);

    public static boolean TreeNodeEx(IDLBase ptr_id, ImGuiTreeNodeFlags ImGuiTreeNodeFlags, String fmt) {
        return internal_native_TreeNodeEx__2(ptr_id.native_void_address, ImGuiTreeNodeFlags.getValue(), fmt);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::TreeNodeEx((void** )ptr_id_addr, (::ImGuiTreeNodeFlags)ImGuiTreeNodeFlags, fmt);
    */
    public static native boolean internal_native_TreeNodeEx__2(long ptr_id_addr, long ImGuiTreeNodeFlags, String fmt);

    public static void TreePush(String str_id) {
        internal_native_TreePush(str_id);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::TreePush(str_id);
    */
    public static native void internal_native_TreePush(String str_id);

    public static void TreePop() {
        internal_native_TreePop();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::TreePop();
    */
    public static native void internal_native_TreePop();

    public static float GetTreeNodeToLabelSpacing() {
        return internal_native_GetTreeNodeToLabelSpacing();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetTreeNodeToLabelSpacing();
    */
    public static native float internal_native_GetTreeNodeToLabelSpacing();

    public static boolean CollapsingHeader(String label, ImGuiTreeNodeFlags ImGuiTreeNodeFlags) {
        return internal_native_CollapsingHeader__0(label, ImGuiTreeNodeFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::CollapsingHeader(label, (::ImGuiTreeNodeFlags)ImGuiTreeNodeFlags);
    */
    public static native boolean internal_native_CollapsingHeader__0(String label, long ImGuiTreeNodeFlags);

    public static boolean CollapsingHeader(String label) {
        return internal_native_CollapsingHeader__0(label);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::CollapsingHeader(label);
    */
    public static native boolean internal_native_CollapsingHeader__0(String label);

    public static boolean CollapsingHeader(String label, IDLBoolArray p_visible, ImGuiTreeNodeFlags ImGuiTreeNodeFlags) {
        return internal_native_CollapsingHeader__1(label, p_visible.native_void_address, ImGuiTreeNodeFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::CollapsingHeader(label, (bool*)p_visible_addr, (::ImGuiTreeNodeFlags)ImGuiTreeNodeFlags);
    */
    public static native boolean internal_native_CollapsingHeader__1(String label, long p_visible_addr, long ImGuiTreeNodeFlags);

    public static boolean CollapsingHeader(String label, IDLBoolArray p_visible) {
        return internal_native_CollapsingHeader__1(label, p_visible.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::CollapsingHeader(label, (bool*)p_visible_addr);
    */
    public static native boolean internal_native_CollapsingHeader__1(String label, long p_visible_addr);

    public static void SetNextItemOpen(boolean is_open, ImGuiCond ImGuiCond) {
        internal_native_SetNextItemOpen(is_open, ImGuiCond.getValue());
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetNextItemOpen(is_open, (::ImGuiCond)ImGuiCond);
    */
    public static native void internal_native_SetNextItemOpen(boolean is_open, long ImGuiCond);

    public static void SetNextItemOpen(boolean is_open) {
        internal_native_SetNextItemOpen(is_open);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetNextItemOpen(is_open);
    */
    public static native void internal_native_SetNextItemOpen(boolean is_open);

    public static void SetNextItemStorageID(int storage_id) {
        internal_native_SetNextItemStorageID(storage_id);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetNextItemStorageID((int)storage_id);
    */
    public static native void internal_native_SetNextItemStorageID(int storage_id);

    public static boolean Selectable(String label, boolean selected, ImGuiSelectableFlags flags, ImVec2 size) {
        return internal_native_Selectable__0(label, selected, flags.getValue(), size.native_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::Selectable(label, selected, (::ImGuiSelectableFlags)flags, *((ImVec2* )size_addr));
    */
    public static native boolean internal_native_Selectable__0(String label, boolean selected, long flags, long size_addr);

    public static boolean Selectable(String label, boolean selected, ImGuiSelectableFlags flags) {
        return internal_native_Selectable__0(label, selected, flags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::Selectable(label, selected, (::ImGuiSelectableFlags)flags);
    */
    public static native boolean internal_native_Selectable__0(String label, boolean selected, long flags);

    public static boolean Selectable(String label, boolean selected) {
        return internal_native_Selectable__0(label, selected);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::Selectable(label, selected);
    */
    public static native boolean internal_native_Selectable__0(String label, boolean selected);

    public static boolean Selectable(String label) {
        return internal_native_Selectable__0(label);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::Selectable(label);
    */
    public static native boolean internal_native_Selectable__0(String label);

    public static boolean Selectable(String label, IDLBoolArray p_selected, ImGuiSelectableFlags flags, ImVec2 size) {
        return internal_native_Selectable__1(label, p_selected.native_void_address, flags.getValue(), size.native_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::Selectable(label, (bool*)p_selected_addr, (::ImGuiSelectableFlags)flags, *((ImVec2* )size_addr));
    */
    public static native boolean internal_native_Selectable__1(String label, long p_selected_addr, long flags, long size_addr);

    public static boolean Selectable(String label, IDLBoolArray p_selected, ImGuiSelectableFlags flags) {
        return internal_native_Selectable__1(label, p_selected.native_void_address, flags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::Selectable(label, (bool*)p_selected_addr, (::ImGuiSelectableFlags)flags);
    */
    public static native boolean internal_native_Selectable__1(String label, long p_selected_addr, long flags);

    public static boolean Selectable(String label, IDLBoolArray p_selected) {
        return internal_native_Selectable__1(label, p_selected.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::Selectable(label, (bool*)p_selected_addr);
    */
    public static native boolean internal_native_Selectable__1(String label, long p_selected_addr);

    public static ImGuiMultiSelectIO BeginMultiSelect(ImGuiMultiSelectFlags flags, int selection_size, int items_count) {
        long pointer = internal_native_BeginMultiSelect(flags.getValue(), selection_size, items_count);
        if (pointer == 0)
            return ImGuiMultiSelectIO.NULL;
        if (ImGuiMultiSelectIO_TEMP_STATIC_GEN_0 == null)
            ImGuiMultiSelectIO_TEMP_STATIC_GEN_0 = ImGuiMultiSelectIO.native_new();
        ImGuiMultiSelectIO_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return ImGuiMultiSelectIO_TEMP_STATIC_GEN_0;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)ImGuiWrapper::ImGui::BeginMultiSelect((::ImGuiMultiSelectFlags)flags, (int)selection_size, (int)items_count);
    */
    public static native long internal_native_BeginMultiSelect(long flags, int selection_size, int items_count);

    public static ImGuiMultiSelectIO BeginMultiSelect(ImGuiMultiSelectFlags flags, int selection_size) {
        long pointer = internal_native_BeginMultiSelect(flags.getValue(), selection_size);
        if (pointer == 0)
            return ImGuiMultiSelectIO.NULL;
        if (ImGuiMultiSelectIO_TEMP_STATIC_GEN_1 == null)
            ImGuiMultiSelectIO_TEMP_STATIC_GEN_1 = ImGuiMultiSelectIO.native_new();
        ImGuiMultiSelectIO_TEMP_STATIC_GEN_1.internal_reset(pointer, false);
        return ImGuiMultiSelectIO_TEMP_STATIC_GEN_1;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)ImGuiWrapper::ImGui::BeginMultiSelect((::ImGuiMultiSelectFlags)flags, (int)selection_size);
    */
    public static native long internal_native_BeginMultiSelect(long flags, int selection_size);

    public static ImGuiMultiSelectIO BeginMultiSelect(ImGuiMultiSelectFlags flags) {
        long pointer = internal_native_BeginMultiSelect(flags.getValue());
        if (pointer == 0)
            return ImGuiMultiSelectIO.NULL;
        if (ImGuiMultiSelectIO_TEMP_STATIC_GEN_2 == null)
            ImGuiMultiSelectIO_TEMP_STATIC_GEN_2 = ImGuiMultiSelectIO.native_new();
        ImGuiMultiSelectIO_TEMP_STATIC_GEN_2.internal_reset(pointer, false);
        return ImGuiMultiSelectIO_TEMP_STATIC_GEN_2;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)ImGuiWrapper::ImGui::BeginMultiSelect((::ImGuiMultiSelectFlags)flags);
    */
    public static native long internal_native_BeginMultiSelect(long flags);

    public static ImGuiMultiSelectIO EndMultiSelect() {
        long pointer = internal_native_EndMultiSelect();
        if (pointer == 0)
            return ImGuiMultiSelectIO.NULL;
        if (ImGuiMultiSelectIO_TEMP_STATIC_GEN_3 == null)
            ImGuiMultiSelectIO_TEMP_STATIC_GEN_3 = ImGuiMultiSelectIO.native_new();
        ImGuiMultiSelectIO_TEMP_STATIC_GEN_3.internal_reset(pointer, false);
        return ImGuiMultiSelectIO_TEMP_STATIC_GEN_3;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)ImGuiWrapper::ImGui::EndMultiSelect();
    */
    public static native long internal_native_EndMultiSelect();

    public static void SetNextItemSelectionUserData(int selection_user_data) {
        internal_native_SetNextItemSelectionUserData(selection_user_data);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetNextItemSelectionUserData((int)selection_user_data);
    */
    public static native void internal_native_SetNextItemSelectionUserData(int selection_user_data);

    public static boolean IsItemToggledSelection() {
        return internal_native_IsItemToggledSelection();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsItemToggledSelection();
    */
    public static native boolean internal_native_IsItemToggledSelection();

    public static boolean BeginListBox(String label, ImVec2 size) {
        return internal_native_BeginListBox(label, size.native_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginListBox(label, *((ImVec2* )size_addr));
    */
    public static native boolean internal_native_BeginListBox(String label, long size_addr);

    public static boolean BeginListBox(String label) {
        return internal_native_BeginListBox(label);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginListBox(label);
    */
    public static native boolean internal_native_BeginListBox(String label);

    public static void EndListBox() {
        internal_native_EndListBox();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::EndListBox();
    */
    public static native void internal_native_EndListBox();

    public static void PlotLines(String label, IDLFloatArray values, int values_count, int values_offset, String overlay_text, float scale_min, float scale_max, ImVec2 graph_size, int stride) {
        internal_native_PlotLines(label, values.native_void_address, values_count, values_offset, overlay_text, scale_min, scale_max, graph_size.native_address, stride);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PlotLines(label, (float*)values_addr, (int)values_count, (int)values_offset, overlay_text, (float)scale_min, (float)scale_max, *((ImVec2* )graph_size_addr), (int)stride);
    */
    public static native void internal_native_PlotLines(String label, long values_addr, int values_count, int values_offset, String overlay_text, float scale_min, float scale_max, long graph_size_addr, int stride);

    public static void PlotLines(String label, IDLFloatArray values, int values_count, int values_offset, String overlay_text, float scale_min, float scale_max, ImVec2 graph_size) {
        internal_native_PlotLines(label, values.native_void_address, values_count, values_offset, overlay_text, scale_min, scale_max, graph_size.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PlotLines(label, (float*)values_addr, (int)values_count, (int)values_offset, overlay_text, (float)scale_min, (float)scale_max, *((ImVec2* )graph_size_addr));
    */
    public static native void internal_native_PlotLines(String label, long values_addr, int values_count, int values_offset, String overlay_text, float scale_min, float scale_max, long graph_size_addr);

    public static void PlotLines(String label, IDLFloatArray values, int values_count, int values_offset, String overlay_text, float scale_min, float scale_max) {
        internal_native_PlotLines(label, values.native_void_address, values_count, values_offset, overlay_text, scale_min, scale_max);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PlotLines(label, (float*)values_addr, (int)values_count, (int)values_offset, overlay_text, (float)scale_min, (float)scale_max);
    */
    public static native void internal_native_PlotLines(String label, long values_addr, int values_count, int values_offset, String overlay_text, float scale_min, float scale_max);

    public static void PlotLines(String label, IDLFloatArray values, int values_count, int values_offset, String overlay_text, float scale_min) {
        internal_native_PlotLines(label, values.native_void_address, values_count, values_offset, overlay_text, scale_min);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PlotLines(label, (float*)values_addr, (int)values_count, (int)values_offset, overlay_text, (float)scale_min);
    */
    public static native void internal_native_PlotLines(String label, long values_addr, int values_count, int values_offset, String overlay_text, float scale_min);

    public static void PlotLines(String label, IDLFloatArray values, int values_count, int values_offset, String overlay_text) {
        internal_native_PlotLines(label, values.native_void_address, values_count, values_offset, overlay_text);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PlotLines(label, (float*)values_addr, (int)values_count, (int)values_offset, overlay_text);
    */
    public static native void internal_native_PlotLines(String label, long values_addr, int values_count, int values_offset, String overlay_text);

    public static void PlotLines(String label, IDLFloatArray values, int values_count, int values_offset) {
        internal_native_PlotLines(label, values.native_void_address, values_count, values_offset);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PlotLines(label, (float*)values_addr, (int)values_count, (int)values_offset);
    */
    public static native void internal_native_PlotLines(String label, long values_addr, int values_count, int values_offset);

    public static void PlotLines(String label, IDLFloatArray values, int values_count) {
        internal_native_PlotLines(label, values.native_void_address, values_count);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PlotLines(label, (float*)values_addr, (int)values_count);
    */
    public static native void internal_native_PlotLines(String label, long values_addr, int values_count);

    public static void PlotHistogram(String label, IDLFloatArray values, int values_count, int values_offset, String overlay_text, float scale_min, float scale_max, ImVec2 graph_size, int stride) {
        internal_native_PlotHistogram(label, values.native_void_address, values_count, values_offset, overlay_text, scale_min, scale_max, graph_size.native_address, stride);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PlotHistogram(label, (float*)values_addr, (int)values_count, (int)values_offset, overlay_text, (float)scale_min, (float)scale_max, *((ImVec2* )graph_size_addr), (int)stride);
    */
    public static native void internal_native_PlotHistogram(String label, long values_addr, int values_count, int values_offset, String overlay_text, float scale_min, float scale_max, long graph_size_addr, int stride);

    public static void PlotHistogram(String label, IDLFloatArray values, int values_count, int values_offset, String overlay_text, float scale_min, float scale_max, ImVec2 graph_size) {
        internal_native_PlotHistogram(label, values.native_void_address, values_count, values_offset, overlay_text, scale_min, scale_max, graph_size.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PlotHistogram(label, (float*)values_addr, (int)values_count, (int)values_offset, overlay_text, (float)scale_min, (float)scale_max, *((ImVec2* )graph_size_addr));
    */
    public static native void internal_native_PlotHistogram(String label, long values_addr, int values_count, int values_offset, String overlay_text, float scale_min, float scale_max, long graph_size_addr);

    public static void PlotHistogram(String label, IDLFloatArray values, int values_count, int values_offset, String overlay_text, float scale_min, float scale_max) {
        internal_native_PlotHistogram(label, values.native_void_address, values_count, values_offset, overlay_text, scale_min, scale_max);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PlotHistogram(label, (float*)values_addr, (int)values_count, (int)values_offset, overlay_text, (float)scale_min, (float)scale_max);
    */
    public static native void internal_native_PlotHistogram(String label, long values_addr, int values_count, int values_offset, String overlay_text, float scale_min, float scale_max);

    public static void PlotHistogram(String label, IDLFloatArray values, int values_count, int values_offset, String overlay_text, float scale_min) {
        internal_native_PlotHistogram(label, values.native_void_address, values_count, values_offset, overlay_text, scale_min);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PlotHistogram(label, (float*)values_addr, (int)values_count, (int)values_offset, overlay_text, (float)scale_min);
    */
    public static native void internal_native_PlotHistogram(String label, long values_addr, int values_count, int values_offset, String overlay_text, float scale_min);

    public static void PlotHistogram(String label, IDLFloatArray values, int values_count, int values_offset, String overlay_text) {
        internal_native_PlotHistogram(label, values.native_void_address, values_count, values_offset, overlay_text);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PlotHistogram(label, (float*)values_addr, (int)values_count, (int)values_offset, overlay_text);
    */
    public static native void internal_native_PlotHistogram(String label, long values_addr, int values_count, int values_offset, String overlay_text);

    public static void PlotHistogram(String label, IDLFloatArray values, int values_count, int values_offset) {
        internal_native_PlotHistogram(label, values.native_void_address, values_count, values_offset);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PlotHistogram(label, (float*)values_addr, (int)values_count, (int)values_offset);
    */
    public static native void internal_native_PlotHistogram(String label, long values_addr, int values_count, int values_offset);

    public static void PlotHistogram(String label, IDLFloatArray values, int values_count) {
        internal_native_PlotHistogram(label, values.native_void_address, values_count);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PlotHistogram(label, (float*)values_addr, (int)values_count);
    */
    public static native void internal_native_PlotHistogram(String label, long values_addr, int values_count);

    public static void Value(String prefix, boolean b) {
        internal_native_Value__0(prefix, b);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::Value(prefix, b);
    */
    public static native void internal_native_Value__0(String prefix, boolean b);

    public static void Value(String prefix, int v) {
        internal_native_Value__1(prefix, v);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::Value(prefix, (int)v);
    */
    public static native void internal_native_Value__1(String prefix, int v);

    public static void Value(String prefix, float v, String float_format) {
        internal_native_Value__2(prefix, v, float_format);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::Value(prefix, (float)v, float_format);
    */
    public static native void internal_native_Value__2(String prefix, float v, String float_format);

    public static void Value(String prefix, float v) {
        internal_native_Value__2(prefix, v);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::Value(prefix, (float)v);
    */
    public static native void internal_native_Value__2(String prefix, float v);

    public static boolean BeginMenuBar() {
        return internal_native_BeginMenuBar();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginMenuBar();
    */
    public static native boolean internal_native_BeginMenuBar();

    public static void EndMenuBar() {
        internal_native_EndMenuBar();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::EndMenuBar();
    */
    public static native void internal_native_EndMenuBar();

    public static boolean BeginMainMenuBar() {
        return internal_native_BeginMainMenuBar();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginMainMenuBar();
    */
    public static native boolean internal_native_BeginMainMenuBar();

    public static void EndMainMenuBar() {
        internal_native_EndMainMenuBar();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::EndMainMenuBar();
    */
    public static native void internal_native_EndMainMenuBar();

    public static boolean BeginMenu(String label, boolean enabled) {
        return internal_native_BeginMenu(label, enabled);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginMenu(label, enabled);
    */
    public static native boolean internal_native_BeginMenu(String label, boolean enabled);

    public static boolean BeginMenu(String label) {
        return internal_native_BeginMenu(label);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginMenu(label);
    */
    public static native boolean internal_native_BeginMenu(String label);

    public static void EndMenu() {
        internal_native_EndMenu();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::EndMenu();
    */
    public static native void internal_native_EndMenu();

    public static boolean MenuItem(String label, String shortcut, boolean selected, boolean enabled) {
        return internal_native_MenuItem__0(label, shortcut, selected, enabled);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::MenuItem(label, shortcut, selected, enabled);
    */
    public static native boolean internal_native_MenuItem__0(String label, String shortcut, boolean selected, boolean enabled);

    public static boolean MenuItem(String label, String shortcut, boolean selected) {
        return internal_native_MenuItem__0(label, shortcut, selected);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::MenuItem(label, shortcut, selected);
    */
    public static native boolean internal_native_MenuItem__0(String label, String shortcut, boolean selected);

    public static boolean MenuItem(String label, String shortcut) {
        return internal_native_MenuItem__0(label, shortcut);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::MenuItem(label, shortcut);
    */
    public static native boolean internal_native_MenuItem__0(String label, String shortcut);

    public static boolean MenuItem(String label) {
        return internal_native_MenuItem__0(label);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::MenuItem(label);
    */
    public static native boolean internal_native_MenuItem__0(String label);

    public static boolean MenuItem(String label, String shortcut, IDLBoolArray p_selected, boolean enabled) {
        return internal_native_MenuItem__1(label, shortcut, p_selected.native_void_address, enabled);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::MenuItem(label, shortcut, (bool*)p_selected_addr, enabled);
    */
    public static native boolean internal_native_MenuItem__1(String label, String shortcut, long p_selected_addr, boolean enabled);

    public static boolean MenuItem(String label, String shortcut, IDLBoolArray p_selected) {
        return internal_native_MenuItem__1(label, shortcut, p_selected.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::MenuItem(label, shortcut, (bool*)p_selected_addr);
    */
    public static native boolean internal_native_MenuItem__1(String label, String shortcut, long p_selected_addr);

    public static boolean BeginTooltip() {
        return internal_native_BeginTooltip();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginTooltip();
    */
    public static native boolean internal_native_BeginTooltip();

    public static void EndTooltip() {
        internal_native_EndTooltip();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::EndTooltip();
    */
    public static native void internal_native_EndTooltip();

    public static void SetTooltip(String fmt) {
        internal_native_SetTooltip(fmt);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetTooltip(fmt);
    */
    public static native void internal_native_SetTooltip(String fmt);

    public static boolean BeginItemTooltip() {
        return internal_native_BeginItemTooltip();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginItemTooltip();
    */
    public static native boolean internal_native_BeginItemTooltip();

    public static void SetItemTooltip(String fmt) {
        internal_native_SetItemTooltip(fmt);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetItemTooltip(fmt);
    */
    public static native void internal_native_SetItemTooltip(String fmt);

    public static boolean BeginPopup(String str_id, ImGuiWindowFlags ImGuiWindowFlags) {
        return internal_native_BeginPopup(str_id, ImGuiWindowFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginPopup(str_id, (::ImGuiWindowFlags)ImGuiWindowFlags);
    */
    public static native boolean internal_native_BeginPopup(String str_id, long ImGuiWindowFlags);

    public static boolean BeginPopup(String str_id) {
        return internal_native_BeginPopup(str_id);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginPopup(str_id);
    */
    public static native boolean internal_native_BeginPopup(String str_id);

    public static boolean BeginPopupModal(String name, IDLBoolArray p_open, ImGuiWindowFlags ImGuiWindowFlags) {
        return internal_native_BeginPopupModal(name, p_open.native_void_address, ImGuiWindowFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginPopupModal(name, (bool*)p_open_addr, (::ImGuiWindowFlags)ImGuiWindowFlags);
    */
    public static native boolean internal_native_BeginPopupModal(String name, long p_open_addr, long ImGuiWindowFlags);

    public static boolean BeginPopupModal(String name, IDLBoolArray p_open) {
        return internal_native_BeginPopupModal(name, p_open.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginPopupModal(name, (bool*)p_open_addr);
    */
    public static native boolean internal_native_BeginPopupModal(String name, long p_open_addr);

    public static boolean BeginPopupModal(String name) {
        return internal_native_BeginPopupModal(name);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginPopupModal(name);
    */
    public static native boolean internal_native_BeginPopupModal(String name);

    public static void EndPopup() {
        internal_native_EndPopup();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::EndPopup();
    */
    public static native void internal_native_EndPopup();

    public static void OpenPopup(String str_id, ImGuiPopupFlags ImGuiPopupFlags) {
        internal_native_OpenPopup__0(str_id, ImGuiPopupFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::OpenPopup(str_id, (::ImGuiPopupFlags)ImGuiPopupFlags);
    */
    public static native void internal_native_OpenPopup__0(String str_id, long ImGuiPopupFlags);

    public static void OpenPopup(String str_id) {
        internal_native_OpenPopup__0(str_id);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::OpenPopup(str_id);
    */
    public static native void internal_native_OpenPopup__0(String str_id);

    public static void OpenPopup(int id, ImGuiPopupFlags ImGuiPopupFlags) {
        internal_native_OpenPopup__1(id, ImGuiPopupFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::OpenPopup((int)id, (::ImGuiPopupFlags)ImGuiPopupFlags);
    */
    public static native void internal_native_OpenPopup__1(int id, long ImGuiPopupFlags);

    public static void OpenPopup(int id) {
        internal_native_OpenPopup__1(id);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::OpenPopup((int)id);
    */
    public static native void internal_native_OpenPopup__1(int id);

    public static void OpenPopupOnItemClick(String str_id, ImGuiPopupFlags ImGuiPopupFlags) {
        internal_native_OpenPopupOnItemClick(str_id, ImGuiPopupFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::OpenPopupOnItemClick(str_id, (::ImGuiPopupFlags)ImGuiPopupFlags);
    */
    public static native void internal_native_OpenPopupOnItemClick(String str_id, long ImGuiPopupFlags);

    public static void OpenPopupOnItemClick(String str_id) {
        internal_native_OpenPopupOnItemClick(str_id);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::OpenPopupOnItemClick(str_id);
    */
    public static native void internal_native_OpenPopupOnItemClick(String str_id);

    public static void OpenPopupOnItemClick() {
        internal_native_OpenPopupOnItemClick();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::OpenPopupOnItemClick();
    */
    public static native void internal_native_OpenPopupOnItemClick();

    public static void CloseCurrentPopup() {
        internal_native_CloseCurrentPopup();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::CloseCurrentPopup();
    */
    public static native void internal_native_CloseCurrentPopup();

    public static boolean BeginPopupContextItem(String str_id, ImGuiPopupFlags ImGuiPopupFlags) {
        return internal_native_BeginPopupContextItem(str_id, ImGuiPopupFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginPopupContextItem(str_id, (::ImGuiPopupFlags)ImGuiPopupFlags);
    */
    public static native boolean internal_native_BeginPopupContextItem(String str_id, long ImGuiPopupFlags);

    public static boolean BeginPopupContextItem(String str_id) {
        return internal_native_BeginPopupContextItem(str_id);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginPopupContextItem(str_id);
    */
    public static native boolean internal_native_BeginPopupContextItem(String str_id);

    public static boolean BeginPopupContextItem() {
        return internal_native_BeginPopupContextItem();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginPopupContextItem();
    */
    public static native boolean internal_native_BeginPopupContextItem();

    public static boolean BeginPopupContextWindow(String str_id, ImGuiPopupFlags ImGuiPopupFlags) {
        return internal_native_BeginPopupContextWindow(str_id, ImGuiPopupFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginPopupContextWindow(str_id, (::ImGuiPopupFlags)ImGuiPopupFlags);
    */
    public static native boolean internal_native_BeginPopupContextWindow(String str_id, long ImGuiPopupFlags);

    public static boolean BeginPopupContextWindow(String str_id) {
        return internal_native_BeginPopupContextWindow(str_id);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginPopupContextWindow(str_id);
    */
    public static native boolean internal_native_BeginPopupContextWindow(String str_id);

    public static boolean BeginPopupContextWindow() {
        return internal_native_BeginPopupContextWindow();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginPopupContextWindow();
    */
    public static native boolean internal_native_BeginPopupContextWindow();

    public static boolean BeginPopupContextVoid(String str_id, ImGuiPopupFlags ImGuiPopupFlags) {
        return internal_native_BeginPopupContextVoid(str_id, ImGuiPopupFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginPopupContextVoid(str_id, (::ImGuiPopupFlags)ImGuiPopupFlags);
    */
    public static native boolean internal_native_BeginPopupContextVoid(String str_id, long ImGuiPopupFlags);

    public static boolean BeginPopupContextVoid(String str_id) {
        return internal_native_BeginPopupContextVoid(str_id);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginPopupContextVoid(str_id);
    */
    public static native boolean internal_native_BeginPopupContextVoid(String str_id);

    public static boolean BeginPopupContextVoid() {
        return internal_native_BeginPopupContextVoid();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginPopupContextVoid();
    */
    public static native boolean internal_native_BeginPopupContextVoid();

    public static boolean IsPopupOpen(String str_id, ImGuiPopupFlags ImGuiPopupFlags) {
        return internal_native_IsPopupOpen(str_id, ImGuiPopupFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsPopupOpen(str_id, (::ImGuiPopupFlags)ImGuiPopupFlags);
    */
    public static native boolean internal_native_IsPopupOpen(String str_id, long ImGuiPopupFlags);

    public static boolean IsPopupOpen(String str_id) {
        return internal_native_IsPopupOpen(str_id);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsPopupOpen(str_id);
    */
    public static native boolean internal_native_IsPopupOpen(String str_id);

    public static boolean BeginTable(String str_id, int column, ImGuiTableFlags ImGuiTableFlags, ImVec2 outer_size, float inner_width) {
        return internal_native_BeginTable(str_id, column, ImGuiTableFlags.getValue(), outer_size.native_address, inner_width);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginTable(str_id, (int)column, (::ImGuiTableFlags)ImGuiTableFlags, *((ImVec2* )outer_size_addr), (float)inner_width);
    */
    public static native boolean internal_native_BeginTable(String str_id, int column, long ImGuiTableFlags, long outer_size_addr, float inner_width);

    public static boolean BeginTable(String str_id, int column, ImGuiTableFlags ImGuiTableFlags, ImVec2 outer_size) {
        return internal_native_BeginTable(str_id, column, ImGuiTableFlags.getValue(), outer_size.native_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginTable(str_id, (int)column, (::ImGuiTableFlags)ImGuiTableFlags, *((ImVec2* )outer_size_addr));
    */
    public static native boolean internal_native_BeginTable(String str_id, int column, long ImGuiTableFlags, long outer_size_addr);

    public static boolean BeginTable(String str_id, int column, ImGuiTableFlags ImGuiTableFlags) {
        return internal_native_BeginTable(str_id, column, ImGuiTableFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginTable(str_id, (int)column, (::ImGuiTableFlags)ImGuiTableFlags);
    */
    public static native boolean internal_native_BeginTable(String str_id, int column, long ImGuiTableFlags);

    public static boolean BeginTable(String str_id, int column) {
        return internal_native_BeginTable(str_id, column);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginTable(str_id, (int)column);
    */
    public static native boolean internal_native_BeginTable(String str_id, int column);

    public static void EndTable() {
        internal_native_EndTable();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::EndTable();
    */
    public static native void internal_native_EndTable();

    public static void TableNextRow(int row_flags, float min_row_height) {
        internal_native_TableNextRow(row_flags, min_row_height);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::TableNextRow((int)row_flags, (float)min_row_height);
    */
    public static native void internal_native_TableNextRow(int row_flags, float min_row_height);

    public static void TableNextRow(int row_flags) {
        internal_native_TableNextRow(row_flags);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::TableNextRow((int)row_flags);
    */
    public static native void internal_native_TableNextRow(int row_flags);

    public static void TableNextRow() {
        internal_native_TableNextRow();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::TableNextRow();
    */
    public static native void internal_native_TableNextRow();

    public static boolean TableNextColumn() {
        return internal_native_TableNextColumn();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::TableNextColumn();
    */
    public static native boolean internal_native_TableNextColumn();

    public static boolean TableSetColumnIndex(int column_n) {
        return internal_native_TableSetColumnIndex(column_n);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::TableSetColumnIndex((int)column_n);
    */
    public static native boolean internal_native_TableSetColumnIndex(int column_n);

    public static void TableSetupColumn(String label, ImGuiTableColumnFlags ImGuiTableColumnFlags, float init_width_or_weight, int user_id) {
        internal_native_TableSetupColumn(label, ImGuiTableColumnFlags.getValue(), init_width_or_weight, user_id);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::TableSetupColumn(label, (::ImGuiTableColumnFlags)ImGuiTableColumnFlags, (float)init_width_or_weight, (int)user_id);
    */
    public static native void internal_native_TableSetupColumn(String label, long ImGuiTableColumnFlags, float init_width_or_weight, int user_id);

    public static void TableSetupColumn(String label, ImGuiTableColumnFlags ImGuiTableColumnFlags, float init_width_or_weight) {
        internal_native_TableSetupColumn(label, ImGuiTableColumnFlags.getValue(), init_width_or_weight);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::TableSetupColumn(label, (::ImGuiTableColumnFlags)ImGuiTableColumnFlags, (float)init_width_or_weight);
    */
    public static native void internal_native_TableSetupColumn(String label, long ImGuiTableColumnFlags, float init_width_or_weight);

    public static void TableSetupColumn(String label, ImGuiTableColumnFlags ImGuiTableColumnFlags) {
        internal_native_TableSetupColumn(label, ImGuiTableColumnFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::TableSetupColumn(label, (::ImGuiTableColumnFlags)ImGuiTableColumnFlags);
    */
    public static native void internal_native_TableSetupColumn(String label, long ImGuiTableColumnFlags);

    public static void TableSetupColumn(String label) {
        internal_native_TableSetupColumn(label);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::TableSetupColumn(label);
    */
    public static native void internal_native_TableSetupColumn(String label);

    public static void TableSetupScrollFreeze(int cols, int rows) {
        internal_native_TableSetupScrollFreeze(cols, rows);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::TableSetupScrollFreeze((int)cols, (int)rows);
    */
    public static native void internal_native_TableSetupScrollFreeze(int cols, int rows);

    public static void TableHeader(String label) {
        internal_native_TableHeader(label);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::TableHeader(label);
    */
    public static native void internal_native_TableHeader(String label);

    public static void TableHeadersRow() {
        internal_native_TableHeadersRow();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::TableHeadersRow();
    */
    public static native void internal_native_TableHeadersRow();

    public static void TableAngledHeadersRow() {
        internal_native_TableAngledHeadersRow();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::TableAngledHeadersRow();
    */
    public static native void internal_native_TableAngledHeadersRow();

    public static ImGuiTableSortSpecs TableGetSortSpecs() {
        long pointer = internal_native_TableGetSortSpecs();
        if (pointer == 0)
            return ImGuiTableSortSpecs.NULL;
        if (ImGuiTableSortSpecs_TEMP_STATIC_GEN_0 == null)
            ImGuiTableSortSpecs_TEMP_STATIC_GEN_0 = ImGuiTableSortSpecs.native_new();
        ImGuiTableSortSpecs_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return ImGuiTableSortSpecs_TEMP_STATIC_GEN_0;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)ImGuiWrapper::ImGui::TableGetSortSpecs();
    */
    public static native long internal_native_TableGetSortSpecs();

    public static int TableGetColumnCount() {
        return internal_native_TableGetColumnCount();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::TableGetColumnCount();
    */
    public static native int internal_native_TableGetColumnCount();

    public static int TableGetColumnIndex() {
        return internal_native_TableGetColumnIndex();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::TableGetColumnIndex();
    */
    public static native int internal_native_TableGetColumnIndex();

    public static int TableGetRowIndex() {
        return internal_native_TableGetRowIndex();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::TableGetRowIndex();
    */
    public static native int internal_native_TableGetRowIndex();

    public static int TableGetColumnFlags(int column_n) {
        return internal_native_TableGetColumnFlags(column_n);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::TableGetColumnFlags((int)column_n);
    */
    public static native int internal_native_TableGetColumnFlags(int column_n);

    public static int TableGetColumnFlags() {
        return internal_native_TableGetColumnFlags();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::TableGetColumnFlags();
    */
    public static native int internal_native_TableGetColumnFlags();

    public static void TableSetColumnEnabled(int column_n, boolean v) {
        internal_native_TableSetColumnEnabled(column_n, v);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::TableSetColumnEnabled((int)column_n, v);
    */
    public static native void internal_native_TableSetColumnEnabled(int column_n, boolean v);

    public static void TableSetBgColor(int target, int color, int column_n) {
        internal_native_TableSetBgColor(target, color, column_n);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::TableSetBgColor((int)target, color, (int)column_n);
    */
    public static native void internal_native_TableSetBgColor(int target, int color, int column_n);

    public static void TableSetBgColor(int target, int color) {
        internal_native_TableSetBgColor(target, color);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::TableSetBgColor((int)target, color);
    */
    public static native void internal_native_TableSetBgColor(int target, int color);

    public static boolean BeginTabBar(String str_id, ImGuiTabBarFlags ImGuiTabBarFlags) {
        return internal_native_BeginTabBar(str_id, ImGuiTabBarFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginTabBar(str_id, (::ImGuiTabBarFlags)ImGuiTabBarFlags);
    */
    public static native boolean internal_native_BeginTabBar(String str_id, long ImGuiTabBarFlags);

    public static boolean BeginTabBar(String str_id) {
        return internal_native_BeginTabBar(str_id);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginTabBar(str_id);
    */
    public static native boolean internal_native_BeginTabBar(String str_id);

    public static void EndTabBar() {
        internal_native_EndTabBar();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::EndTabBar();
    */
    public static native void internal_native_EndTabBar();

    public static boolean BeginTabItem(String label, IDLBoolArray p_open, ImGuiTabItemFlags ImGuiTabItemFlags) {
        return internal_native_BeginTabItem(label, p_open.native_void_address, ImGuiTabItemFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginTabItem(label, (bool*)p_open_addr, (::ImGuiTabItemFlags)ImGuiTabItemFlags);
    */
    public static native boolean internal_native_BeginTabItem(String label, long p_open_addr, long ImGuiTabItemFlags);

    public static boolean BeginTabItem(String label, IDLBoolArray p_open) {
        return internal_native_BeginTabItem(label, p_open.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginTabItem(label, (bool*)p_open_addr);
    */
    public static native boolean internal_native_BeginTabItem(String label, long p_open_addr);

    public static boolean BeginTabItem(String label) {
        return internal_native_BeginTabItem(label);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginTabItem(label);
    */
    public static native boolean internal_native_BeginTabItem(String label);

    public static void EndTabItem() {
        internal_native_EndTabItem();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::EndTabItem();
    */
    public static native void internal_native_EndTabItem();

    public static boolean TabItemButton(String label, ImGuiTabItemFlags ImGuiTabItemFlags) {
        return internal_native_TabItemButton(label, ImGuiTabItemFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::TabItemButton(label, (::ImGuiTabItemFlags)ImGuiTabItemFlags);
    */
    public static native boolean internal_native_TabItemButton(String label, long ImGuiTabItemFlags);

    public static void SetTabItemClosed(String tab_or_docked_window_label) {
        internal_native_SetTabItemClosed(tab_or_docked_window_label);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetTabItemClosed(tab_or_docked_window_label);
    */
    public static native void internal_native_SetTabItemClosed(String tab_or_docked_window_label);

    public static int DockSpace(int id, ImVec2 size, ImGuiDockNodeFlags ImGuiDockNodeFlags, ImGuiWindowClass window_class) {
        return internal_native_DockSpace(id, size.native_address, ImGuiDockNodeFlags.getValue(), window_class.native_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DockSpace((int)id, *((ImVec2* )size_addr), (::ImGuiDockNodeFlags)ImGuiDockNodeFlags, (ImGuiWindowClass* )window_class_addr);
    */
    public static native int internal_native_DockSpace(int id, long size_addr, long ImGuiDockNodeFlags, long window_class_addr);

    public static int DockSpace(int id, ImVec2 size, ImGuiDockNodeFlags ImGuiDockNodeFlags) {
        return internal_native_DockSpace(id, size.native_address, ImGuiDockNodeFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DockSpace((int)id, *((ImVec2* )size_addr), (::ImGuiDockNodeFlags)ImGuiDockNodeFlags);
    */
    public static native int internal_native_DockSpace(int id, long size_addr, long ImGuiDockNodeFlags);

    public static int DockSpace(int id, ImVec2 size) {
        return internal_native_DockSpace(id, size.native_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DockSpace((int)id, *((ImVec2* )size_addr));
    */
    public static native int internal_native_DockSpace(int id, long size_addr);

    public static int DockSpace(int id) {
        return internal_native_DockSpace(id);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DockSpace((int)id);
    */
    public static native int internal_native_DockSpace(int id);

    public static int DockSpaceOverViewport(int dockspace_id, ImGuiViewport viewport, ImGuiDockNodeFlags ImGuiDockNodeFlags, ImGuiWindowClass window_class) {
        return internal_native_DockSpaceOverViewport(dockspace_id, viewport.native_address, ImGuiDockNodeFlags.getValue(), window_class.native_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DockSpaceOverViewport((int)dockspace_id, (ImGuiViewport* )viewport_addr, (::ImGuiDockNodeFlags)ImGuiDockNodeFlags, (ImGuiWindowClass* )window_class_addr);
    */
    public static native int internal_native_DockSpaceOverViewport(int dockspace_id, long viewport_addr, long ImGuiDockNodeFlags, long window_class_addr);

    public static int DockSpaceOverViewport(int dockspace_id, ImGuiViewport viewport, ImGuiDockNodeFlags ImGuiDockNodeFlags) {
        return internal_native_DockSpaceOverViewport(dockspace_id, viewport.native_address, ImGuiDockNodeFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DockSpaceOverViewport((int)dockspace_id, (ImGuiViewport* )viewport_addr, (::ImGuiDockNodeFlags)ImGuiDockNodeFlags);
    */
    public static native int internal_native_DockSpaceOverViewport(int dockspace_id, long viewport_addr, long ImGuiDockNodeFlags);

    public static int DockSpaceOverViewport(int dockspace_id, ImGuiViewport viewport) {
        return internal_native_DockSpaceOverViewport(dockspace_id, viewport.native_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DockSpaceOverViewport((int)dockspace_id, (ImGuiViewport* )viewport_addr);
    */
    public static native int internal_native_DockSpaceOverViewport(int dockspace_id, long viewport_addr);

    public static int DockSpaceOverViewport(int dockspace_id) {
        return internal_native_DockSpaceOverViewport(dockspace_id);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DockSpaceOverViewport((int)dockspace_id);
    */
    public static native int internal_native_DockSpaceOverViewport(int dockspace_id);

    public static int DockSpaceOverViewport() {
        return internal_native_DockSpaceOverViewport();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DockSpaceOverViewport();
    */
    public static native int internal_native_DockSpaceOverViewport();

    public static void SetNextWindowDockID(int dock_id, ImGuiCond ImGuiCond) {
        internal_native_SetNextWindowDockID(dock_id, ImGuiCond.getValue());
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetNextWindowDockID((int)dock_id, (::ImGuiCond)ImGuiCond);
    */
    public static native void internal_native_SetNextWindowDockID(int dock_id, long ImGuiCond);

    public static void SetNextWindowDockID(int dock_id) {
        internal_native_SetNextWindowDockID(dock_id);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetNextWindowDockID((int)dock_id);
    */
    public static native void internal_native_SetNextWindowDockID(int dock_id);

    public static void SetNextWindowClass(ImGuiWindowClass window_class) {
        internal_native_SetNextWindowClass(window_class.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetNextWindowClass((ImGuiWindowClass* )window_class_addr);
    */
    public static native void internal_native_SetNextWindowClass(long window_class_addr);

    public static int GetWindowDockID() {
        return internal_native_GetWindowDockID();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetWindowDockID();
    */
    public static native int internal_native_GetWindowDockID();

    public static boolean IsWindowDocked() {
        return internal_native_IsWindowDocked();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsWindowDocked();
    */
    public static native boolean internal_native_IsWindowDocked();

    public static boolean BeginDragDropSource(ImGuiDragDropFlags ImGuiDragDropFlags) {
        return internal_native_BeginDragDropSource(ImGuiDragDropFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginDragDropSource((::ImGuiDragDropFlags)ImGuiDragDropFlags);
    */
    public static native boolean internal_native_BeginDragDropSource(long ImGuiDragDropFlags);

    public static boolean BeginDragDropSource() {
        return internal_native_BeginDragDropSource();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginDragDropSource();
    */
    public static native boolean internal_native_BeginDragDropSource();

    public static boolean SetDragDropPayload(String type, int data, ImGuiCond ImGuiCond) {
        return internal_native_SetDragDropPayload(type, data, ImGuiCond.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SetDragDropPayload(type, (int)data, (::ImGuiCond)ImGuiCond);
    */
    public static native boolean internal_native_SetDragDropPayload(String type, int data, long ImGuiCond);

    public static boolean SetDragDropPayload(String type, int data) {
        return internal_native_SetDragDropPayload(type, data);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::SetDragDropPayload(type, (int)data);
    */
    public static native boolean internal_native_SetDragDropPayload(String type, int data);

    public static void EndDragDropSource() {
        internal_native_EndDragDropSource();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::EndDragDropSource();
    */
    public static native void internal_native_EndDragDropSource();

    public static boolean BeginDragDropTarget() {
        return internal_native_BeginDragDropTarget();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::BeginDragDropTarget();
    */
    public static native boolean internal_native_BeginDragDropTarget();

    public static ImGuiPayload AcceptDragDropPayload(String type, ImGuiDragDropFlags ImGuiDragDropFlags) {
        long pointer = internal_native_AcceptDragDropPayload(type, ImGuiDragDropFlags.getValue());
        if (pointer == 0)
            return ImGuiPayload.NULL;
        if (ImGuiPayload_TEMP_STATIC_GEN_0 == null)
            ImGuiPayload_TEMP_STATIC_GEN_0 = ImGuiPayload.native_new();
        ImGuiPayload_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return ImGuiPayload_TEMP_STATIC_GEN_0;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)ImGuiWrapper::ImGui::AcceptDragDropPayload(type, (::ImGuiDragDropFlags)ImGuiDragDropFlags);
    */
    public static native long internal_native_AcceptDragDropPayload(String type, long ImGuiDragDropFlags);

    public static ImGuiPayload AcceptDragDropPayload(String type) {
        long pointer = internal_native_AcceptDragDropPayload(type);
        if (pointer == 0)
            return ImGuiPayload.NULL;
        if (ImGuiPayload_TEMP_STATIC_GEN_1 == null)
            ImGuiPayload_TEMP_STATIC_GEN_1 = ImGuiPayload.native_new();
        ImGuiPayload_TEMP_STATIC_GEN_1.internal_reset(pointer, false);
        return ImGuiPayload_TEMP_STATIC_GEN_1;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)ImGuiWrapper::ImGui::AcceptDragDropPayload(type);
    */
    public static native long internal_native_AcceptDragDropPayload(String type);

    public static void EndDragDropTarget() {
        internal_native_EndDragDropTarget();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::EndDragDropTarget();
    */
    public static native void internal_native_EndDragDropTarget();

    public static ImGuiPayload GetDragDropPayload() {
        long pointer = internal_native_GetDragDropPayload();
        if (pointer == 0)
            return ImGuiPayload.NULL;
        if (ImGuiPayload_TEMP_STATIC_GEN_2 == null)
            ImGuiPayload_TEMP_STATIC_GEN_2 = ImGuiPayload.native_new();
        ImGuiPayload_TEMP_STATIC_GEN_2.internal_reset(pointer, false);
        return ImGuiPayload_TEMP_STATIC_GEN_2;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)ImGuiWrapper::ImGui::GetDragDropPayload();
    */
    public static native long internal_native_GetDragDropPayload();

    public static void BeginDisabled(boolean disabled) {
        internal_native_BeginDisabled(disabled);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::BeginDisabled(disabled);
    */
    public static native void internal_native_BeginDisabled(boolean disabled);

    public static void BeginDisabled() {
        internal_native_BeginDisabled();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::BeginDisabled();
    */
    public static native void internal_native_BeginDisabled();

    public static void EndDisabled() {
        internal_native_EndDisabled();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::EndDisabled();
    */
    public static native void internal_native_EndDisabled();

    public static void PushClipRect(ImVec2 clip_rect_min, ImVec2 clip_rect_max, boolean intersect_with_current_clip_rect) {
        internal_native_PushClipRect(clip_rect_min.native_address, clip_rect_max.native_address, intersect_with_current_clip_rect);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PushClipRect(*((ImVec2* )clip_rect_min_addr), *((ImVec2* )clip_rect_max_addr), intersect_with_current_clip_rect);
    */
    public static native void internal_native_PushClipRect(long clip_rect_min_addr, long clip_rect_max_addr, boolean intersect_with_current_clip_rect);

    public static void PopClipRect() {
        internal_native_PopClipRect();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::PopClipRect();
    */
    public static native void internal_native_PopClipRect();

    public static void SetItemDefaultFocus() {
        internal_native_SetItemDefaultFocus();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetItemDefaultFocus();
    */
    public static native void internal_native_SetItemDefaultFocus();

    public static void SetKeyboardFocusHere(int offset) {
        internal_native_SetKeyboardFocusHere(offset);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetKeyboardFocusHere((int)offset);
    */
    public static native void internal_native_SetKeyboardFocusHere(int offset);

    public static void SetKeyboardFocusHere() {
        internal_native_SetKeyboardFocusHere();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetKeyboardFocusHere();
    */
    public static native void internal_native_SetKeyboardFocusHere();

    public static void SetNextItemAllowOverlap() {
        internal_native_SetNextItemAllowOverlap();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetNextItemAllowOverlap();
    */
    public static native void internal_native_SetNextItemAllowOverlap();

    public static boolean IsItemHovered(ImGuiHoveredFlags ImGuiHoveredFlags) {
        return internal_native_IsItemHovered(ImGuiHoveredFlags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsItemHovered((::ImGuiHoveredFlags)ImGuiHoveredFlags);
    */
    public static native boolean internal_native_IsItemHovered(long ImGuiHoveredFlags);

    public static boolean IsItemHovered() {
        return internal_native_IsItemHovered();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsItemHovered();
    */
    public static native boolean internal_native_IsItemHovered();

    public static boolean IsItemActive() {
        return internal_native_IsItemActive();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsItemActive();
    */
    public static native boolean internal_native_IsItemActive();

    public static boolean IsItemFocused() {
        return internal_native_IsItemFocused();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsItemFocused();
    */
    public static native boolean internal_native_IsItemFocused();

    public static boolean IsItemClicked(ImGuiMouseButton ImGuiMouseButton) {
        return internal_native_IsItemClicked(ImGuiMouseButton.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsItemClicked((::ImGuiMouseButton)ImGuiMouseButton);
    */
    public static native boolean internal_native_IsItemClicked(long ImGuiMouseButton);

    public static boolean IsItemClicked() {
        return internal_native_IsItemClicked();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsItemClicked();
    */
    public static native boolean internal_native_IsItemClicked();

    public static boolean IsItemVisible() {
        return internal_native_IsItemVisible();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsItemVisible();
    */
    public static native boolean internal_native_IsItemVisible();

    public static boolean IsItemEdited() {
        return internal_native_IsItemEdited();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsItemEdited();
    */
    public static native boolean internal_native_IsItemEdited();

    public static boolean IsItemActivated() {
        return internal_native_IsItemActivated();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsItemActivated();
    */
    public static native boolean internal_native_IsItemActivated();

    public static boolean IsItemDeactivated() {
        return internal_native_IsItemDeactivated();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsItemDeactivated();
    */
    public static native boolean internal_native_IsItemDeactivated();

    public static boolean IsItemDeactivatedAfterEdit() {
        return internal_native_IsItemDeactivatedAfterEdit();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsItemDeactivatedAfterEdit();
    */
    public static native boolean internal_native_IsItemDeactivatedAfterEdit();

    public static boolean IsItemToggledOpen() {
        return internal_native_IsItemToggledOpen();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsItemToggledOpen();
    */
    public static native boolean internal_native_IsItemToggledOpen();

    public static boolean IsAnyItemHovered() {
        return internal_native_IsAnyItemHovered();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsAnyItemHovered();
    */
    public static native boolean internal_native_IsAnyItemHovered();

    public static boolean IsAnyItemActive() {
        return internal_native_IsAnyItemActive();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsAnyItemActive();
    */
    public static native boolean internal_native_IsAnyItemActive();

    public static boolean IsAnyItemFocused() {
        return internal_native_IsAnyItemFocused();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsAnyItemFocused();
    */
    public static native boolean internal_native_IsAnyItemFocused();

    public static int GetItemID() {
        return internal_native_GetItemID();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetItemID();
    */
    public static native int internal_native_GetItemID();

    public static ImVec2 GetItemRectMin() {
        long pointer = internal_native_GetItemRectMin();
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_7 == null)
            ImVec2_TEMP_STATIC_GEN_7 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_7.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_7;
    }

    /*
      [-JNI;-NATIVE]
      static ImVec2 copy_addr;
      copy_addr = ImGuiWrapper::ImGui::GetItemRectMin();
      return (jlong)&copy_addr;
    */
    public static native long internal_native_GetItemRectMin();

    public static ImVec2 GetItemRectMax() {
        long pointer = internal_native_GetItemRectMax();
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_8 == null)
            ImVec2_TEMP_STATIC_GEN_8 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_8.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_8;
    }

    /*
      [-JNI;-NATIVE]
      static ImVec2 copy_addr;
      copy_addr = ImGuiWrapper::ImGui::GetItemRectMax();
      return (jlong)&copy_addr;
    */
    public static native long internal_native_GetItemRectMax();

    public static ImVec2 GetItemRectSize() {
        long pointer = internal_native_GetItemRectSize();
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_9 == null)
            ImVec2_TEMP_STATIC_GEN_9 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_9.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_9;
    }

    /*
      [-JNI;-NATIVE]
      static ImVec2 copy_addr;
      copy_addr = ImGuiWrapper::ImGui::GetItemRectSize();
      return (jlong)&copy_addr;
    */
    public static native long internal_native_GetItemRectSize();

    public static ImGuiViewport GetMainViewport() {
        long pointer = internal_native_GetMainViewport();
        if (pointer == 0)
            return ImGuiViewport.NULL;
        if (ImGuiViewport_TEMP_STATIC_GEN_1 == null)
            ImGuiViewport_TEMP_STATIC_GEN_1 = ImGuiViewport.native_new();
        ImGuiViewport_TEMP_STATIC_GEN_1.internal_reset(pointer, false);
        return ImGuiViewport_TEMP_STATIC_GEN_1;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)ImGuiWrapper::ImGui::GetMainViewport();
    */
    public static native long internal_native_GetMainViewport();

    public static ImDrawList GetBackgroundDrawList() {
        long pointer = internal_native_GetBackgroundDrawList__0();
        if (pointer == 0)
            return ImDrawList.NULL;
        if (ImDrawList_TEMP_STATIC_GEN_1 == null)
            ImDrawList_TEMP_STATIC_GEN_1 = ImDrawList.native_new();
        ImDrawList_TEMP_STATIC_GEN_1.internal_reset(pointer, false);
        return ImDrawList_TEMP_STATIC_GEN_1;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)ImGuiWrapper::ImGui::GetBackgroundDrawList();
    */
    public static native long internal_native_GetBackgroundDrawList__0();

    public static ImDrawList GetBackgroundDrawList(ImGuiViewport viewport) {
        long pointer = internal_native_GetBackgroundDrawList__1(viewport.native_address);
        if (pointer == 0)
            return ImDrawList.NULL;
        if (ImDrawList_TEMP_STATIC_GEN_2 == null)
            ImDrawList_TEMP_STATIC_GEN_2 = ImDrawList.native_new();
        ImDrawList_TEMP_STATIC_GEN_2.internal_reset(pointer, false);
        return ImDrawList_TEMP_STATIC_GEN_2;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)ImGuiWrapper::ImGui::GetBackgroundDrawList((ImGuiViewport* )viewport_addr);
    */
    public static native long internal_native_GetBackgroundDrawList__1(long viewport_addr);

    public static ImDrawList GetForegroundDrawList(ImGuiViewport viewport) {
        long pointer = internal_native_GetForegroundDrawList__2(viewport.native_address);
        if (pointer == 0)
            return ImDrawList.NULL;
        if (ImDrawList_TEMP_STATIC_GEN_3 == null)
            ImDrawList_TEMP_STATIC_GEN_3 = ImDrawList.native_new();
        ImDrawList_TEMP_STATIC_GEN_3.internal_reset(pointer, false);
        return ImDrawList_TEMP_STATIC_GEN_3;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)ImGuiWrapper::ImGui::GetBackgroundDrawList((ImGuiViewport* )viewport_addr);
    */
    public static native long internal_native_GetForegroundDrawList__2(long viewport_addr);

    public static ImDrawList GetForegroundDrawList() {
        long pointer = internal_native_GetForegroundDrawList();
        if (pointer == 0)
            return ImDrawList.NULL;
        if (ImDrawList_TEMP_STATIC_GEN_4 == null)
            ImDrawList_TEMP_STATIC_GEN_4 = ImDrawList.native_new();
        ImDrawList_TEMP_STATIC_GEN_4.internal_reset(pointer, false);
        return ImDrawList_TEMP_STATIC_GEN_4;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)ImGuiWrapper::ImGui::GetForegroundDrawList();
    */
    public static native long internal_native_GetForegroundDrawList();

    public static boolean IsRectVisible(ImVec2 size) {
        return internal_native_IsRectVisible__0(size.native_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsRectVisible(*((ImVec2* )size_addr));
    */
    public static native boolean internal_native_IsRectVisible__0(long size_addr);

    public static boolean IsRectVisible(ImVec2 rect_min, ImVec2 rect_max) {
        return internal_native_IsRectVisible__1(rect_min.native_address, rect_max.native_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsRectVisible(*((ImVec2* )rect_min_addr), *((ImVec2* )rect_max_addr));
    */
    public static native boolean internal_native_IsRectVisible__1(long rect_min_addr, long rect_max_addr);

    public static double GetTime() {
        return internal_native_GetTime();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetTime();
    */
    public static native double internal_native_GetTime();

    public static int GetFrameCount() {
        return internal_native_GetFrameCount();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetFrameCount();
    */
    public static native int internal_native_GetFrameCount();

    public static ImDrawListSharedData GetDrawListSharedData() {
        long pointer = internal_native_GetDrawListSharedData();
        if (pointer == 0)
            return ImDrawListSharedData.NULL;
        if (ImDrawListSharedData_TEMP_STATIC_GEN_0 == null)
            ImDrawListSharedData_TEMP_STATIC_GEN_0 = ImDrawListSharedData.native_new();
        ImDrawListSharedData_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return ImDrawListSharedData_TEMP_STATIC_GEN_0;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)ImGuiWrapper::ImGui::GetDrawListSharedData();
    */
    public static native long internal_native_GetDrawListSharedData();

    public static void SetStateStorage(ImGuiStorage storage) {
        internal_native_SetStateStorage(storage.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetStateStorage((ImGuiStorage* )storage_addr);
    */
    public static native void internal_native_SetStateStorage(long storage_addr);

    public static ImGuiStorage GetStateStorage() {
        long pointer = internal_native_GetStateStorage();
        if (pointer == 0)
            return ImGuiStorage.NULL;
        if (ImGuiStorage_TEMP_STATIC_GEN_0 == null)
            ImGuiStorage_TEMP_STATIC_GEN_0 = ImGuiStorage.native_new();
        ImGuiStorage_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return ImGuiStorage_TEMP_STATIC_GEN_0;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)ImGuiWrapper::ImGui::GetStateStorage();
    */
    public static native long internal_native_GetStateStorage();

    public static ImVec2 CalcTextSize(String text, String text_end, boolean hide_text_after_double_hash, float wrap_width) {
        long pointer = internal_native_CalcTextSize(text, text_end, hide_text_after_double_hash, wrap_width);
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_10 == null)
            ImVec2_TEMP_STATIC_GEN_10 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_10.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_10;
    }

    /*
      [-JNI;-NATIVE]
      static ImVec2 copy_addr;
      copy_addr = ImGuiWrapper::ImGui::CalcTextSize(text, text_end, hide_text_after_double_hash, (float)wrap_width);
      return (jlong)&copy_addr;
    */
    public static native long internal_native_CalcTextSize(String text, String text_end, boolean hide_text_after_double_hash, float wrap_width);

    public static ImVec2 CalcTextSize(String text, String text_end, boolean hide_text_after_double_hash) {
        long pointer = internal_native_CalcTextSize(text, text_end, hide_text_after_double_hash);
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_11 == null)
            ImVec2_TEMP_STATIC_GEN_11 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_11.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_11;
    }

    /*
      [-JNI;-NATIVE]
      static ImVec2 copy_addr;
      copy_addr = ImGuiWrapper::ImGui::CalcTextSize(text, text_end, hide_text_after_double_hash);
      return (jlong)&copy_addr;
    */
    public static native long internal_native_CalcTextSize(String text, String text_end, boolean hide_text_after_double_hash);

    public static ImVec2 CalcTextSize(String text, String text_end) {
        long pointer = internal_native_CalcTextSize(text, text_end);
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_12 == null)
            ImVec2_TEMP_STATIC_GEN_12 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_12.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_12;
    }

    /*
      [-JNI;-NATIVE]
      static ImVec2 copy_addr;
      copy_addr = ImGuiWrapper::ImGui::CalcTextSize(text, text_end);
      return (jlong)&copy_addr;
    */
    public static native long internal_native_CalcTextSize(String text, String text_end);

    public static ImVec2 CalcTextSize(String text) {
        long pointer = internal_native_CalcTextSize(text);
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_13 == null)
            ImVec2_TEMP_STATIC_GEN_13 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_13.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_13;
    }

    /*
      [-JNI;-NATIVE]
      static ImVec2 copy_addr;
      copy_addr = ImGuiWrapper::ImGui::CalcTextSize(text);
      return (jlong)&copy_addr;
    */
    public static native long internal_native_CalcTextSize(String text);

    public static ImVec4 ColorConvertU32ToFloat4(int col) {
        long pointer = internal_native_ColorConvertU32ToFloat4(col);
        if (pointer == 0)
            return ImVec4.NULL;
        if (ImVec4_TEMP_STATIC_GEN_1 == null)
            ImVec4_TEMP_STATIC_GEN_1 = ImVec4.native_new();
        ImVec4_TEMP_STATIC_GEN_1.internal_reset(pointer, false);
        return ImVec4_TEMP_STATIC_GEN_1;
    }

    /*
      [-JNI;-NATIVE]
      static ImVec4 copy_addr;
      copy_addr = ImGuiWrapper::ImGui::ColorConvertU32ToFloat4(col);
      return (jlong)&copy_addr;
    */
    public static native long internal_native_ColorConvertU32ToFloat4(int col);

    public static int ColorConvertFloat4ToU32(ImVec4 col) {
        return internal_native_ColorConvertFloat4ToU32(col.native_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::ColorConvertFloat4ToU32(*((ImVec4* )col_addr));
    */
    public static native int internal_native_ColorConvertFloat4ToU32(long col_addr);

    public static void ColorConvertRGBtoHSV(float r, float g, float b, IDLFloatArray out_h, IDLFloatArray out_s, IDLFloatArray out_v) {
        internal_native_ColorConvertRGBtoHSV(r, g, b, out_h.native_void_address, out_s.native_void_address, out_v.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::ColorConvertRGBtoHSV((float)r, (float)g, (float)b, (float*)out_h_addr, (float*)out_s_addr, (float*)out_v_addr);
    */
    public static native void internal_native_ColorConvertRGBtoHSV(float r, float g, float b, long out_h_addr, long out_s_addr, long out_v_addr);

    public static void ColorConvertHSVtoRGB(float h, float s, float v, IDLFloatArray out_r, IDLFloatArray out_g, IDLFloatArray out_b) {
        internal_native_ColorConvertHSVtoRGB(h, s, v, out_r.native_void_address, out_g.native_void_address, out_b.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::ColorConvertHSVtoRGB((float)h, (float)s, (float)v, (float*)out_r_addr, (float*)out_g_addr, (float*)out_b_addr);
    */
    public static native void internal_native_ColorConvertHSVtoRGB(float h, float s, float v, long out_r_addr, long out_g_addr, long out_b_addr);

    public static boolean IsKeyDown(ImGuiKey ImGuiKey) {
        return internal_native_IsKeyDown(ImGuiKey.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsKeyDown((::ImGuiKey)ImGuiKey);
    */
    public static native boolean internal_native_IsKeyDown(long ImGuiKey);

    public static boolean IsKeyPressed(ImGuiKey ImGuiKey, boolean repeat) {
        return internal_native_IsKeyPressed(ImGuiKey.getValue(), repeat);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsKeyPressed((::ImGuiKey)ImGuiKey, repeat);
    */
    public static native boolean internal_native_IsKeyPressed(long ImGuiKey, boolean repeat);

    public static boolean IsKeyPressed(ImGuiKey ImGuiKey) {
        return internal_native_IsKeyPressed(ImGuiKey.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsKeyPressed((::ImGuiKey)ImGuiKey);
    */
    public static native boolean internal_native_IsKeyPressed(long ImGuiKey);

    public static boolean IsKeyReleased(ImGuiKey ImGuiKey) {
        return internal_native_IsKeyReleased(ImGuiKey.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsKeyReleased((::ImGuiKey)ImGuiKey);
    */
    public static native boolean internal_native_IsKeyReleased(long ImGuiKey);

    public static boolean IsKeyChordPressed(int key_chord) {
        return internal_native_IsKeyChordPressed(key_chord);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsKeyChordPressed((int)key_chord);
    */
    public static native boolean internal_native_IsKeyChordPressed(int key_chord);

    public static int GetKeyPressedAmount(ImGuiKey ImGuiKey, float repeat_delay, float rate) {
        return internal_native_GetKeyPressedAmount(ImGuiKey.getValue(), repeat_delay, rate);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetKeyPressedAmount((::ImGuiKey)ImGuiKey, (float)repeat_delay, (float)rate);
    */
    public static native int internal_native_GetKeyPressedAmount(long ImGuiKey, float repeat_delay, float rate);

    public static void SetNextFrameWantCaptureKeyboard(boolean want_capture_keyboard) {
        internal_native_SetNextFrameWantCaptureKeyboard(want_capture_keyboard);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetNextFrameWantCaptureKeyboard(want_capture_keyboard);
    */
    public static native void internal_native_SetNextFrameWantCaptureKeyboard(boolean want_capture_keyboard);

    public static boolean Shortcut(int key_chord, ImGuiInputFlags flags) {
        return internal_native_Shortcut(key_chord, flags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::Shortcut((int)key_chord, (::ImGuiInputFlags)flags);
    */
    public static native boolean internal_native_Shortcut(int key_chord, long flags);

    public static boolean Shortcut(int key_chord) {
        return internal_native_Shortcut(key_chord);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::Shortcut((int)key_chord);
    */
    public static native boolean internal_native_Shortcut(int key_chord);

    public static void SetNextItemShortcut(int key_chord, ImGuiInputFlags flags) {
        internal_native_SetNextItemShortcut(key_chord, flags.getValue());
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetNextItemShortcut((int)key_chord, (::ImGuiInputFlags)flags);
    */
    public static native void internal_native_SetNextItemShortcut(int key_chord, long flags);

    public static void SetNextItemShortcut(int key_chord) {
        internal_native_SetNextItemShortcut(key_chord);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetNextItemShortcut((int)key_chord);
    */
    public static native void internal_native_SetNextItemShortcut(int key_chord);

    public static void SetItemKeyOwner(ImGuiKey key) {
        internal_native_SetItemKeyOwner(key.getValue());
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetItemKeyOwner((::ImGuiKey)key);
    */
    public static native void internal_native_SetItemKeyOwner(long key);

    public static boolean IsMouseDown(ImGuiMouseButton ImGuiMouseButton) {
        return internal_native_IsMouseDown(ImGuiMouseButton.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsMouseDown((::ImGuiMouseButton)ImGuiMouseButton);
    */
    public static native boolean internal_native_IsMouseDown(long ImGuiMouseButton);

    public static boolean IsMouseClicked(ImGuiMouseButton ImGuiMouseButton, boolean repeat) {
        return internal_native_IsMouseClicked(ImGuiMouseButton.getValue(), repeat);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsMouseClicked((::ImGuiMouseButton)ImGuiMouseButton, repeat);
    */
    public static native boolean internal_native_IsMouseClicked(long ImGuiMouseButton, boolean repeat);

    public static boolean IsMouseClicked(ImGuiMouseButton ImGuiMouseButton) {
        return internal_native_IsMouseClicked(ImGuiMouseButton.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsMouseClicked((::ImGuiMouseButton)ImGuiMouseButton);
    */
    public static native boolean internal_native_IsMouseClicked(long ImGuiMouseButton);

    public static boolean IsMouseReleased(ImGuiMouseButton ImGuiMouseButton) {
        return internal_native_IsMouseReleased(ImGuiMouseButton.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsMouseReleased((::ImGuiMouseButton)ImGuiMouseButton);
    */
    public static native boolean internal_native_IsMouseReleased(long ImGuiMouseButton);

    public static boolean IsMouseDoubleClicked(ImGuiMouseButton ImGuiMouseButton) {
        return internal_native_IsMouseDoubleClicked(ImGuiMouseButton.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsMouseDoubleClicked((::ImGuiMouseButton)ImGuiMouseButton);
    */
    public static native boolean internal_native_IsMouseDoubleClicked(long ImGuiMouseButton);

    public static int GetMouseClickedCount(ImGuiMouseButton ImGuiMouseButton) {
        return internal_native_GetMouseClickedCount(ImGuiMouseButton.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetMouseClickedCount((::ImGuiMouseButton)ImGuiMouseButton);
    */
    public static native int internal_native_GetMouseClickedCount(long ImGuiMouseButton);

    public static boolean IsMouseHoveringRect(ImVec2 r_min, ImVec2 r_max, boolean clip) {
        return internal_native_IsMouseHoveringRect(r_min.native_address, r_max.native_address, clip);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsMouseHoveringRect(*((ImVec2* )r_min_addr), *((ImVec2* )r_max_addr), clip);
    */
    public static native boolean internal_native_IsMouseHoveringRect(long r_min_addr, long r_max_addr, boolean clip);

    public static boolean IsMouseHoveringRect(ImVec2 r_min, ImVec2 r_max) {
        return internal_native_IsMouseHoveringRect(r_min.native_address, r_max.native_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsMouseHoveringRect(*((ImVec2* )r_min_addr), *((ImVec2* )r_max_addr));
    */
    public static native boolean internal_native_IsMouseHoveringRect(long r_min_addr, long r_max_addr);

    public static boolean IsMousePosValid(ImVec2 mouse_pos) {
        return internal_native_IsMousePosValid(mouse_pos.native_address);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsMousePosValid((ImVec2* )mouse_pos_addr);
    */
    public static native boolean internal_native_IsMousePosValid(long mouse_pos_addr);

    public static boolean IsMousePosValid() {
        return internal_native_IsMousePosValid();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsMousePosValid();
    */
    public static native boolean internal_native_IsMousePosValid();

    public static boolean IsAnyMouseDown() {
        return internal_native_IsAnyMouseDown();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsAnyMouseDown();
    */
    public static native boolean internal_native_IsAnyMouseDown();

    public static ImVec2 GetMousePos() {
        long pointer = internal_native_GetMousePos();
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_14 == null)
            ImVec2_TEMP_STATIC_GEN_14 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_14.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_14;
    }

    /*
      [-JNI;-NATIVE]
      static ImVec2 copy_addr;
      copy_addr = ImGuiWrapper::ImGui::GetMousePos();
      return (jlong)&copy_addr;
    */
    public static native long internal_native_GetMousePos();

    public static ImVec2 GetMousePosOnOpeningCurrentPopup() {
        long pointer = internal_native_GetMousePosOnOpeningCurrentPopup();
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_15 == null)
            ImVec2_TEMP_STATIC_GEN_15 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_15.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_15;
    }

    /*
      [-JNI;-NATIVE]
      static ImVec2 copy_addr;
      copy_addr = ImGuiWrapper::ImGui::GetMousePosOnOpeningCurrentPopup();
      return (jlong)&copy_addr;
    */
    public static native long internal_native_GetMousePosOnOpeningCurrentPopup();

    public static boolean IsMouseDragging(ImGuiMouseButton ImGuiMouseButton, float lock_threshold) {
        return internal_native_IsMouseDragging(ImGuiMouseButton.getValue(), lock_threshold);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsMouseDragging((::ImGuiMouseButton)ImGuiMouseButton, (float)lock_threshold);
    */
    public static native boolean internal_native_IsMouseDragging(long ImGuiMouseButton, float lock_threshold);

    public static boolean IsMouseDragging(ImGuiMouseButton ImGuiMouseButton) {
        return internal_native_IsMouseDragging(ImGuiMouseButton.getValue());
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::IsMouseDragging((::ImGuiMouseButton)ImGuiMouseButton);
    */
    public static native boolean internal_native_IsMouseDragging(long ImGuiMouseButton);

    public static ImVec2 GetMouseDragDelta(ImGuiMouseButton ImGuiMouseButton, float lock_threshold) {
        long pointer = internal_native_GetMouseDragDelta(ImGuiMouseButton.getValue(), lock_threshold);
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_16 == null)
            ImVec2_TEMP_STATIC_GEN_16 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_16.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_16;
    }

    /*
      [-JNI;-NATIVE]
      static ImVec2 copy_addr;
      copy_addr = ImGuiWrapper::ImGui::GetMouseDragDelta((::ImGuiMouseButton)ImGuiMouseButton, (float)lock_threshold);
      return (jlong)&copy_addr;
    */
    public static native long internal_native_GetMouseDragDelta(long ImGuiMouseButton, float lock_threshold);

    public static ImVec2 GetMouseDragDelta(ImGuiMouseButton ImGuiMouseButton) {
        long pointer = internal_native_GetMouseDragDelta(ImGuiMouseButton.getValue());
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_17 == null)
            ImVec2_TEMP_STATIC_GEN_17 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_17.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_17;
    }

    /*
      [-JNI;-NATIVE]
      static ImVec2 copy_addr;
      copy_addr = ImGuiWrapper::ImGui::GetMouseDragDelta((::ImGuiMouseButton)ImGuiMouseButton);
      return (jlong)&copy_addr;
    */
    public static native long internal_native_GetMouseDragDelta(long ImGuiMouseButton);

    public static ImVec2 GetMouseDragDelta() {
        long pointer = internal_native_GetMouseDragDelta();
        if (pointer == 0)
            return ImVec2.NULL;
        if (ImVec2_TEMP_STATIC_GEN_18 == null)
            ImVec2_TEMP_STATIC_GEN_18 = ImVec2.native_new();
        ImVec2_TEMP_STATIC_GEN_18.internal_reset(pointer, false);
        return ImVec2_TEMP_STATIC_GEN_18;
    }

    /*
      [-JNI;-NATIVE]
      static ImVec2 copy_addr;
      copy_addr = ImGuiWrapper::ImGui::GetMouseDragDelta();
      return (jlong)&copy_addr;
    */
    public static native long internal_native_GetMouseDragDelta();

    public static void ResetMouseDragDelta(ImGuiMouseButton ImGuiMouseButton) {
        internal_native_ResetMouseDragDelta(ImGuiMouseButton.getValue());
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::ResetMouseDragDelta((::ImGuiMouseButton)ImGuiMouseButton);
    */
    public static native void internal_native_ResetMouseDragDelta(long ImGuiMouseButton);

    public static void ResetMouseDragDelta() {
        internal_native_ResetMouseDragDelta();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::ResetMouseDragDelta();
    */
    public static native void internal_native_ResetMouseDragDelta();

    public static int GetMouseCursor() {
        return internal_native_GetMouseCursor();
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::GetMouseCursor();
    */
    public static native int internal_native_GetMouseCursor();

    public static void SetMouseCursor(int cursor_type) {
        internal_native_SetMouseCursor(cursor_type);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetMouseCursor((int)cursor_type);
    */
    public static native void internal_native_SetMouseCursor(int cursor_type);

    public static void SetNextFrameWantCaptureMouse(boolean want_capture_mouse) {
        internal_native_SetNextFrameWantCaptureMouse(want_capture_mouse);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetNextFrameWantCaptureMouse(want_capture_mouse);
    */
    public static native void internal_native_SetNextFrameWantCaptureMouse(boolean want_capture_mouse);

    public static void SetClipboardText(String text) {
        internal_native_SetClipboardText(text);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SetClipboardText(text);
    */
    public static native void internal_native_SetClipboardText(String text);

    public static void LoadIniSettingsFromDisk(String ini_filename) {
        internal_native_LoadIniSettingsFromDisk(ini_filename);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::LoadIniSettingsFromDisk(ini_filename);
    */
    public static native void internal_native_LoadIniSettingsFromDisk(String ini_filename);

    public static void LoadIniSettingsFromMemory(String ini_data, long ini_size) {
        internal_native_LoadIniSettingsFromMemory(ini_data, ini_size);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::LoadIniSettingsFromMemory(ini_data, ini_size);
    */
    public static native void internal_native_LoadIniSettingsFromMemory(String ini_data, long ini_size);

    public static void LoadIniSettingsFromMemory(String ini_data) {
        internal_native_LoadIniSettingsFromMemory(ini_data);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::LoadIniSettingsFromMemory(ini_data);
    */
    public static native void internal_native_LoadIniSettingsFromMemory(String ini_data);

    public static void SaveIniSettingsToDisk(String ini_filename) {
        internal_native_SaveIniSettingsToDisk(ini_filename);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::SaveIniSettingsToDisk(ini_filename);
    */
    public static native void internal_native_SaveIniSettingsToDisk(String ini_filename);

    public static IDLString SaveIniSettingsToMemory() {
        long pointer = internal_native_SaveIniSettingsToMemory();
        if (pointer == 0)
            return IDLString.NULL;
        if (IDLString_TEMP_STATIC_GEN_0 == null)
            IDLString_TEMP_STATIC_GEN_0 = IDLString.native_new();
        IDLString_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return IDLString_TEMP_STATIC_GEN_0;
    }

    /*
      [-JNI;-NATIVE]
      static IDLString copy_addr;
      copy_addr = ImGuiWrapper::ImGui::SaveIniSettingsToMemory();
      return (jlong)&copy_addr;
    */
    public static native long internal_native_SaveIniSettingsToMemory();

    public static void DebugTextEncoding(String text) {
        internal_native_DebugTextEncoding(text);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::DebugTextEncoding(text);
    */
    public static native void internal_native_DebugTextEncoding(String text);

    public static boolean DebugCheckVersionAndDataLayout(String version_str, long sz_io, long sz_style, long sz_vec2, long sz_vec4, long sz_drawvert, long sz_drawidx) {
        return internal_native_DebugCheckVersionAndDataLayout(version_str, sz_io, sz_style, sz_vec2, sz_vec4, sz_drawvert, sz_drawidx);
    }

    /*
      [-JNI;-NATIVE]
      return ImGuiWrapper::ImGui::DebugCheckVersionAndDataLayout(version_str, sz_io, sz_style, sz_vec2, sz_vec4, sz_drawvert, sz_drawidx);
    */
    public static native boolean internal_native_DebugCheckVersionAndDataLayout(String version_str, long sz_io, long sz_style, long sz_vec2, long sz_vec4, long sz_drawvert, long sz_drawidx);

    public static ImGuiPlatformIO GetPlatformIO() {
        long pointer = internal_native_GetPlatformIO();
        if (pointer == 0)
            return ImGuiPlatformIO.NULL;
        if (ImGuiPlatformIO_TEMP_STATIC_GEN_0 == null)
            ImGuiPlatformIO_TEMP_STATIC_GEN_0 = ImGuiPlatformIO.native_new();
        ImGuiPlatformIO_TEMP_STATIC_GEN_0.internal_reset(pointer, false);
        return ImGuiPlatformIO_TEMP_STATIC_GEN_0;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)&ImGuiWrapper::ImGui::GetPlatformIO();
    */
    public static native long internal_native_GetPlatformIO();

    public static void UpdatePlatformWindows() {
        internal_native_UpdatePlatformWindows();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::UpdatePlatformWindows();
    */
    public static native void internal_native_UpdatePlatformWindows();

    public static void RenderPlatformWindowsDefault(IDLBase platform_render_arg, IDLBase renderer_render_arg) {
        internal_native_RenderPlatformWindowsDefault(platform_render_arg.native_void_address, renderer_render_arg.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::RenderPlatformWindowsDefault((void** )platform_render_arg_addr, (void** )renderer_render_arg_addr);
    */
    public static native void internal_native_RenderPlatformWindowsDefault(long platform_render_arg_addr, long renderer_render_arg_addr);

    public static void RenderPlatformWindowsDefault(IDLBase platform_render_arg) {
        internal_native_RenderPlatformWindowsDefault(platform_render_arg.native_void_address);
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::RenderPlatformWindowsDefault((void** )platform_render_arg_addr);
    */
    public static native void internal_native_RenderPlatformWindowsDefault(long platform_render_arg_addr);

    public static void RenderPlatformWindowsDefault() {
        internal_native_RenderPlatformWindowsDefault();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::RenderPlatformWindowsDefault();
    */
    public static native void internal_native_RenderPlatformWindowsDefault();

    public static void DestroyPlatformWindows() {
        internal_native_DestroyPlatformWindows();
    }

    /*
      [-JNI;-NATIVE]
      ImGuiWrapper::ImGui::DestroyPlatformWindows();
    */
    public static native void internal_native_DestroyPlatformWindows();

    public static ImGuiViewport FindViewportByID(int id) {
        long pointer = internal_native_FindViewportByID(id);
        if (pointer == 0)
            return ImGuiViewport.NULL;
        if (ImGuiViewport_TEMP_STATIC_GEN_2 == null)
            ImGuiViewport_TEMP_STATIC_GEN_2 = ImGuiViewport.native_new();
        ImGuiViewport_TEMP_STATIC_GEN_2.internal_reset(pointer, false);
        return ImGuiViewport_TEMP_STATIC_GEN_2;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)ImGuiWrapper::ImGui::FindViewportByID((int)id);
    */
    public static native long internal_native_FindViewportByID(int id);

    public static ImGuiViewport FindViewportByPlatformHandle(IDLBase platform_handle) {
        long pointer = internal_native_FindViewportByPlatformHandle(platform_handle.native_void_address);
        if (pointer == 0)
            return ImGuiViewport.NULL;
        if (ImGuiViewport_TEMP_STATIC_GEN_3 == null)
            ImGuiViewport_TEMP_STATIC_GEN_3 = ImGuiViewport.native_new();
        ImGuiViewport_TEMP_STATIC_GEN_3.internal_reset(pointer, false);
        return ImGuiViewport_TEMP_STATIC_GEN_3;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)ImGuiWrapper::ImGui::FindViewportByPlatformHandle((void** )platform_handle_addr);
    */
    public static native long internal_native_FindViewportByPlatformHandle(long platform_handle_addr);
}
