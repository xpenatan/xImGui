/*
  -------------------------------------------------------
   This file was generated by JParser
 
   Do not make changes to this file
  -------------------------------------------------------
*/
package imgui;

import imgui.idl.IDLBase;

public class ImRect extends IDLBase {

    private ImVec2 ImVec2_TEMP_GEN_0;

    private ImVec2 ImVec2_TEMP_GEN_1;

    private ImVec2 ImVec2_TEMP_GEN_2;

    private ImVec2 ImVec2_TEMP_GEN_3;

    public final static ImRect NULL = native_new();

    public static ImRect TMP_1 = new ImRect();

    public static ImRect TMP_2 = new ImRect();

    public static ImRect TMP_3 = new ImRect();

    public static ImRect TMP_4 = new ImRect();

    public static ImRect native_new() {
        return new ImRect((byte) 0, (char) 0);
    }

    private ImRect(byte v, char c) {
    }

    public ImRect() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    public ImRect set(float x1, float y1, float x2, float y2) {
        set_Min(ImVec2.TMP_2.set(x1, y1));
        set_Max(ImVec2.TMP_2.set(x2, y2));
        return this;
    }

    public ImRect set(ImVec2 min, ImVec2 max) {
        set_Min(min);
        set_Max(max);
        return this;
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)new ImRect();
    */
    public static native long internal_native_create();

    public ImRect(float x1, float y1, float x2, float y2) {
        long addr = internal_native_create_float_float_float_float(x1, y1, x2, y2);
        internal_reset(addr, true);
    }

    /*
      [-JNI;-NATIVE]
      return (jlong)new ImRect((float)x1, (float)y1, (float)x2, (float)y2);
    */
    public static native long internal_native_create_float_float_float_float(float x1, float y1, float x2, float y2);

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImRect* nativeObject = (ImRect*)this_addr;
      delete nativeObject;
    */
    public static native void internal_native_deleteNative(long this_addr);

    public ImVec2 GetCenter() {
        long pointer = internal_native_GetCenter(native_address);
        if (pointer == 0)
            return null;
        if (ImVec2_TEMP_GEN_0 == null)
            ImVec2_TEMP_GEN_0 = ImVec2.native_new();
        ImVec2_TEMP_GEN_0.internal_reset(pointer, false);
        return ImVec2_TEMP_GEN_0;
    }

    /*
      [-JNI;-NATIVE]
      ImRect* nativeObject = (ImRect*)this_addr;
      static ImVec2 copy_addr;
      copy_addr = nativeObject->GetCenter();
      return (jlong)&copy_addr;
    */
    public static native long internal_native_GetCenter(long this_addr);

    public ImVec2 GetSize() {
        long pointer = internal_native_GetSize(native_address);
        if (pointer == 0)
            return null;
        if (ImVec2_TEMP_GEN_1 == null)
            ImVec2_TEMP_GEN_1 = ImVec2.native_new();
        ImVec2_TEMP_GEN_1.internal_reset(pointer, false);
        return ImVec2_TEMP_GEN_1;
    }

    /*
      [-JNI;-NATIVE]
      ImRect* nativeObject = (ImRect*)this_addr;
      static ImVec2 copy_addr;
      copy_addr = nativeObject->GetSize();
      return (jlong)&copy_addr;
    */
    public static native long internal_native_GetSize(long this_addr);

    public float GetWidth() {
        return internal_native_GetWidth(native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImRect* nativeObject = (ImRect*)this_addr;
      return nativeObject->GetWidth();
    */
    public static native float internal_native_GetWidth(long this_addr);

    public float GetHeight() {
        return internal_native_GetHeight(native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImRect* nativeObject = (ImRect*)this_addr;
      return nativeObject->GetHeight();
    */
    public static native float internal_native_GetHeight(long this_addr);

    public float GetArea() {
        return internal_native_GetArea(native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImRect* nativeObject = (ImRect*)this_addr;
      return nativeObject->GetArea();
    */
    public static native float internal_native_GetArea(long this_addr);

    public ImVec2 get_Min() {
        long pointer = internal_native_get_Min(native_address);
        if (pointer == 0)
            return null;
        if (ImVec2_TEMP_GEN_2 == null)
            ImVec2_TEMP_GEN_2 = ImVec2.native_new();
        ImVec2_TEMP_GEN_2.internal_reset(pointer, false);
        return ImVec2_TEMP_GEN_2;
    }

    /*
      [-JNI;-NATIVE]
      ImRect* nativeObject = (ImRect*)this_addr;
      return (jlong)&nativeObject->Min;
    */
    public static native long internal_native_get_Min(long this_addr);

    public void set_Min(ImVec2 Min) {
        internal_native_set_Min(native_address, Min.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImRect* nativeObject = (ImRect*)this_addr;
      nativeObject->Min = *((ImVec2*)Min_addr);
    */
    public static native void internal_native_set_Min(long this_addr, long Min_addr);

    public ImVec2 get_Max() {
        long pointer = internal_native_get_Max(native_address);
        if (pointer == 0)
            return null;
        if (ImVec2_TEMP_GEN_3 == null)
            ImVec2_TEMP_GEN_3 = ImVec2.native_new();
        ImVec2_TEMP_GEN_3.internal_reset(pointer, false);
        return ImVec2_TEMP_GEN_3;
    }

    /*
      [-JNI;-NATIVE]
      ImRect* nativeObject = (ImRect*)this_addr;
      return (jlong)&nativeObject->Max;
    */
    public static native long internal_native_get_Max(long this_addr);

    public void set_Max(ImVec2 Max) {
        internal_native_set_Max(native_address, Max.native_address);
    }

    /*
      [-JNI;-NATIVE]
      ImRect* nativeObject = (ImRect*)this_addr;
      nativeObject->Max = *((ImVec2*)Max_addr);
    */
    public static native void internal_native_set_Max(long this_addr, long Max_addr);
}
