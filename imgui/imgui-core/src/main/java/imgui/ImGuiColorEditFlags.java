/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package imgui;

import java.util.Map;
import java.util.HashMap;
import com.github.xpenatan.jParser.idl.IDLEnum;

public enum ImGuiColorEditFlags implements IDLEnum<ImGuiColorEditFlags> {

    CUSTOM(0),
    None(ImGuiColorEditFlags_None_NATIVE()),
    NoAlpha(ImGuiColorEditFlags_NoAlpha_NATIVE()),
    NoPicker(ImGuiColorEditFlags_NoPicker_NATIVE()),
    NoOptions(ImGuiColorEditFlags_NoOptions_NATIVE()),
    NoSmallPreview(ImGuiColorEditFlags_NoSmallPreview_NATIVE()),
    NoTooltip(ImGuiColorEditFlags_NoTooltip_NATIVE()),
    NoLabel(ImGuiColorEditFlags_NoLabel_NATIVE()),
    NoSidePreview(ImGuiColorEditFlags_NoSidePreview_NATIVE()),
    NoDragDrop(ImGuiColorEditFlags_NoDragDrop_NATIVE()),
    NoBorder(ImGuiColorEditFlags_NoBorder_NATIVE()),
    AlphaBar(ImGuiColorEditFlags_AlphaBar_NATIVE()),
    AlphaPreview(ImGuiColorEditFlags_AlphaPreview_NATIVE()),
    AlphaPreviewHalf(ImGuiColorEditFlags_AlphaPreviewHalf_NATIVE()),
    HDR(ImGuiColorEditFlags_HDR_NATIVE()),
    DisplayRGB(ImGuiColorEditFlags_DisplayRGB_NATIVE()),
    DisplayHSV(ImGuiColorEditFlags_DisplayHSV_NATIVE()),
    DisplayHex(ImGuiColorEditFlags_DisplayHex_NATIVE()),
    Uint8(ImGuiColorEditFlags_Uint8_NATIVE()),
    Float(ImGuiColorEditFlags_Float_NATIVE()),
    PickerHueBar(ImGuiColorEditFlags_PickerHueBar_NATIVE()),
    PickerHueWheel(ImGuiColorEditFlags_PickerHueWheel_NATIVE()),
    InputRGB(ImGuiColorEditFlags_InputRGB_NATIVE()),
    InputHSV(ImGuiColorEditFlags_InputHSV_NATIVE()),
    DefaultOptions_(ImGuiColorEditFlags_DefaultOptions__NATIVE());

    private int value;

    private ImGuiColorEditFlags(int value) {
        this.value = value;
    }

    public int getValue() {
        return value;
    }

    public ImGuiColorEditFlags setValue(int value) {
        if (this != CUSTOM) {
            throw new RuntimeException("Cannot change none CUSTOM value");
        }
        this.value = value;
        return this;
    }

    public ImGuiColorEditFlags getCustom() {
        return CUSTOM;
    }

    public static final Map<Integer, ImGuiColorEditFlags> MAP = new HashMap<>();

    static {
        for (ImGuiColorEditFlags value : values()) {
            if (value != CUSTOM) {
                MAP.put(value.value, value);
            }
        }
    }

    /*[-JNI;-NATIVE]
return (jlong)ImGuiColorEditFlags_None;
*/
    private static native int ImGuiColorEditFlags_None_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiColorEditFlags_NoAlpha;
*/
    private static native int ImGuiColorEditFlags_NoAlpha_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiColorEditFlags_NoPicker;
*/
    private static native int ImGuiColorEditFlags_NoPicker_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiColorEditFlags_NoOptions;
*/
    private static native int ImGuiColorEditFlags_NoOptions_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiColorEditFlags_NoSmallPreview;
*/
    private static native int ImGuiColorEditFlags_NoSmallPreview_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiColorEditFlags_NoTooltip;
*/
    private static native int ImGuiColorEditFlags_NoTooltip_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiColorEditFlags_NoLabel;
*/
    private static native int ImGuiColorEditFlags_NoLabel_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiColorEditFlags_NoSidePreview;
*/
    private static native int ImGuiColorEditFlags_NoSidePreview_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiColorEditFlags_NoDragDrop;
*/
    private static native int ImGuiColorEditFlags_NoDragDrop_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiColorEditFlags_NoBorder;
*/
    private static native int ImGuiColorEditFlags_NoBorder_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiColorEditFlags_AlphaBar;
*/
    private static native int ImGuiColorEditFlags_AlphaBar_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiColorEditFlags_AlphaPreview;
*/
    private static native int ImGuiColorEditFlags_AlphaPreview_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiColorEditFlags_AlphaPreviewHalf;
*/
    private static native int ImGuiColorEditFlags_AlphaPreviewHalf_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiColorEditFlags_HDR;
*/
    private static native int ImGuiColorEditFlags_HDR_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiColorEditFlags_DisplayRGB;
*/
    private static native int ImGuiColorEditFlags_DisplayRGB_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiColorEditFlags_DisplayHSV;
*/
    private static native int ImGuiColorEditFlags_DisplayHSV_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiColorEditFlags_DisplayHex;
*/
    private static native int ImGuiColorEditFlags_DisplayHex_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiColorEditFlags_Uint8;
*/
    private static native int ImGuiColorEditFlags_Uint8_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiColorEditFlags_Float;
*/
    private static native int ImGuiColorEditFlags_Float_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiColorEditFlags_PickerHueBar;
*/
    private static native int ImGuiColorEditFlags_PickerHueBar_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiColorEditFlags_PickerHueWheel;
*/
    private static native int ImGuiColorEditFlags_PickerHueWheel_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiColorEditFlags_InputRGB;
*/
    private static native int ImGuiColorEditFlags_InputRGB_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiColorEditFlags_InputHSV;
*/
    private static native int ImGuiColorEditFlags_InputHSV_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)ImGuiColorEditFlags_DefaultOptions_;
*/
    private static native int ImGuiColorEditFlags_DefaultOptions__NATIVE();
}
