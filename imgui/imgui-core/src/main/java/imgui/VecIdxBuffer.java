/*
  -------------------------------------------------------
   This file was generated by JParser
 
   Do not make changes to this file
  -------------------------------------------------------
*/
package imgui;

import java.nio.ByteBuffer;
import com.github.xpenatan.jParser.idl.IDLBase;

public class VecIdxBuffer extends IDLBase {

    private IDLBase IDLBase_TEMP_GEN_0;

    public final static VecIdxBuffer NULL = native_new();

    public static VecIdxBuffer native_new() {
        return new VecIdxBuffer((byte) 0, (char) 0);
    }

    private VecIdxBuffer(byte v, char c) {
    }

    public void getByteBuffer(int size, ByteBuffer out) {
        internal_native_get_ByteBuffer(native_address, size, out);
    }

    /*
      [-JNI;-NATIVE]
              VecIdxBuffer* nativeObject = (VecIdxBuffer*)this_addr;
              void* bufferAddress = env->GetDirectBufferAddress(out);
              memcpy(bufferAddress, nativeObject->Data, size);
    */
    public static native void internal_native_get_ByteBuffer(long this_addr, int size, ByteBuffer out);

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*
      [-JNI;-NATIVE]
      VecIdxBuffer* nativeObject = (VecIdxBuffer*)this_addr;
      delete nativeObject;
    */
    public static native void internal_native_deleteNative(long this_addr);

    public int size() {
        return internal_native_size(native_address);
    }

    /*
      [-JNI;-NATIVE]
      VecIdxBuffer* nativeObject = (VecIdxBuffer*)this_addr;
      return nativeObject->size();
    */
    public static native int internal_native_size(long this_addr);

    public IDLBase get_Data() {
        long pointer = internal_native_get_Data(native_address);
        if (pointer == 0)
            return IDLBase.NULL;
        if (IDLBase_TEMP_GEN_0 == null)
            IDLBase_TEMP_GEN_0 = IDLBase.native_new();
        IDLBase_TEMP_GEN_0.internal_reset(pointer, false);
        return IDLBase_TEMP_GEN_0;
    }

    /*
      [-JNI;-NATIVE]
      VecIdxBuffer* nativeObject = (VecIdxBuffer*)this_addr;
      return (jlong)nativeObject->Data;
    */
    public static native long internal_native_get_Data(long this_addr);
}
