/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package imgui;

import com.github.xpenatan.jParser.idl.IDLBase;

public class ImVectorInt extends IDLBase {

    static public final ImVectorInt NULL = ImVectorInt.native_new();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected ImVectorInt(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static ImVectorInt native_new() {
        return new ImVectorInt((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
ImVectorInt* nativeObject = (ImVectorInt*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public int getData(int index) {
        return internal_native_getData(native_address, index);
    }

    /*[-JNI;-NATIVE]
ImVectorInt* nativeObject = (ImVectorInt*)this_addr;
return ((*nativeObject)[(int)index]);*/
    public static native int internal_native_getData(long this_addr, int index);

    public int size() {
        return internal_native_size(native_address);
    }

    /*[-JNI;-NATIVE]
ImVectorInt* nativeObject = (ImVectorInt*)this_addr;
return nativeObject->size();
*/
    public static native int internal_native_size(long this_addr);

    public int front() {
        return internal_native_front(native_address);
    }

    /*[-JNI;-NATIVE]
ImVectorInt* nativeObject = (ImVectorInt*)this_addr;
return nativeObject->front();
*/
    public static native int internal_native_front(long this_addr);

    public int back() {
        return internal_native_back(native_address);
    }

    /*[-JNI;-NATIVE]
ImVectorInt* nativeObject = (ImVectorInt*)this_addr;
return nativeObject->back();
*/
    public static native int internal_native_back(long this_addr);
}
