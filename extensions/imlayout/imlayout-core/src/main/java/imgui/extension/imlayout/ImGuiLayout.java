/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package imgui.extension.imlayout;

import imgui.ImVec2;
import imgui.idl.IDLBase;

public class ImGuiLayout extends IDLBase {

    private ImVec2 ImVec2_TEMP_GEN_0;

    private ImVec2 ImVec2_TEMP_GEN_1;

    private ImVec2 ImVec2_TEMP_GEN_2;

    private ImVec2 ImVec2_TEMP_GEN_3;

    private ImVec2 ImVec2_TEMP_GEN_4;

    private ImVec2 ImVec2_TEMP_GEN_5;

    static public final ImGuiLayout NULL = ImGuiLayout.native_new();

    static public final ImGuiLayout T_01 = ImGuiLayout.native_new();

    static public final ImGuiLayout T_02 = ImGuiLayout.native_new();

    static public final ImGuiLayout T_03 = ImGuiLayout.native_new();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected ImGuiLayout(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static ImGuiLayout native_new() {
        return new ImGuiLayout((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
ImGuiLayout* nativeObject = (ImGuiLayout*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public ImVec2 getAbsoluteSize() {
        long pointer = internal_native_getAbsoluteSize(native_address);
        if (pointer == 0)
            return null;
        if (ImVec2_TEMP_GEN_0 == null)
            ImVec2_TEMP_GEN_0 = ImVec2.native_new();
        ImVec2_TEMP_GEN_0.internal_reset(pointer, false);
        return ImVec2_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
ImGuiLayout* nativeObject = (ImGuiLayout*)this_addr;
static ImVec2 copy_addr;
copy_addr = nativeObject->getAbsoluteSize();
return (jlong)&copy_addr;*/
    public static native long internal_native_getAbsoluteSize(long this_addr);

    public ImVec2 getAbsoluteSizePadding() {
        long pointer = internal_native_getAbsoluteSizePadding(native_address);
        if (pointer == 0)
            return null;
        if (ImVec2_TEMP_GEN_1 == null)
            ImVec2_TEMP_GEN_1 = ImVec2.native_new();
        ImVec2_TEMP_GEN_1.internal_reset(pointer, false);
        return ImVec2_TEMP_GEN_1;
    }

    /*[-JNI;-NATIVE]
ImGuiLayout* nativeObject = (ImGuiLayout*)this_addr;
static ImVec2 copy_addr;
copy_addr = nativeObject->getAbsoluteSizePadding();
return (jlong)&copy_addr;*/
    public static native long internal_native_getAbsoluteSizePadding(long this_addr);

    public ImVec2 getContentSize() {
        long pointer = internal_native_getContentSize(native_address);
        if (pointer == 0)
            return null;
        if (ImVec2_TEMP_GEN_2 == null)
            ImVec2_TEMP_GEN_2 = ImVec2.native_new();
        ImVec2_TEMP_GEN_2.internal_reset(pointer, false);
        return ImVec2_TEMP_GEN_2;
    }

    /*[-JNI;-NATIVE]
ImGuiLayout* nativeObject = (ImGuiLayout*)this_addr;
static ImVec2 copy_addr;
copy_addr = nativeObject->getContentSize();
return (jlong)&copy_addr;*/
    public static native long internal_native_getContentSize(long this_addr);

    public ImVec2 getPositionPadding() {
        long pointer = internal_native_getPositionPadding(native_address);
        if (pointer == 0)
            return null;
        if (ImVec2_TEMP_GEN_3 == null)
            ImVec2_TEMP_GEN_3 = ImVec2.native_new();
        ImVec2_TEMP_GEN_3.internal_reset(pointer, false);
        return ImVec2_TEMP_GEN_3;
    }

    /*[-JNI;-NATIVE]
ImGuiLayout* nativeObject = (ImGuiLayout*)this_addr;
static ImVec2 copy_addr;
copy_addr = nativeObject->getPositionPadding();
return (jlong)&copy_addr;*/
    public static native long internal_native_getPositionPadding(long this_addr);

    public ImVec2 get_position() {
        long pointer = internal_native_get_position(native_address);
        if (pointer == 0)
            return null;
        if (ImVec2_TEMP_GEN_4 == null)
            ImVec2_TEMP_GEN_4 = ImVec2.native_new();
        ImVec2_TEMP_GEN_4.internal_reset(pointer, false);
        return ImVec2_TEMP_GEN_4;
    }

    /*[-JNI;-NATIVE]
ImGuiLayout* nativeObject = (ImGuiLayout*)this_addr;
return (jlong)&nativeObject->position;
*/
    public static native long internal_native_get_position(long this_addr);

    public void set_position(ImVec2 position) {
        internal_native_set_position(native_address, position.native_address);
    }

    /*[-JNI;-NATIVE]
ImGuiLayout* nativeObject = (ImGuiLayout*)this_addr;
nativeObject->position = *((ImVec2*)position_addr);
*/
    public static native void internal_native_set_position(long this_addr, long position_addr);

    public ImVec2 get_size() {
        long pointer = internal_native_get_size(native_address);
        if (pointer == 0)
            return null;
        if (ImVec2_TEMP_GEN_5 == null)
            ImVec2_TEMP_GEN_5 = ImVec2.native_new();
        ImVec2_TEMP_GEN_5.internal_reset(pointer, false);
        return ImVec2_TEMP_GEN_5;
    }

    /*[-JNI;-NATIVE]
ImGuiLayout* nativeObject = (ImGuiLayout*)this_addr;
return (jlong)&nativeObject->size;
*/
    public static native long internal_native_get_size(long this_addr);

    public void set_size(ImVec2 size) {
        internal_native_set_size(native_address, size.native_address);
    }

    /*[-JNI;-NATIVE]
ImGuiLayout* nativeObject = (ImGuiLayout*)this_addr;
nativeObject->size = *((ImVec2*)size_addr);
*/
    public static native void internal_native_set_size(long this_addr, long size_addr);
}
