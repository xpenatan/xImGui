/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.imgui.extension.nodeeditor;

import gen.com.github.xpenatan.jParser.idl.IDLBase;
import gen.imgui.idl.helper.IDLString;

public class LoadSaveSettingsListener extends IDLBase {

    static private IDLString IDLString_TEMP_STATIC_GEN_0;

    static private IDLString IDLString_TEMP_STATIC_GEN_1;

    static public final LoadSaveSettingsListener NULL = LoadSaveSettingsListener.native_new();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected LoadSaveSettingsListener(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static LoadSaveSettingsListener native_new() {
        return new LoadSaveSettingsListener((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = imgui.wrapPointer(this_addr, imgui.LoadSaveSettingsListenerImpl);
imgui.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = imgui.wrapPointer(this_addr, imgui.LoadSaveSettingsListenerImpl);imgui.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public LoadSaveSettingsListener() {
        int addr = internal_native_create();
        internal_reset(addr, true);
        setupCallback();
    }

    private void setupCallback() {
        onLoad onLoad = new onLoad() {

            public void onLoad(int data_addr) {
                internal_onLoad(data_addr);
            }
        };
        onSave onSave = new onSave() {

            public boolean onSave(int data_addr, int reason_addr) {
                return internal_onSave(data_addr, reason_addr);
            }
        };
        internal_native_setupCallback(native_address, onLoad, onSave);
    }

    protected void onLoad(IDLString data) {
    }

    private void internal_onLoad(int data_addr) {
        if (IDLString_TEMP_STATIC_GEN_0 == null)
            IDLString_TEMP_STATIC_GEN_0 = IDLString.native_new();
        IDLString_TEMP_STATIC_GEN_0.internal_reset(data_addr, false);
        onLoad(IDLString_TEMP_STATIC_GEN_0);
    }

    protected boolean onSave(IDLString data, SaveReasonFlags reason) {
        return false;
    }

    private boolean internal_onSave(int data_addr, int reason_addr) {
        if (IDLString_TEMP_STATIC_GEN_1 == null)
            IDLString_TEMP_STATIC_GEN_1 = IDLString.native_new();
        IDLString_TEMP_STATIC_GEN_1.internal_reset(data_addr, false);
        return onSave(IDLString_TEMP_STATIC_GEN_1, SaveReasonFlags.MAP.get(reason_addr));
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new imgui.LoadSaveSettingsListenerImpl();
return imgui.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new imgui.LoadSaveSettingsListenerImpl();return imgui.getPointer(jsObj);")
    public static native int internal_native_create();

    @org.teavm.jso.JSBody(params = { "this_addr", "onLoad", "onSave" }, script = "var LoadSaveSettingsListenerImpl = imgui.wrapPointer(this_addr, imgui.LoadSaveSettingsListenerImpl); LoadSaveSettingsListenerImpl.onLoad = onLoad; LoadSaveSettingsListenerImpl.onSave = onSave;")
    public static native void internal_native_setupCallback(int this_addr, onLoad onLoad, onSave onSave);

    @org.teavm.jso.JSFunctor()
    public interface onLoad extends org.teavm.jso.JSObject {

        void onLoad(int data_addr);
    }

    @org.teavm.jso.JSFunctor()
    public interface onSave extends org.teavm.jso.JSObject {

        boolean onSave(int data_addr, int reason_addr);
    }
}
