/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package imgui.extension.nodeeditor;

import imgui.idl.IDLBase;
import imgui.idl.helper.IDLString;

public class LoadSaveSettingsListener extends IDLBase {

    static private IDLString IDLString_TEMP_STATIC_GEN_0;

    static private IDLString IDLString_TEMP_STATIC_GEN_1;

    static public final LoadSaveSettingsListener NULL = LoadSaveSettingsListener.native_new();

    /*[-JNI;-NATIVE]
class LoadSaveSettingsListenerImpl : public LoadSaveSettingsListener {
private:
	JNIEnv* env;
	jobject obj;
public:
	inline static jclass jClassID = 0;
	inline static jmethodID onLoadJ_ID = 0;
	inline static jmethodID onSaveJI_ID = 0;

void setupCallback(JNIEnv* env, jobject obj) {
	this->env = env;
	this->obj = env->NewGlobalRef(obj);
	if(LoadSaveSettingsListenerImpl::jClassID == 0) {
		LoadSaveSettingsListenerImpl::jClassID = (jclass)env->NewGlobalRef(env->GetObjectClass(obj));
		LoadSaveSettingsListenerImpl::onLoadJ_ID = env->GetMethodID(jClassID, "internal_onLoad", "(J)V");
		LoadSaveSettingsListenerImpl::onSaveJI_ID = env->GetMethodID(jClassID, "internal_onSave", "(JI)Z");
	}
}
virtual void onLoad(IDLString* data) {
   env->CallVoidMethod(obj, LoadSaveSettingsListenerImpl::onLoadJ_ID, (jlong)data);
}
virtual bool onSave(IDLString* data, SaveReasonFlags reason) {
   return env->CallBooleanMethod(obj, LoadSaveSettingsListenerImpl::onSaveJI_ID, (jlong)data, reason);
}
};
*/
    @Deprecated()
    protected LoadSaveSettingsListener(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static LoadSaveSettingsListener native_new() {
        return new LoadSaveSettingsListener((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
LoadSaveSettingsListenerImpl* nativeObject = (LoadSaveSettingsListenerImpl*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public LoadSaveSettingsListener() {
        long addr = internal_native_create();
        internal_reset(addr, true);
        setupCallback();
    }

    private void setupCallback() {
        internal_native_setupCallback(native_address);
    }

    protected void onLoad(IDLString data) {
    }

    private void internal_onLoad(long data_addr) {
        if (IDLString_TEMP_STATIC_GEN_0 == null)
            IDLString_TEMP_STATIC_GEN_0 = IDLString.native_new();
        IDLString_TEMP_STATIC_GEN_0.internal_reset(data_addr, false);
        onLoad(IDLString_TEMP_STATIC_GEN_0);
    }

    protected boolean onSave(IDLString data, SaveReasonFlags reason) {
        return false;
    }

    private boolean internal_onSave(long data_addr, int reason_addr) {
        if (IDLString_TEMP_STATIC_GEN_1 == null)
            IDLString_TEMP_STATIC_GEN_1 = IDLString.native_new();
        IDLString_TEMP_STATIC_GEN_1.internal_reset(data_addr, false);
        return onSave(IDLString_TEMP_STATIC_GEN_1, SaveReasonFlags.MAP.get(reason_addr));
    }

    /*[-JNI;-NATIVE]
return (jlong)new LoadSaveSettingsListenerImpl();
*/
    public static native long internal_native_create();

    /*[-JNI;-NATIVE]
LoadSaveSettingsListenerImpl* nativeObject = (LoadSaveSettingsListenerImpl*)this_addr;
nativeObject->setupCallback(env, object);
*/
    public native void internal_native_setupCallback(long this_addr);
}
